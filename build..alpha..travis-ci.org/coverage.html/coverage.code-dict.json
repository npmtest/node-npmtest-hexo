{"/home/travis/build/npmtest/node-npmtest-hexo/test.js":"/* istanbul instrument in package npmtest_hexo */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-hexo/lib.npmtest_hexo.js":"/* istanbul instrument in package npmtest_hexo */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_hexo = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_hexo = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-hexo/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-hexo && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_hexo */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_hexo\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_hexo.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_hexo.rollup.js'] =\n            local.assetsDict['/assets.npmtest_hexo.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_hexo.__dirname + '/lib.npmtest_hexo.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/hexo/index.js":"'use strict';\n\nvar Promise = require('bluebird');\nvar pathFn = require('path');\nvar tildify = require('tildify');\nvar Database = require('warehouse');\nvar _ = require('lodash');\nvar chalk = require('chalk');\nvar EventEmitter = require('events').EventEmitter;\nvar fs = require('hexo-fs');\nvar Module = require('module');\nvar vm = require('vm');\nvar pkg = require('../../package.json');\nvar logger = require('hexo-log');\nvar extend = require('../extend');\nvar Render = require('./render');\nvar registerModels = require('./register_models');\nvar Post = require('./post');\nvar Scaffold = require('./scaffold');\nvar Source = require('./source');\nvar Router = require('./router');\nvar Theme = require('../theme');\nvar Locals = require('./locals');\nvar defaultConfig = require('./default_config');\nvar loadDatabase = require('./load_database');\n\nvar libDir = pathFn.dirname(__dirname);\nvar sep = pathFn.sep;\nvar dbVersion = 1;\n\nfunction Hexo(base, args) {\n  base = base || process.cwd();\n  args = args || {};\n\n  EventEmitter.call(this);\n\n  this.base_dir = base + sep;\n  this.public_dir = pathFn.join(base, 'public') + sep;\n  this.source_dir = pathFn.join(base, 'source') + sep;\n  this.plugin_dir = pathFn.join(base, 'node_modules') + sep;\n  this.script_dir = pathFn.join(base, 'scripts') + sep;\n  this.scaffold_dir = pathFn.join(base, 'scaffolds') + sep;\n  this.theme_dir = pathFn.join(base, 'themes', defaultConfig.theme) + sep;\n  this.theme_script_dir = pathFn.join(this.theme_dir, 'scripts') + sep;\n\n  this.env = {\n    args: args,\n    debug: Boolean(args.debug),\n    safe: Boolean(args.safe),\n    silent: Boolean(args.silent),\n    env: process.env.NODE_ENV || 'development',\n    version: pkg.version,\n    init: false\n  };\n\n  var multiConfigPath = require('./multi_config_path')(this);\n  this.config_path = args.config ? multiConfigPath(base, args.config)\n                                 : pathFn.join(base, '_config.yml');\n\n  this.extend = {\n    console: new extend.Console(),\n    deployer: new extend.Deployer(),\n    filter: new extend.Filter(),\n    generator: new extend.Generator(),\n    helper: new extend.Helper(),\n    migrator: new extend.Migrator(),\n    processor: new extend.Processor(),\n    renderer: new extend.Renderer(),\n    tag: new extend.Tag()\n  };\n\n  this.config = _.cloneDeep(defaultConfig);\n\n  this.log = logger(this.env);\n\n  this.render = new Render(this);\n\n  this.route = new Router();\n\n  this.post = new Post(this);\n\n  this.scaffold = new Scaffold(this);\n\n  this._dbLoaded = false;\n\n  this._isGenerating = false;\n\n  this.database = new Database({\n    version: dbVersion,\n    path: pathFn.join(base, 'db.json')\n  });\n\n  registerModels(this);\n\n  this.source = new Source(this);\n  this.theme = new Theme(this);\n  this.locals = new Locals(this);\n  this._bindLocals();\n}\n\nrequire('util').inherits(Hexo, EventEmitter);\n\nHexo.prototype._bindLocals = function() {\n  var db = this.database;\n  var locals = this.locals;\n  var self = this;\n\n  locals.set('posts', function() {\n    var query = {};\n\n    if (!self.config.future) {\n      query.date = {$lte: Date.now()};\n    }\n\n    if (!self._showDrafts()) {\n      query.published = true;\n    }\n\n    return db.model('Post').find(query);\n  });\n\n  locals.set('pages', function() {\n    var query = {};\n\n    if (!self.config.future) {\n      query.date = {$lte: Date.now()};\n    }\n\n    return db.model('Page').find(query);\n  });\n\n  locals.set('categories', function() {\n    return db.model('Category');\n  });\n\n  locals.set('tags', function() {\n    return db.model('Tag');\n  });\n\n  locals.set('data', function() {\n    var obj = {};\n\n    db.model('Data').forEach(function(data) {\n      obj[data._id] = data.data;\n    });\n\n    return obj;\n  });\n};\n\nHexo.prototype.init = function() {\n  var self = this;\n\n  this.log.debug('Hexo version: %s', chalk.magenta(this.version));\n  this.log.debug('Working directory: %s', chalk.magenta(tildify(this.base_dir)));\n\n  // Load internal plugins\n  require('../plugins/console')(this);\n  require('../plugins/filter')(this);\n  require('../plugins/generator')(this);\n  require('../plugins/helper')(this);\n  require('../plugins/processor')(this);\n  require('../plugins/renderer')(this);\n  require('../plugins/tag')(this);\n\n  // Load config\n  return Promise.each([\n    'update_package', // Update package.json\n    'load_config', // Load config\n    'load_plugins' // Load external plugins & scripts\n  ], function(name) {\n    return require('./' + name)(self);\n  }).then(function() {\n    return self.execFilter('after_init', null, {context: self});\n  }).then(function() {\n    // Ready to go!\n    self.emit('ready');\n  });\n};\n\nHexo.prototype.call = function(name, args, callback) {\n  if (!callback && typeof args === 'function') {\n    callback = args;\n    args = {};\n  }\n\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n    var c = self.extend.console.get(name);\n\n    if (c) {\n      c.call(self, args).then(resolve, reject);\n    } else {\n      reject(new Error('Console `' + name + '` has not been registered yet!'));\n    }\n  }).asCallback(callback);\n};\n\nHexo.prototype.model = function(name, schema) {\n  return this.database.model(name, schema);\n};\n\nHexo.prototype.loadPlugin = function(path, callback) {\n  var self = this;\n\n  return fs.readFile(path).then(function(script) {\n    // Based on: https://github.com/joyent/node/blob/v0.10.33/src/node.js#L516\n    var module = new Module(path);\n    module.filename = path;\n    module.paths = Module._nodeModulePaths(path);\n\n    function require(path) {\n      return module.require(path);\n    }\n\n    require.resolve = function(request) {\n      return Module._resolveFilename(request, module);\n    };\n\n    require.main = process.mainModule;\n    require.extensions = Module._extensions;\n    require.cache = Module._cache;\n\n    script = '(function(exports, require, module, __filename, __dirname, hexo){' +\n      script + '});';\n\n    var fn = vm.runInThisContext(script, path);\n\n    return fn(module.exports, require, module, path, pathFn.dirname(path), self);\n  }).asCallback(callback);\n};\n\nHexo.prototype._showDrafts = function() {\n  var args = this.env.args;\n  return args.draft || args.drafts || this.config.render_drafts;\n};\n\nHexo.prototype.load = function(callback) {\n  var self = this;\n\n  return loadDatabase(this).then(function() {\n    self.log.info('Start processing');\n\n    return Promise.all([\n      self.source.process(),\n      self.theme.process()\n    ]);\n  }).then(function() {\n    return self._generate({cache: true});\n  }).asCallback(callback);\n};\n\nHexo.prototype.watch = function(callback) {\n  var self = this;\n\n  this._watchBox = _.debounce(function() {\n    return self._generate({cache: false});\n  }, 100);\n\n  return loadDatabase(this).then(function() {\n    self.log.info('Start processing');\n\n    return Promise.all([\n      self.source.watch(),\n      self.theme.watch()\n    ]);\n  }).then(function() {\n    self.source.on('processAfter', self._watchBox);\n    self.theme.on('processAfter', self._watchBox);\n\n    return self._generate({cache: false});\n  }).asCallback(callback);\n};\n\nHexo.prototype.unwatch = function() {\n  if (this._watchBox != null) {\n    this.source.removeListener('processAfter', this._watchBox);\n    this.theme.removeListener('processAfter', this._watchBox);\n\n    this._watchBox = null;\n  }\n\n  stopWatcher(this.source);\n  stopWatcher(this.theme);\n};\n\nfunction stopWatcher(box) {\n  if (box.isWatching()) box.unwatch();\n}\n\nHexo.prototype._generate = function(options) {\n  if (this._isGenerating) return;\n\n  options = options || {};\n  this._isGenerating = true;\n\n  var config = this.config;\n  var generators = this.extend.generator.list();\n  var route = this.route;\n  var keys = Object.keys(generators);\n  var self = this;\n  var routeList = route.list();\n  var log = this.log;\n  var theme = this.theme;\n  var newRouteList = [];\n  var siteLocals = {};\n\n  this.emit('generateBefore');\n\n  function Locals(path, locals) {\n    this.page = typeof locals === 'object' ? locals : {};\n    if (this.page.path == null) this.page.path = path;\n\n    this.path = path;\n    this.url = config.url + '/' + path;\n  }\n\n  Locals.prototype.config = config;\n  Locals.prototype.theme = _.assign({}, config, theme.config, config.theme_config);\n  Locals.prototype._ = _;\n  Locals.prototype.layout = 'layout';\n  Locals.prototype.cache = options.cache;\n  Locals.prototype.env = this.env;\n  Locals.prototype.view_dir = pathFn.join(this.theme_dir, 'layout') + sep;\n\n  // Run before_generate filters\n  return this.execFilter('before_generate', self.locals.get('data'), {context: this})\n  .then(function() {\n    self.locals.invalidate();\n    siteLocals = self.locals.toObject();\n    Locals.prototype.site = siteLocals;\n\n    // Run generators\n    return Promise.map(keys, function(key) {\n      var generator = generators[key];\n\n      return generator.call(self, siteLocals).then(function(data) {\n        log.debug('Generator: %s', chalk.magenta(key));\n        return data;\n      });\n    }).reduce(function(result, data) {\n      return data ? result.concat(data) : result;\n    }, []);\n  })\n  // Add routes\n  .map(function(item) {\n    if (typeof item !== 'object' || item.path == null) return;\n\n    var path = route.format(item.path);\n    var data = item.data;\n    var layout = item.layout;\n\n    newRouteList.push(path);\n\n    if (!layout) {\n      return route.set(path, data);\n    }\n\n    if (Array.isArray(layout)) {\n      layout = _.uniq(layout);\n    } else {\n      layout = [layout];\n    }\n\n    var locals = new Locals(path, data);\n    var layoutLength = layout.length;\n    var cache;\n\n    function saveCache(result) {\n      cache = result;\n      return result;\n    }\n\n    return self.execFilter('template_locals', locals, {context: self})\n    .then(function(locals) {\n      route.set(path, function() {\n        if (options.cache && cache != null) return cache;\n\n        var view, name;\n\n        for (var i = 0; i < layoutLength; i++) {\n          name = layout[i];\n          view = theme.getView(name);\n\n          if (view) {\n            log.debug('Rendering %s: %s', name, chalk.magenta(path));\n            return view.render(locals).then(saveCache);\n          }\n        }\n\n        log.warn('No layout: %s', chalk.magenta(path));\n      });\n    });\n  }).then(function() {\n    // Remove old routes\n    var removed = _.difference(routeList, newRouteList);\n\n    for (var i = 0, len = removed.length; i < len; i++) {\n      route.remove(removed[i]);\n    }\n\n    routeList.length = 0;\n    newRouteList.length = 0;\n\n    self.emit('generateAfter');\n\n    // Run after_generate filters\n    return self.execFilter('after_generate', null, {context: self});\n  }).finally(function() {\n    self._isGenerating = false;\n  });\n};\n\nHexo.prototype.exit = function(err) {\n  var self = this;\n\n  if (err) {\n    this.log.fatal(\n      {err: err},\n      'Something\\'s wrong. Maybe you can find the solution here: %s',\n      chalk.underline('http://hexo.io/docs/troubleshooting.html')\n    );\n  }\n\n  return this.execFilter('before_exit', null, {context: this}).then(function() {\n    self.emit('exit', err);\n  });\n};\n\nHexo.prototype.execFilter = function(type, data, options) {\n  return this.extend.filter.exec(type, data, options);\n};\n\nHexo.prototype.execFilterSync = function(type, data, options) {\n  return this.extend.filter.execSync(type, data, options);\n};\n\nHexo.lib_dir = Hexo.prototype.lib_dir = libDir + sep;\n\nHexo.core_dir = Hexo.prototype.core_dir = pathFn.dirname(libDir) + sep;\n\nHexo.version = Hexo.prototype.version = pkg.version;\n\nmodule.exports = Hexo;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-fs/lib/fs.js":"'use strict';\n\nvar Promise = require('bluebird');\nvar fs = require('graceful-fs');\nvar pathFn = require('path');\nvar chokidar = require('chokidar');\nvar escapeRegExp = require('escape-string-regexp');\n\nvar dirname = pathFn.dirname;\nvar join = pathFn.join;\nvar rEOL = new RegExp('\\\\r\\\\n', 'g');\n\nvar statAsync = Promise.promisify(fs.stat);\nvar readdirAsync = Promise.promisify(fs.readdir);\nvar unlinkAsync = Promise.promisify(fs.unlink);\nvar mkdirAsync = Promise.promisify(fs.mkdir);\nvar writeFileAsync = Promise.promisify(fs.writeFile);\nvar appendFileAsync = Promise.promisify(fs.appendFile);\nvar rmdirAsync = Promise.promisify(fs.rmdir);\nvar readFileAsync = Promise.promisify(fs.readFile);\nvar createReadStream = fs.createReadStream;\nvar createWriteStream = fs.createWriteStream;\nvar accessSync = fs.accessSync;\nvar accessAsync;\nvar exists, existsSync;\n\nif (fs.access) {\n  accessAsync = Promise.promisify(fs.access);\n\n  exists = _existsNew;\n  existsSync = _existsSyncNew;\n} else {\n  exists = _existsOld;\n  existsSync = fs.existsSync;\n}\n\nfunction _existsOld(path, callback) {\n  if (!path) throw new TypeError('path is required!');\n\n  return new Promise(function(resolve, reject) {\n    fs.exists(path, function(exist) {\n      resolve(exist);\n      if (typeof callback === 'function') callback(exist);\n    });\n  });\n}\n\nfunction _existsNew(path, callback) {\n  if (!path) throw new TypeError('path is required!');\n\n  return accessAsync(path).then(function() {\n    return true;\n  }, function() {\n\n    return false;\n  }).then(function(exist) {\n    if (typeof callback === 'function') callback(exist);\n    return exist;\n  });\n}\n\nfunction _existsSyncNew(path) {\n  if (!path) throw new TypeError('path is required!');\n\n  try {\n    fs.accessSync(path);\n  } catch (err) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction mkdirs(path, callback) {\n  if (!path) throw new TypeError('path is required!');\n\n  var parent = dirname(path);\n\n  return exists(parent).then(function(exist) {\n    if (!exist) return mkdirs(parent);\n  }).then(function() {\n    return mkdirAsync(path);\n  }).catch(function(err) {\n    if (err.cause.code !== 'EEXIST') throw err;\n  }).asCallback(callback);\n}\n\nfunction mkdirsSync(path) {\n  if (!path) throw new TypeError('path is required!');\n\n  var parent = dirname(path);\n  var exist = fs.existsSync(parent);\n\n  if (!exist) mkdirsSync(parent);\n  fs.mkdirSync(path);\n}\n\nfunction checkParent(path) {\n  if (!path) throw new TypeError('path is required!');\n\n  var parent = dirname(path);\n\n  return exists(parent).then(function(exist) {\n    if (!exist) return mkdirs(parent);\n  });\n}\n\nfunction checkParentSync(path) {\n  if (!path) throw new TypeError('path is required!');\n\n  var parent = dirname(path);\n  var exist = fs.existsSync(parent);\n\n  if (exist) return;\n\n  try {\n    mkdirsSync(parent);\n  } catch (err) {\n    if (err.code !== 'EEXIST') throw err;\n  }\n}\n\nfunction writeFile(path, data, options, callback) {\n  if (!path) throw new TypeError('path is required!');\n\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  return checkParent(path).then(function() {\n    return writeFileAsync(path, data, options);\n  }).asCallback(callback);\n}\n\nfunction writeFileSync(path, data, options) {\n  if (!path) throw new TypeError('path is required!');\n\n  checkParentSync(path);\n  fs.writeFileSync(path, data, options);\n}\n\nfunction appendFile(path, data, options, callback) {\n  if (!path) throw new TypeError('path is required!');\n\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  return checkParent(path).then(function() {\n    return appendFileAsync(path, data, options);\n  }).asCallback(callback);\n}\n\nfunction appendFileSync(path, data, options) {\n  if (!path) throw new TypeError('path is required!');\n\n  checkParentSync(path);\n  fs.appendFileSync(path, data, options);\n}\n\nfunction copyFile(src, dest, callback) {\n  if (!src) throw new TypeError('src is required!');\n  if (!dest) throw new TypeError('dest is required!');\n\n  return checkParent(dest).then(function() {\n    return new Promise(function(resolve, reject) {\n      var rs = createReadStream(src);\n      var ws = createWriteStream(dest);\n\n      rs.pipe(ws)\n        .on('error', reject);\n\n      ws.on('close', resolve)\n        .on('error', reject);\n    });\n  }).asCallback(callback);\n}\n\nfunction trueFn() {\n  return true;\n}\n\nfunction ignoreHiddenFiles(ignore) {\n  if (!ignore) return trueFn;\n\n  return function(item) {\n    return item[0] !== '.';\n  };\n}\n\nfunction ignoreFilesRegex(regex) {\n  if (!regex) return trueFn;\n\n  return function(item) {\n    return !regex.test(item);\n  };\n}\n\nfunction ignoreExcludeFiles(arr, parent) {\n  if (!arr || !arr.length) return trueFn;\n\n  // Build a map to make it faster.\n  var map = {};\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    map[arr[i]] = true;\n  }\n\n  return function(item) {\n    var path = join(parent, item.path);\n    return !map[path];\n  };\n}\n\nfunction reduceFiles(result, item) {\n  if (Array.isArray(item)) {\n    return result.concat(item);\n  }\n\n  result.push(item);\n  return result;\n}\n\nfunction _readAndFilterDir(path, options) {\n  return readdirAsync(path)\n    .filter(ignoreHiddenFiles(options.ignoreHidden == null ? true : options.ignoreHidden))\n    .filter(ignoreFilesRegex(options.ignorePattern))\n    .map(function(item) {\n      var fullPath = join(path, item);\n\n      return statAsync(fullPath).then(function(stats) {\n        return {\n          isDirectory: stats.isDirectory(),\n          path: item,\n          fullPath: fullPath\n        };\n      });\n    });\n}\n\nfunction _readAndFilterDirSync(path, options) {\n  return fs.readdirSync(path)\n    .filter(ignoreHiddenFiles(options.ignoreHidden == null ? true : options.ignoreHidden))\n    .filter(ignoreFilesRegex(options.ignorePattern))\n    .map(function(item) {\n      var fullPath = join(path, item);\n      var stats = fs.statSync(fullPath);\n\n      return {\n        isDirectory: stats.isDirectory(),\n        path: item,\n        fullPath: fullPath\n      };\n    });\n}\n\nfunction _copyDir(src, dest, options, parent) {\n  options = options || {};\n  parent = parent || '';\n\n  return checkParent(dest).then(function() {\n    return _readAndFilterDir(src, options);\n  })\n  .map(function(item) {\n    var childSrc = item.fullPath;\n    var childDest = join(dest, item.path);\n\n    if (item.isDirectory) {\n      return _copyDir(childSrc, childDest, options, join(parent, item.path));\n    }\n\n    return copyFile(childSrc, childDest, options)\n      .thenReturn(join(parent, item.path));\n  }).reduce(reduceFiles, []);\n}\n\nfunction copyDir(src, dest, options, callback) {\n  if (!src) throw new TypeError('src is required!');\n  if (!dest) throw new TypeError('dest is required!');\n\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  return _copyDir(src, dest, options).asCallback(callback);\n}\n\nfunction _listDir(path, options, parent) {\n  options = options || {};\n  parent = parent || '';\n\n  return _readAndFilterDir(path, options).map(function(item) {\n    if (item.isDirectory) {\n      return _listDir(item.fullPath, options, join(parent, item.path));\n    }\n\n    return join(parent, item.path);\n  }).reduce(reduceFiles, []);\n}\n\nfunction listDir(path, options, callback) {\n  if (!path) throw new TypeError('path is required!');\n\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  return _listDir(path, options).asCallback(callback);\n}\n\nfunction listDirSync(path, options, parent) {\n  if (!path) throw new TypeError('path is required!');\n\n  options = options || {};\n  parent = parent || '';\n\n  return _readAndFilterDirSync(path, options).map(function(item) {\n    if (item.isDirectory) {\n      return listDirSync(item.fullPath, options, join(parent, item.path));\n    }\n\n    return join(parent, item.path);\n  }).reduce(reduceFiles, []);\n}\n\nfunction escapeEOL(str) {\n  return str.replace(rEOL, '\\n');\n}\n\nfunction escapeBOM(str) {\n  return str.charCodeAt(0) === 0xFEFF ? str.substring(1) : str;\n}\n\nfunction escapeFileContent(content) {\n  return escapeBOM(escapeEOL(content));\n}\n\nfunction readFile(path, options, callback) {\n  if (!path) throw new TypeError('path is required!');\n\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  if (!options.hasOwnProperty('encoding')) options.encoding = 'utf8';\n\n  return readFileAsync(path, options).then(function(content) {\n    if (options.escape == null || options.escape) {\n      return escapeFileContent(content);\n    }\n\n    return content;\n  }).asCallback(callback);\n}\n\nfunction readFileSync(path, options) {\n  if (!path) throw new TypeError('path is required!');\n\n  options = options || {};\n  if (!options.hasOwnProperty('encoding')) options.encoding = 'utf8';\n\n  var content = fs.readFileSync(path, options);\n\n  if (options.escape == null || options.escape) {\n    return escapeFileContent(content);\n  }\n\n  return content;\n}\n\nfunction _emptyDir(path, options, parent) {\n  options = options || {};\n  parent = parent || '';\n\n  return _readAndFilterDir(path, options)\n  .filter(ignoreExcludeFiles(options.exclude, parent))\n  .map(function(item) {\n    var fullPath = item.fullPath;\n\n    if (item.isDirectory) {\n      return _emptyDir(fullPath, options, join(parent, item.path)).then(function(removed) {\n        return readdirAsync(fullPath).then(function(files) {\n          if (!files.length) return rmdirAsync(fullPath);\n        }).thenReturn(removed);\n      });\n    }\n\n    return unlinkAsync(fullPath).thenReturn(join(parent, item.path));\n  }).reduce(reduceFiles, []);\n}\n\nfunction emptyDir(path, options, callback) {\n  if (!path) throw new TypeError('path is required!');\n\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  return _emptyDir(path, options).asCallback(callback);\n}\n\nfunction emptyDirSync(path, options, parent) {\n  if (!path) throw new TypeError('path is required!');\n\n  options = options || {};\n  parent = parent || '';\n\n  return _readAndFilterDirSync(path, options)\n  .filter(ignoreExcludeFiles(options.exclude, parent))\n  .map(function(item) {\n    var childPath = item.fullPath;\n\n    if (item.isDirectory) {\n      var removed = emptyDirSync(childPath, options, join(parent, item.path));\n\n      if (!fs.readdirSync(childPath).length) {\n        rmdirSync(childPath);\n      }\n\n      return removed;\n    }\n\n    fs.unlinkSync(childPath);\n    return join(parent, item.path);\n  }).reduce(reduceFiles, []);\n}\n\nfunction rmdir(path, callback) {\n  if (!path) throw new TypeError('path is required!');\n\n  return readdirAsync(path).map(function(item) {\n    var childPath = join(path, item);\n\n    return statAsync(childPath).then(function(stats) {\n      if (stats.isDirectory()) {\n        return rmdir(childPath);\n      }\n\n      return unlinkAsync(childPath);\n    });\n  }).then(function() {\n    return rmdirAsync(path);\n  }).asCallback(callback);\n}\n\nfunction rmdirSync(path) {\n  if (!path) throw new TypeError('path is required!');\n\n  var files = fs.readdirSync(path);\n  var childPath;\n  var stats;\n\n  for (var i = 0, len = files.length; i < len; i++) {\n    childPath = join(path, files[i]);\n    stats = fs.statSync(childPath);\n\n    if (stats.isDirectory()) {\n      rmdirSync(childPath);\n    } else {\n      fs.unlinkSync(childPath);\n    }\n  }\n\n  fs.rmdirSync(path);\n}\n\nfunction watch(path, options, callback) {\n  if (!path) throw new TypeError('path is required!');\n\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  return new Promise(function(resolve, reject) {\n    var watcher = chokidar.watch(path, options);\n\n    watcher.on('ready', function() {\n      resolve(watcher);\n    });\n\n    watcher.on('error', reject);\n  }).asCallback(callback);\n}\n\nfunction _findUnusedPath(path, files) {\n  var extname = pathFn.extname(path);\n  var basename = pathFn.basename(path, extname);\n  var regex = new RegExp('^' + escapeRegExp(basename) + '(?:-(\\\\d+))?' + escapeRegExp(extname) + '$');\n  var item = '';\n  var num = -1;\n  var match, matchNum;\n\n  for (var i = 0, len = files.length; i < len; i++) {\n    item = files[i];\n    if (!regex.test(item)) continue;\n\n    match = item.match(regex);\n    matchNum = match[1] ? parseInt(match[1], 10) : 0;\n\n    if (matchNum > num) {\n      num = matchNum;\n    }\n  }\n\n  return join(dirname(path), basename + '-' + (num + 1) + extname);\n}\n\nfunction ensurePath(path, callback) {\n  if (!path) throw new TypeError('path is required!');\n\n  return exists(path).then(function(exist) {\n    if (!exist) return path;\n\n    return readdirAsync(dirname(path)).then(function(files) {\n      return _findUnusedPath(path, files);\n    });\n  }).asCallback(callback);\n}\n\nfunction ensurePathSync(path) {\n  if (!path) throw new TypeError('path is required!');\n  if (!fs.existsSync(path)) return path;\n\n  var files = fs.readdirSync(dirname(path));\n\n  return _findUnusedPath(path, files);\n}\n\nfunction ensureWriteStream(path, options, callback) {\n  if (!path) throw new TypeError('path is required!');\n\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  return checkParent(path).then(function() {\n    return fs.createWriteStream(path, options);\n  }).asCallback(callback);\n}\n\nfunction ensureWriteStreamSync(path, options) {\n  if (!path) throw new TypeError('path is required!');\n\n  checkParentSync(path);\n  return fs.createWriteStream(path, options);\n}\n\n// access\nif (fs.access) {\n  ['F_OK', 'R_OK', 'W_OK', 'X_OK'].forEach(function(key) {\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      value: fs[key],\n      writable: false\n    });\n  });\n\n  exports.access = accessAsync;\n  exports.accessSync = accessSync;\n}\n\n// appendFile\nexports.appendFile = appendFile;\nexports.appendFileSync = appendFileSync;\n\n// chmod\nexports.chmod = Promise.promisify(fs.chmod);\nexports.chmodSync = fs.chmodSync;\nexports.fchmod = Promise.promisify(fs.fchmod);\nexports.fchmodSync = fs.fchmodSync;\nexports.lchmod = Promise.promisify(fs.lchmod);\nexports.lchmodSync = fs.lchmodSync;\n\n// chown\nexports.chown = Promise.promisify(fs.chown);\nexports.chownSync = fs.chownSync;\nexports.fchown = Promise.promisify(fs.fchown);\nexports.fchownSync = fs.fchownSync;\nexports.lchown = Promise.promisify(fs.lchown);\nexports.lchownSync = fs.lchownSync;\n\n// close\nexports.close = Promise.promisify(fs.close);\nexports.closeSync = fs.closeSync;\n\n// copy\nexports.copyDir = copyDir;\nexports.copyFile = copyFile;\n\n// createStream\nexports.createReadStream = createReadStream;\nexports.createWriteStream = createWriteStream;\n\n// emptyDir\nexports.emptyDir = emptyDir;\nexports.emptyDirSync = emptyDirSync;\n\n// ensurePath\nexports.ensurePath = ensurePath;\nexports.ensurePathSync = ensurePathSync;\n\n// ensureWriteStream\nexports.ensureWriteStream = ensureWriteStream;\nexports.ensureWriteStreamSync = ensureWriteStreamSync;\n\n// exists\nexports.exists = exists;\nexports.existsSync = existsSync;\n\n// fsync\nexports.fsync = Promise.promisify(fs.fsync);\nexports.fsyncSync = fs.fsyncSync;\n\n// link\nexports.link = Promise.promisify(fs.link);\nexports.linkSync = fs.linkSync;\n\n// listDir\nexports.listDir = listDir;\nexports.listDirSync = listDirSync;\n\n// mkdir\nexports.mkdir = mkdirAsync;\nexports.mkdirSync = fs.mkdirSync;\n\n// mkdirs\nexports.mkdirs = mkdirs;\nexports.mkdirsSync = mkdirsSync;\n\n// open\nexports.open = Promise.promisify(fs.open);\nexports.openSync = fs.openSync;\n\n// symlink\nexports.symlink = Promise.promisify(fs.symlink);\nexports.symlinkSync = fs.symlinkSync;\n\n// read\nexports.read = Promise.promisify(fs.read);\nexports.readSync = fs.readSync;\n\n// readdir\nexports.readdir = readdirAsync;\nexports.readdirSync = fs.readdirSync;\n\n// readFile\nexports.readFile = readFile;\nexports.readFileSync = readFileSync;\n\n// readlink\nexports.readlink = Promise.promisify(fs.readlink);\nexports.readlinkSync = fs.readlinkSync;\n\n// realpath\nexports.realpath = Promise.promisify(fs.realpath);\nexports.realpathSync = fs.realpathSync;\n\n// rename\nexports.rename = Promise.promisify(fs.rename);\nexports.renameSync = fs.renameSync;\n\n// rmdir\nexports.rmdir = rmdir;\nexports.rmdirSync = rmdirSync;\n\n// stat\nexports.stat = statAsync;\nexports.statSync = fs.statSync;\nexports.fstat = Promise.promisify(fs.fstat);\nexports.fstatSync = fs.statSync;\nexports.lstat = Promise.promisify(fs.lstat);\nexports.lstatSync = fs.lstatSync;\n\n// truncate\nexports.truncate = Promise.promisify(fs.truncate);\nexports.truncateSync = fs.truncateSync;\nexports.ftruncate = Promise.promisify(fs.ftruncate);\nexports.ftruncateSync = fs.ftruncateSync;\n\n// unlink\nexports.unlink = unlinkAsync;\nexports.unlinkSync = fs.unlinkSync;\n\n// utimes\nexports.utimes = Promise.promisify(fs.utimes);\nexports.utimesSync = fs.utimesSync;\nexports.futimes = Promise.promisify(fs.futimes);\nexports.futimesSync = fs.futimesSync;\n\n// watch\nexports.watch = watch;\nexports.watchFile = fs.watchFile;\nexports.unwatchFile = fs.unwatchFile;\n\n// write\nexports.write = Promise.promisify(fs.write);\nexports.writeSync = fs.writeSync;\n\n// writeFile\nexports.writeFile = writeFile;\nexports.writeFileSync = writeFileSync;\n\n// Static classes\nexports.Stats = fs.Stats;\nexports.ReadStream = fs.ReadStream;\nexports.WriteStream = fs.WriteStream;\nexports.FileReadStream = fs.FileReadStream;\nexports.FileWriteStream = fs.FileWriteStream;\nexports.SyncWriteStream = fs.SyncWriteStream;\n\n// util\nexports.escapeBOM = escapeBOM;\nexports.escapeEOL = escapeEOL;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-log/lib/log.js":"'use strict';\n\nvar bunyan = require('bunyan');\nvar chalk = require('chalk');\nvar Writable = require('stream').Writable;\n\nvar levelNames = {\n  10: 'TRACE',\n  20: 'DEBUG',\n  30: 'INFO ',\n  40: 'WARN ',\n  50: 'ERROR',\n  60: 'FATAL'\n};\n\nvar levelColors = {\n  10: 'gray',\n  20: 'gray',\n  30: 'green',\n  40: 'yellow',\n  50: 'red',\n  60: 'magenta'\n};\n\nfunction ConsoleStream(env) {\n  Writable.call(this, {objectMode: true});\n\n  this.debug = env.debug;\n}\n\nrequire('util').inherits(ConsoleStream, Writable);\n\nConsoleStream.prototype._write = function(data, enc, callback) {\n  var level = data.level;\n  var msg = '';\n\n  // Time\n  if (this.debug) {\n    msg += chalk.gray(formatTime(data.time)) + ' ';\n  }\n\n  // Level\n  msg += chalk[levelColors[level]](levelNames[level]) + ' ';\n\n  // Message\n  msg += data.msg + '\\n';\n\n  // Error\n  if (data.err) {\n    var err = data.err.stack || data.err.message;\n    if (err) msg += chalk.gray(err) + '\\n';\n  }\n\n  if (level >= 40) {\n    process.stderr.write(msg);\n  } else {\n    process.stdout.write(msg);\n  }\n\n  callback();\n};\n\nfunction formatTime(date) {\n  return date.toISOString().substring(11, 23);\n}\n\nfunction createLogger(options) {\n  options = options || {};\n\n  var streams = [];\n\n  if (!options.silent) {\n    streams.push({\n      type: 'raw',\n      level: options.debug ? 'trace' : 'info',\n      stream: new ConsoleStream(options)\n    });\n  }\n\n  if (options.debug) {\n    streams.push({\n      level: 'trace',\n      path: 'debug.log'\n    });\n  }\n\n  var logger = bunyan.createLogger({\n    name: options.name || 'hexo',\n    streams: streams,\n    serializers: {\n      err: bunyan.stdSerializers.err\n    }\n  });\n\n  // Alias for logger levels\n  logger.d = logger.debug;\n  logger.i = logger.info;\n  logger.w = logger.warn;\n  logger.e = logger.error;\n  logger.log = logger.info;\n\n  return logger;\n}\n\nmodule.exports = createLogger;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/extend/index.js":"'use strict';\n\nexports.Console = require('./console');\nexports.Deployer = require('./deployer');\nexports.Filter = require('./filter');\nexports.Generator = require('./generator');\nexports.Helper = require('./helper');\nexports.Migrator = require('./migrator');\nexports.Processor = require('./processor');\nexports.Renderer = require('./renderer');\nexports.Tag = require('./tag');\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/extend/console.js":"'use strict';\n\nvar Promise = require('bluebird');\nvar abbrev = require('abbrev');\n\nfunction Console() {\n  this.store = {};\n  this.alias = {};\n}\n\nConsole.prototype.get = function(name) {\n  name = name.toLowerCase();\n  return this.store[this.alias[name]];\n};\n\nConsole.prototype.list = function() {\n  return this.store;\n};\n\nConsole.prototype.register = function(name, desc, options, fn) {\n  if (!name) throw new TypeError('name is required');\n\n  if (!fn) {\n    if (options) {\n      if (typeof options === 'function') {\n        fn = options;\n\n        if (typeof desc === 'object') { // name, options, fn\n          options = desc;\n          desc = '';\n        } else { // name, desc, fn\n          options = {};\n        }\n      } else {\n        throw new TypeError('fn must be a function');\n      }\n    } else {\n      // name, fn\n      if (typeof desc === 'function') {\n        fn = desc;\n        options = {};\n        desc = '';\n      } else {\n        throw new TypeError('fn must be a function');\n      }\n    }\n  }\n\n  if (fn.length > 1) {\n    fn = Promise.promisify(fn);\n  } else {\n    fn = Promise.method(fn);\n  }\n\n  var c = this.store[name.toLowerCase()] = fn;\n  c.options = options;\n  c.desc = desc;\n\n  this.alias = abbrev(Object.keys(this.store));\n};\n\nmodule.exports = Console;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/extend/deployer.js":"'use strict';\n\nvar Promise = require('bluebird');\n\nfunction Deployer() {\n  this.store = {};\n}\n\nDeployer.prototype.list = function() {\n  return this.store;\n};\n\nDeployer.prototype.get = function(name) {\n  return this.store[name];\n};\n\nDeployer.prototype.register = function(name, fn) {\n  if (!name) throw new TypeError('name is required');\n  if (typeof fn !== 'function') throw new TypeError('fn must be a function');\n\n  if (fn.length > 1) {\n    fn = Promise.promisify(fn);\n  } else {\n    fn = Promise.method(fn);\n  }\n\n  this.store[name] = fn;\n};\n\nmodule.exports = Deployer;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/extend/filter.js":"'use strict';\n\nvar Promise = require('bluebird');\n\nvar typeAlias = {\n  pre: 'before_post_render',\n  post: 'after_post_render'\n};\n\nfunction Filter() {\n  this.store = {};\n}\n\nFilter.prototype.list = function(type) {\n  if (!type) return this.store;\n  return this.store[type] || [];\n};\n\nFilter.prototype.register = function(type, fn, priority) {\n  if (!priority) {\n    if (typeof type === 'function') {\n      priority = fn;\n      fn = type;\n      type = 'after_post_render';\n    }\n  }\n\n  if (typeof fn !== 'function') throw new TypeError('fn must be a function');\n\n  type = typeAlias[type] || type;\n  priority = priority == null ? 10 : priority;\n\n  var store = this.store[type] = this.store[type] || [];\n\n  fn.priority = priority;\n  store.push(fn);\n\n  store.sort(function(a, b) {\n    return a.priority - b.priority;\n  });\n};\n\nFilter.prototype.unregister = function(type, fn) {\n  if (!type) throw new TypeError('type is required');\n  if (typeof fn !== 'function') throw new TypeError('fn must be a function');\n\n  var list = this.list(type);\n  if (!list || !list.length) return;\n\n  for (var i = 0, len = list.length; i < len; i++) {\n    if (list[i] === fn) {\n      list.splice(i, 1);\n      break;\n    }\n  }\n};\n\nFilter.prototype.exec = function(type, data, options) {\n  options = options || {};\n\n  var filters = this.list(type);\n  var ctx = options.context;\n  var args = options.args || [];\n\n  args.unshift(data);\n\n  return Promise.each(filters, function(filter) {\n    return Promise.method(filter).apply(ctx, args).then(function(result) {\n      args[0] = result == null ? data : result;\n      return args[0];\n    });\n  }).then(function() {\n    return args[0];\n  });\n};\n\nFilter.prototype.execSync = function(type, data, options) {\n  options = options || {};\n\n  var filters = this.list(type);\n  var ctx = options.context;\n  var args = options.args || [];\n  var result;\n\n  args.unshift(data);\n\n  for (var i = 0, len = filters.length; i < len; i++) {\n    result = filters[i].apply(ctx, args);\n    args[0] = result == null ? data : result;\n  }\n\n  return args[0];\n};\n\nmodule.exports = Filter;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/extend/generator.js":"'use strict';\n\nvar Promise = require('bluebird');\n\nfunction Generator() {\n  this.id = 0;\n  this.store = {};\n}\n\nGenerator.prototype.list = function() {\n  return this.store;\n};\n\nGenerator.prototype.get = function(name) {\n  return this.store[name];\n};\n\nGenerator.prototype.register = function(name, fn) {\n  if (!fn) {\n    if (typeof name === 'function') {\n      fn = name;\n      name = 'generator-' + this.id++;\n    } else {\n      throw new TypeError('fn must be a function');\n    }\n  }\n\n  if (fn.length > 1) fn = Promise.promisify(fn);\n  this.store[name] = Promise.method(fn);\n};\n\nmodule.exports = Generator;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/extend/helper.js":"'use strict';\n\nfunction Helper() {\n  this.store = {};\n}\n\nHelper.prototype.list = function() {\n  return this.store;\n};\n\nHelper.prototype.get = function(name) {\n  return this.store[name];\n};\n\nHelper.prototype.register = function(name, fn) {\n  if (!name) throw new TypeError('name is required');\n  if (typeof fn !== 'function') throw new TypeError('fn must be a function');\n\n  this.store[name] = fn;\n};\n\nmodule.exports = Helper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/extend/migrator.js":"'use strict';\n\nvar Promise = require('bluebird');\n\nfunction Migrator() {\n  this.store = {};\n}\n\nMigrator.prototype.list = function() {\n  return this.store;\n};\n\nMigrator.prototype.get = function(name) {\n  return this.store[name];\n};\n\nMigrator.prototype.register = function(name, fn) {\n  if (!name) throw new TypeError('name is required');\n  if (typeof fn !== 'function') throw new TypeError('fn must be a function');\n\n  if (fn.length > 1) {\n    fn = Promise.promisify(fn);\n  } else {\n    fn = Promise.method(fn);\n  }\n\n  this.store[name] = fn;\n};\n\nmodule.exports = Migrator;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/extend/processor.js":"'use strict';\n\nvar Promise = require('bluebird');\nvar Pattern = require('hexo-util').Pattern;\n\nfunction Processor() {\n  this.store = [];\n}\n\nProcessor.prototype.list = function() {\n  return this.store;\n};\n\nProcessor.prototype.register = function(pattern, fn) {\n  if (!fn) {\n    if (typeof pattern === 'function') {\n      fn = pattern;\n      pattern = /(.*)/;\n    } else {\n      throw new TypeError('fn must be a function');\n    }\n  }\n\n  if (fn.length > 1) {\n    fn = Promise.promisify(fn);\n  } else {\n    fn = Promise.method(fn);\n  }\n\n  this.store.push({\n    pattern: new Pattern(pattern),\n    process: fn\n  });\n};\n\nmodule.exports = Processor;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/index.js":"'use strict';\n\nvar hash = require('./hash');\n\nexports.escapeDiacritic = require('./escape_diacritic');\nexports.escapeHTML = require('./escape_html');\nexports.escapeRegExp = require('./escape_regexp');\nexports.highlight = require('./highlight');\nexports.htmlTag = require('./html_tag');\nexports.Pattern = require('./pattern');\nexports.Permalink = require('./permalink');\nexports.slugize = require('./slugize');\nexports.spawn = require('./spawn');\nexports.stripHTML = require('./strip_html');\nexports.truncate = require('./truncate');\nexports.wordWrap = require('./word_wrap');\nexports.hash = hash.hash;\nexports.HashStream = hash.HashStream;\nexports.CacheStream = require('./cache_stream');\nexports.camelCaseKeys = require('./camel_case_keys');\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/hash.js":"'use strict';\n\nvar Stream = require('stream');\nvar Transform = Stream.Transform;\nvar crypto = require('crypto');\n\nvar ALGORITHM = 'sha1';\n\nfunction HashStream() {\n  Transform.call(this, {\n    objectMode: true\n  });\n\n  this._hash = crypto.createHash(ALGORITHM);\n}\n\nrequire('util').inherits(HashStream, Transform);\n\nHashStream.prototype._transform = function(chunk, enc, callback) {\n  var buffer = chunk instanceof Buffer ? chunk : new Buffer(chunk, enc);\n\n  this._hash.update(buffer);\n  callback();\n};\n\nHashStream.prototype._flush = function(callback) {\n  this.push(this._hash.digest());\n  callback();\n};\n\nexports.hash = function(content) {\n  var hash = crypto.createHash(ALGORITHM);\n  hash.update(content);\n  return hash.digest();\n};\n\nexports.HashStream = HashStream;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/escape_diacritic.js":"'use strict';\n\nvar defaultDiacriticsRemovalap = [\n  {'base':'A', 'letters':'\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F'},\n  {'base':'AA','letters':'\\uA732'},\n  {'base':'AE','letters':'\\u00C6\\u01FC\\u01E2'},\n  {'base':'AO','letters':'\\uA734'},\n  {'base':'AU','letters':'\\uA736'},\n  {'base':'AV','letters':'\\uA738\\uA73A'},\n  {'base':'AY','letters':'\\uA73C'},\n  {'base':'B', 'letters':'\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181'},\n  {'base':'C', 'letters':'\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E'},\n  {'base':'D', 'letters':'\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779'},\n  {'base':'DZ','letters':'\\u01F1\\u01C4'},\n  {'base':'Dz','letters':'\\u01F2\\u01C5'},\n  {'base':'E', 'letters':'\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E'},\n  {'base':'F', 'letters':'\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B'},\n  {'base':'G', 'letters':'\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E'},\n  {'base':'H', 'letters':'\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D'},\n  {'base':'I', 'letters':'\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197'},\n  {'base':'J', 'letters':'\\u004A\\u24BF\\uFF2A\\u0134\\u0248'},\n  {'base':'K', 'letters':'\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2'},\n  {'base':'L', 'letters':'\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780'},\n  {'base':'LJ','letters':'\\u01C7'},\n  {'base':'Lj','letters':'\\u01C8'},\n  {'base':'M', 'letters':'\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C'},\n  {'base':'N', 'letters':'\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4'},\n  {'base':'NJ','letters':'\\u01CA'},\n  {'base':'Nj','letters':'\\u01CB'},\n  {'base':'O', 'letters':'\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C'},\n  {'base':'OI','letters':'\\u01A2'},\n  {'base':'OO','letters':'\\uA74E'},\n  {'base':'OU','letters':'\\u0222'},\n  {'base':'OE','letters':'\\u008C\\u0152'},\n  {'base':'oe','letters':'\\u009C\\u0153'},\n  {'base':'P', 'letters':'\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754'},\n  {'base':'Q', 'letters':'\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A'},\n  {'base':'R', 'letters':'\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782'},\n  {'base':'S', 'letters':'\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784'},\n  {'base':'T', 'letters':'\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786'},\n  {'base':'TZ','letters':'\\uA728'},\n  {'base':'U', 'letters':'\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244'},\n  {'base':'V', 'letters':'\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245'},\n  {'base':'VY','letters':'\\uA760'},\n  {'base':'W', 'letters':'\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72'},\n  {'base':'X', 'letters':'\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C'},\n  {'base':'Y', 'letters':'\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE'},\n  {'base':'Z', 'letters':'\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762'},\n  {'base':'a', 'letters':'\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250'},\n  {'base':'aa','letters':'\\uA733'},\n  {'base':'ae','letters':'\\u00E6\\u01FD\\u01E3'},\n  {'base':'ao','letters':'\\uA735'},\n  {'base':'au','letters':'\\uA737'},\n  {'base':'av','letters':'\\uA739\\uA73B'},\n  {'base':'ay','letters':'\\uA73D'},\n  {'base':'b', 'letters':'\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253'},\n  {'base':'c', 'letters':'\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184'},\n  {'base':'d', 'letters':'\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A'},\n  {'base':'dz','letters':'\\u01F3\\u01C6'},\n  {'base':'e', 'letters':'\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD'},\n  {'base':'f', 'letters':'\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C'},\n  {'base':'g', 'letters':'\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F'},\n  {'base':'h', 'letters':'\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265'},\n  {'base':'hv','letters':'\\u0195'},\n  {'base':'i', 'letters':'\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131'},\n  {'base':'j', 'letters':'\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249'},\n  {'base':'k', 'letters':'\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3'},\n  {'base':'l', 'letters':'\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747'},\n  {'base':'lj','letters':'\\u01C9'},\n  {'base':'m', 'letters':'\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F'},\n  {'base':'n', 'letters':'\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5'},\n  {'base':'nj','letters':'\\u01CC'},\n  {'base':'o', 'letters':'\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275'},\n  {'base':'oi','letters':'\\u01A3'},\n  {'base':'ou','letters':'\\u0223'},\n  {'base':'oo','letters':'\\uA74F'},\n  {'base':'p', 'letters':'\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755'},\n  {'base':'q', 'letters':'\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759'},\n  {'base':'r', 'letters':'\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783'},\n  {'base':'s', 'letters':'\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B'},\n  {'base':'t', 'letters':'\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787'},\n  {'base':'tz','letters':'\\uA729'},\n  {'base':'u', 'letters': '\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289'},\n  {'base':'v', 'letters':'\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C'},\n  {'base':'vy','letters':'\\uA761'},\n  {'base':'w', 'letters':'\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73'},\n  {'base':'x', 'letters':'\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D'},\n  {'base':'y', 'letters':'\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF'},\n  {'base':'z', 'letters':'\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763'}\n];\n\nvar diacriticsMap = {};\n\nfor (var i = 0; i < defaultDiacriticsRemovalap.length; i++) {\n  var letters = defaultDiacriticsRemovalap[i].letters.split('');\n\n  for (var j = 0; j < letters.length; j++) {\n    diacriticsMap[letters[j]] = defaultDiacriticsRemovalap[i].base;\n  }\n}\n\nfunction escapeDiacritic(str) {\n  if (typeof str !== 'string') throw new TypeError('str must be a string!');\n\n  // http://stackoverflow.com/a/18391901\n  return str.replace(/[^\\u0000-\\u007E]/g, function(a) {\n    return diacriticsMap[a] || a;\n  });\n}\n\nmodule.exports = escapeDiacritic;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/escape_html.js":"'use strict';\n\nvar htmlEntityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;',\n  '/': '&#x2F;'\n};\n\nfunction escapeHTML(str) {\n  if (typeof str !== 'string') throw new TypeError('str must be a string!');\n\n  // http://stackoverflow.com/a/12034334\n  return str.replace(/[&<>\"'\\/]/g, function(a) {\n    return htmlEntityMap[a];\n  });\n}\n\nmodule.exports = escapeHTML;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/escape_regexp.js":"'use strict';\n\nfunction escapeRegExp(str) {\n  if (typeof str !== 'string') throw new TypeError('str must be a string!');\n\n  // http://stackoverflow.com/a/6969486\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\n\nmodule.exports = escapeRegExp;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/highlight.js":"'use strict';\n\nvar hljs = require('highlight.js/lib/highlight');\nvar Entities = require('html-entities').XmlEntities;\nvar entities = new Entities();\nvar alias = require('../highlight_alias.json');\n\nhljs.configure({\n  classPrefix: ''\n});\n\nfunction highlightUtil(str, options) {\n  if (typeof str !== 'string') throw new TypeError('str must be a string!');\n  options = options || {};\n\n  var gutter = options.hasOwnProperty('gutter') ? options.gutter : true;\n  var wrap = options.hasOwnProperty('wrap') ? options.wrap : true;\n  var firstLine = options.hasOwnProperty('firstLine') ? +options.firstLine : 1;\n  var caption = options.caption;\n  var mark = options.hasOwnProperty('mark') ? options.mark : [];\n  var tab = options.tab;\n  var data = highlight(str, options);\n\n  if (!wrap) return data.value;\n\n  var lines = data.value.split('\\n');\n  var numbers = '';\n  var content = '';\n  var result = '';\n  var line;\n\n  for (var i = 0, len = lines.length; i < len; i++) {\n    line = lines[i];\n    if (tab) line = replaceTabs(line, tab);\n    numbers += '<div class=\"line\">' + (firstLine + i) + '</div>';\n    content += '<div class=\"line';\n    content += (mark.indexOf(firstLine + i) !== -1) ? ' marked' : '';\n    content += '\">' + line + '</div>';\n  }\n\n  result += '<figure class=\"highlight' + (data.language ? ' ' + data.language : '') + '\">';\n\n  if (caption) {\n    result += '<figcaption>' + caption + '</figcaption>';\n  }\n\n  result += '<table><tr>';\n\n  if (gutter) {\n    result += '<td class=\"gutter\"><pre>' + numbers + '</pre></td>';\n  }\n\n  result += '<td class=\"code\"><pre>' + content + '</pre></td>';\n  result += '</tr></table></figure>';\n\n  return result;\n}\n\nfunction encodePlainString(str) {\n  return entities.encode(str);\n}\n\nfunction replaceTabs(str, tab) {\n  return str.replace(/^\\t+/, function(match) {\n    var result = '';\n\n    for (var i = 0, len = match.length; i < len; i++) {\n      result += tab;\n    }\n\n    return result;\n  });\n}\n\nfunction loadLanguage(lang) {\n  hljs.registerLanguage(lang, require('highlight.js/lib/languages/' + lang));\n}\n\nfunction tryLanguage(lang) {\n  if (hljs.getLanguage(lang)) return true;\n  if (!alias.aliases[lang]) return false;\n\n  loadLanguage(alias.aliases[lang]);\n  return true;\n}\n\nfunction loadAllLanguages() {\n  alias.languages.filter(function(lang) {\n    return !hljs.getLanguage(lang);\n  }).forEach(loadLanguage);\n}\n\nfunction highlight(str, options) {\n  var lang = options.lang;\n  var autoDetect = options.hasOwnProperty('autoDetect') ? options.autoDetect : false;\n\n  if (!lang) {\n    if (autoDetect) {\n      loadAllLanguages();\n      return hljs.highlightAuto(str);\n    }\n\n    lang = 'plain';\n  }\n\n  var result = {\n    value: encodePlainString(str),\n    language: lang.toLowerCase()\n  };\n\n  if (result.language === 'plain') {\n    return result;\n  }\n\n  if (!tryLanguage(result.language)) {\n    result.language = 'plain';\n    return result;\n  }\n\n  return tryHighlight(str, result.language) || result;\n}\n\nfunction tryHighlight(str, lang) {\n  try {\n    return hljs.highlight(lang, str);\n  } catch (err) {\n    return;\n  }\n}\n\nmodule.exports = highlightUtil;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/html_tag.js":"'use strict';\n\nfunction htmlTag(tag, attrs, text) {\n  if (!tag) throw new TypeError('tag is required!');\n\n  var result = '<' + tag;\n\n  for (var i in attrs) {\n    if (attrs[i]) result += ' ' + i + '=\"' + attrs[i] + '\"';\n  }\n\n  result += text == null ? '>' : '>' + text + '</' + tag + '>';\n\n  return result;\n}\n\nmodule.exports = htmlTag;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/pattern.js":"'use strict';\n\nvar escapeRegExp = require('./escape_regexp');\n\nvar rParam = /([:\\*])([\\w\\?]*)?/g;\n\nfunction Pattern(rule) {\n  if (rule instanceof Pattern) {\n    return rule;\n  } else if (typeof rule === 'function') {\n    this.match = rule;\n  } else if (rule instanceof RegExp) {\n    this.match = regexFilter(rule);\n  } else if (typeof rule === 'string') {\n    this.match = stringFilter(rule);\n  } else {\n    throw new TypeError('rule must be a function, a string or a regular expression.');\n  }\n}\n\nPattern.prototype.test = function(str) {\n  return Boolean(this.match(str));\n};\n\nfunction regexFilter(rule) {\n  return function(str) {\n    return str.match(rule);\n  };\n}\n\nfunction stringFilter(rule) {\n  var params = [];\n\n  var regex = escapeRegExp(rule)\n    .replace(/\\\\([\\*\\?])/g, '$1')\n    .replace(rParam, function(match, operator, name) {\n      var str = '';\n\n      if (operator === '*') {\n        str = '(.*)?';\n      } else {\n        str = '([^\\\\/]+)';\n      }\n\n      if (name) {\n        if (name[name.length - 1] === '?') {\n          name = name.slice(0, name.length - 1);\n          str += '?';\n        }\n\n        params.push(name);\n      }\n\n      return str;\n    });\n\n  return function(str) {\n    var match = str.match(regex);\n    if (!match) return;\n\n    var result = {};\n    var name;\n\n    for (var i = 0, len = match.length; i < len; i++) {\n      name = params[i - 1];\n      result[i] = match[i];\n      if (name) result[name] = match[i];\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = Pattern;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/permalink.js":"'use strict';\n\nvar escapeRegExp = require('./escape_regexp');\n\nvar rParam = /:(\\w+)/g;\n\nfunction Permalink(rule, options) {\n  if (!rule) throw new TypeError('rule is required!');\n  options = options || {};\n\n  var segments = options.segments || {};\n  var params = [];\n\n  var regex = escapeRegExp(rule)\n    .replace(rParam, function(match, name) {\n      params.push(name);\n\n      if (segments.hasOwnProperty(name)) {\n        var segment = segments[name];\n\n        if (segment instanceof RegExp) {\n          return segment.source;\n        }\n\n        return segment;\n      }\n\n      return '(.+?)';\n    });\n\n  this.rule = rule;\n  this.regex = new RegExp('^' + regex + '$');\n  this.params = params;\n}\n\nPermalink.prototype.test = function(str) {\n  return this.regex.test(str);\n};\n\nPermalink.prototype.parse = function(str) {\n  var match = str.match(this.regex);\n  var params = this.params;\n  var result = {};\n\n  if (!match) return;\n\n  for (var i = 1, len = match.length; i < len; i++) {\n    result[params[i - 1]] = match[i];\n  }\n\n  return result;\n};\n\nPermalink.prototype.stringify = function(data) {\n  return this.rule.replace(rParam, function(match, name) {\n    return data[name];\n  });\n};\n\nmodule.exports = Permalink;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/slugize.js":"'use strict';\n\nvar escapeDiacritic = require('./escape_diacritic');\nvar escapeRegExp = require('./escape_regexp');\nvar rControl = /[\\u0000-\\u001f]/g;\nvar rSpecial = /[\\s~`!@#\\$%\\^&\\*\\(\\)\\-_\\+=\\[\\]\\{\\}\\|\\\\;:\"'<>,\\.\\?\\/]+/g;\n\nfunction slugize(str, options) {\n  if (typeof str !== 'string') throw new TypeError('str must be a string!');\n  options = options || {};\n\n  var separator = options.separator || '-';\n  var escapedSep = escapeRegExp(separator);\n\n  var result = escapeDiacritic(str)\n    // Remove control characters\n    .replace(rControl, '')\n    // Replace special characters\n    .replace(rSpecial, separator)\n    // Remove continous separators\n    .replace(new RegExp(escapedSep + '{2,}', 'g'), separator)\n    // Remove prefixing and trailing separtors\n    .replace(new RegExp('^' + escapedSep + '+|' + escapedSep + '+$', 'g'), '');\n\n  switch (options.transform){\n    case 1:\n      return result.toLowerCase();\n\n    case 2:\n      return result.toUpperCase();\n\n    default:\n      return result;\n  }\n}\n\nmodule.exports = slugize;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/spawn.js":"'use strict';\n\nvar spawn = require('cross-spawn');\nvar Promise = require('bluebird');\nvar CacheStream = require('./cache_stream');\n\nfunction promiseSpawn(command, args, options) {\n  if (!command) throw new TypeError('command is required!');\n\n  if (!options && args && !Array.isArray(args)) {\n    options = args;\n    args = [];\n  }\n\n  args = args || [];\n  options = options || {};\n\n  return new Promise(function(resolve, reject) {\n    var task = spawn(command, args, options);\n    var verbose = options.verbose;\n    var encoding = options.hasOwnProperty('encoding') ? options.encoding : 'utf8';\n    var stdoutCache = new CacheStream();\n    var stderrCache = new CacheStream();\n\n    if (task.stdout) {\n      var stdout = task.stdout.pipe(stdoutCache);\n      if (verbose) stdout.pipe(process.stdout);\n    }\n\n    if (task.stderr) {\n      var stderr = task.stderr.pipe(stderrCache);\n      if (verbose) stderr.pipe(process.stderr);\n    }\n\n    task.on('close', function(code) {\n      if (code) {\n        var e = new Error(getCache(stderrCache, encoding));\n        e.code = code;\n\n        return reject(e);\n      }\n\n      resolve(getCache(stdoutCache, encoding));\n    });\n\n    task.on('error', reject);\n\n    // Listen to exit events if neither stdout and stderr exist (inherit stdio)\n    if (!task.stdout && !task.stderr) {\n      task.on('exit', function(code) {\n        if (code) {\n          var e = new Error('Spawn failed');\n          e.code = code;\n\n          return reject(e);\n        }\n\n        resolve();\n      });\n    }\n  });\n}\n\nfunction getCache(stream, encoding) {\n  var buf = stream.getCache();\n  stream.destroy();\n  if (!encoding) return buf;\n\n  return buf.toString(encoding);\n}\n\nmodule.exports = promiseSpawn;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/cache_stream.js":"'use strict';\n\nvar Transform = require('stream').Transform;\n\nfunction CacheStream() {\n  Transform.call(this);\n\n  this._cache = [];\n}\n\nrequire('util').inherits(CacheStream, Transform);\n\nCacheStream.prototype._transform = function(chunk, enc, callback) {\n  var buf = chunk instanceof Buffer ? chunk : new Buffer(chunk, enc);\n\n  this._cache.push(buf);\n  this.push(buf);\n  callback();\n};\n\nCacheStream.prototype.destroy = function() {\n  this._cache.length = 0;\n};\n\nCacheStream.prototype.getCache = function() {\n  return Buffer.concat(this._cache);\n};\n\nmodule.exports = CacheStream;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/strip_html.js":"'use strict';\n\nmodule.exports = require('striptags');\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/truncate.js":"'use strict';\n\nfunction truncate(str, options) {\n  if (typeof str !== 'string') throw new TypeError('str must be a string!');\n  options = options || {};\n\n  var length = options.length || 30;\n  var omission = options.omission || '...';\n  var separator = options.separator;\n  var omissionLength = omission.length;\n\n  if (str.length < length) return str;\n\n  if (separator) {\n    var words = str.split(separator);\n    var word = '';\n    var result = '';\n    var resultLength = 0;\n\n    for (var i = 0, len = words.length; i < len; i++) {\n      word = words[i];\n\n      if (resultLength + word.length + omissionLength < length) {\n        result += word + separator;\n        resultLength = result.length;\n      } else {\n        return result.substring(0, resultLength - 1) + omission;\n      }\n    }\n  } else {\n    return str.substring(0, length - omissionLength) + omission;\n  }\n}\n\nmodule.exports = truncate;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/word_wrap.js":"'use strict';\n\n// https://github.com/rails/rails/blob/v4.2.0/actionview/lib/action_view/helpers/text_helper.rb#L240\nfunction wordWrap(str, options) {\n  if (typeof str !== 'string') throw new TypeError('str must be a string!');\n  options = options || {};\n\n  var width = options.width || 80;\n  var regex = new RegExp('(.{1,' + width + '})(\\\\s+|$)', 'g');\n  var lines = str.split('\\n');\n  var line = '';\n\n  for (var i = 0, len = lines.length; i < len; i++) {\n    line = lines[i];\n\n    if (line.length > width) {\n      lines[i] = line.replace(regex, '$1\\n').trim();\n    }\n  }\n\n  return lines.join('\\n');\n}\n\nmodule.exports = wordWrap;\n\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-util/lib/camel_case_keys.js":"'use strict';\n\nvar camelCase = require('camel-case');\n\nvar rPrefixUnderscore = /^(_+)/;\n\nfunction getter(key) {\n  return function() {\n    return this[key];\n  };\n}\n\nfunction setter(key) {\n  return function(value) {\n    this[key] = value;\n  };\n}\n\nfunction camelCaseKeys(obj) {\n  if (typeof obj !== 'object') throw new TypeError('obj must be an object!');\n\n  var keys = Object.keys(obj);\n  var result = {};\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = obj[key];\n    var match = key.match(rPrefixUnderscore);\n    var newKey;\n\n    if (match) {\n      var underscore = match[1];\n      newKey = underscore + camelCase(key.substring(underscore.length));\n    } else {\n      newKey = camelCase(key);\n    }\n\n    if (newKey === key) {\n      result[key] = value;\n    } else {\n      result[newKey] = value;\n      result.__defineGetter__(key, getter(newKey));\n      result.__defineSetter__(key, setter(newKey));\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = camelCaseKeys;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/extend/renderer.js":"'use strict';\n\nvar pathFn = require('path');\nvar Promise = require('bluebird');\n\nfunction getExtname(str) {\n  if (typeof str !== 'string') return '';\n\n  var extname = pathFn.extname(str) || str;\n  return extname[0] === '.' ? extname.slice(1) : extname;\n}\n\nfunction Renderer() {\n  this.store = {};\n  this.storeSync = {};\n}\n\nRenderer.prototype.list = function(sync) {\n  return sync ? this.storeSync : this.store;\n};\n\nRenderer.prototype.get = function(name, sync) {\n  var store = this[sync ? 'storeSync' : 'store'];\n\n  return store[getExtname(name)] || store[name];\n};\n\nRenderer.prototype.isRenderable = function(path) {\n  return Boolean(this.get(path));\n};\n\nRenderer.prototype.isRenderableSync = function(path) {\n  return Boolean(this.get(path, true));\n};\n\nRenderer.prototype.getOutput = function(path) {\n  var renderer = this.get(path);\n  return renderer ? renderer.output : '';\n};\n\nRenderer.prototype.register = function(name, output, fn, sync) {\n  if (!name) throw new TypeError('name is required');\n  if (!output) throw new TypeError('output is required');\n  if (typeof fn !== 'function') throw new TypeError('fn must be a function');\n\n  name = getExtname(name);\n  output = getExtname(output);\n\n  if (sync) {\n    this.storeSync[name] = fn;\n    this.storeSync[name].output = output;\n\n    this.store[name] = Promise.method(fn);\n  } else {\n    if (fn.length > 2) fn = Promise.promisify(fn);\n    this.store[name] = fn;\n  }\n\n  this.store[name].output = output;\n  this.store[name].compile = fn.compile;\n};\n\nmodule.exports = Renderer;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/extend/tag.js":"'use strict';\n\nvar stripIndent = require('strip-indent');\nvar nunjucks = require('nunjucks');\nvar inherits = require('util').inherits;\nvar Promise = require('bluebird');\n\nfunction Tag() {\n  this.env = new nunjucks.Environment(null, {\n    autoescape: false\n  });\n}\n\nTag.prototype.register = function(name, fn, options) {\n  if (!name) throw new TypeError('name is required');\n  if (typeof fn !== 'function') throw new TypeError('fn must be a function');\n\n  if (options == null || typeof options === 'boolean') {\n    options = {ends: options};\n  }\n\n  var tag;\n\n  if (options.async) {\n    if (fn.length > 2) {\n      fn = Promise.promisify(fn);\n    } else {\n      fn = Promise.method(fn);\n    }\n\n    if (options.ends) {\n      tag = new NunjucksAsyncBlock(name, fn);\n    } else {\n      tag = new NunjucksAsyncTag(name, fn);\n    }\n  } else {\n    if (options.ends) {\n      tag = new NunjucksBlock(name, fn);\n    } else {\n      tag = new NunjucksTag(name, fn);\n    }\n  }\n\n  this.env.addExtension(name, tag);\n};\n\nvar placeholder = '\\uFFFC';\nvar rPlaceholder = /(?:<|&lt;)\\!--\\uFFFC(\\d+)--(?:>|&gt;)/g;\n\nTag.prototype.render = function(str, options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  var cache = [];\n\n  function escapeContent(str) {\n    return '<!--' + placeholder + (cache.push(str) - 1) + '-->';\n  }\n\n  var env = this.env;\n\n  return new Promise(function(resolve, reject) {\n    str = str.replace(/<pre><code.*>[\\s\\S]*?<\\/code><\\/pre>/gm, escapeContent);\n    env.renderString(str, options, function(err, result) {\n      if (err) return reject(err);\n      resolve(result.replace(rPlaceholder, function() {\n        return cache[arguments[1]];\n      }));\n    });\n  });\n};\n\nfunction NunjucksTag(name, fn) {\n  this.tags = [name];\n  this.fn = fn;\n}\n\nNunjucksTag.prototype.parse = function(parser, nodes, lexer) {\n  var node = this._parseArgs(parser, nodes, lexer);\n\n  return new nodes.CallExtension(this, 'run', node, []);\n};\n\nNunjucksTag.prototype._parseArgs = function(parser, nodes, lexer) {\n  var tag = parser.nextToken();\n  var node = new nodes.NodeList(tag.lineno, tag.colno);\n  var token;\n\n  var argarray = new nodes.Array(tag.lineno, tag.colno);\n\n  var argitem = '';\n  while ((token = parser.nextToken(true))) {\n    if (token.type === lexer.TOKEN_WHITESPACE || token.type === lexer.TOKEN_BLOCK_END) {\n      if (argitem !== '') {\n        var argnode = new nodes.Literal(tag.lineno, tag.colno, argitem.trim());\n        argarray.addChild(argnode);\n        argitem = '';\n      }\n\n      if (token.type === lexer.TOKEN_BLOCK_END) {\n        break;\n      }\n    } else {\n      argitem += token.value;\n    }\n  }\n\n  node.addChild(argarray);\n\n  return node;\n};\n\nNunjucksTag.prototype.run = function(context, args) {\n  return this._run(context, args, '');\n};\n\nNunjucksTag.prototype._run = function(context, args, body) {\n  return this.fn.call(context.ctx, args, body);\n};\n\nfunction NunjucksBlock(name, fn) {\n  NunjucksTag.call(this, name, fn);\n}\n\ninherits(NunjucksBlock, NunjucksTag);\n\nNunjucksBlock.prototype.parse = function(parser, nodes, lexer) {\n  var node = this._parseArgs(parser, nodes, lexer);\n  var body = this._parseBody(parser, nodes, lexer);\n\n  return new nodes.CallExtension(this, 'run', node, [body]);\n};\n\nNunjucksBlock.prototype._parseBody = function(parser, nodes, lexer) {\n  var body = parser.parseUntilBlocks('end' + this.tags[0]);\n\n  parser.advanceAfterBlockEnd();\n  return body;\n};\n\nNunjucksBlock.prototype.run = function(context, args, body) {\n  return this._run(context, args, trimBody(body));\n};\n\nfunction trimBody(body) {\n  return stripIndent(body()).replace(/^\\n?|\\n?$/g, '');\n}\n\nfunction NunjucksAsyncTag(name, fn) {\n  NunjucksTag.call(this, name, fn);\n}\n\ninherits(NunjucksAsyncTag, NunjucksTag);\n\nNunjucksAsyncTag.prototype.parse = function(parser, nodes, lexer) {\n  var node = this._parseArgs(parser, nodes, lexer);\n\n  return new nodes.CallExtensionAsync(this, 'run', node, []);\n};\n\nNunjucksAsyncTag.prototype.run = function(context, args, callback) {\n  return this._run(context, args, '').then(function(result) {\n    callback(null, result);\n  }, callback);\n};\n\nfunction NunjucksAsyncBlock(name, fn) {\n  NunjucksBlock.call(this, name, fn);\n}\n\ninherits(NunjucksAsyncBlock, NunjucksBlock);\n\nNunjucksAsyncBlock.prototype.parse = function(parser, nodes, lexer) {\n  var node = this._parseArgs(parser, nodes, lexer);\n  var body = this._parseBody(parser, nodes, lexer);\n\n  return new nodes.CallExtensionAsync(this, 'run', node, [body]);\n};\n\nNunjucksAsyncBlock.prototype.run = function(context, args, body, callback) {\n  return this._run(context, args, trimBody(body)).then(function(result) {\n    callback(null, result);\n  }, callback);\n};\n\nmodule.exports = Tag;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/hexo/render.js":"'use strict';\n\nvar pathFn = require('path');\nvar Promise = require('bluebird');\nvar fs = require('hexo-fs');\n\nfunction getExtname(str) {\n  if (typeof str !== 'string') return '';\n\n  var extname = pathFn.extname(str);\n  return extname[0] === '.' ? extname.slice(1) : extname;\n}\n\nfunction Render(ctx) {\n  this.context = ctx;\n  this.renderer = ctx.extend.renderer;\n}\n\nRender.prototype.isRenderable = function(path) {\n  return this.renderer.isRenderable(path);\n};\n\nRender.prototype.isRenderableSync = function(path) {\n  return this.renderer.isRenderableSync(path);\n};\n\nRender.prototype.getOutput = function(path) {\n  return this.renderer.getOutput(path);\n};\n\nRender.prototype.getRenderer = function(ext, sync) {\n  return this.renderer.get(ext, sync);\n};\n\nRender.prototype.getRendererSync = function(ext) {\n  return this.getRenderer(ext, true);\n};\n\nRender.prototype.render = function(data, options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  var ctx = this.context;\n  var self = this;\n  var ext = '';\n\n  return new Promise(function(resolve, reject) {\n    if (!data) return reject(new TypeError('No input file or string!'));\n    if (data.text != null) return resolve(data.text);\n    if (!data.path) return reject(new TypeError('No input file or string!'));\n\n    fs.readFile(data.path).then(resolve, reject);\n  }).then(function(text) {\n    data.text = text;\n    ext = data.engine || getExtname(data.path);\n    if (!ext || !self.isRenderable(ext)) return text;\n\n    var renderer = self.getRenderer(ext);\n    return renderer.call(ctx, data, options);\n  }).then(function(result) {\n    result = toString(result, data);\n    if (data.onRenderEnd) {\n      return data.onRenderEnd(result);\n    }\n\n    return result;\n  }).then(function(result) {\n    var output = self.getOutput(ext) || ext;\n    return ctx.execFilter('after_render:' + output, result, {\n      context: ctx,\n      args: [data]\n    });\n  }).asCallback(callback);\n};\n\nRender.prototype.renderSync = function(data, options) {\n  if (!data) throw new TypeError('No input file or string!');\n\n  options = options || {};\n\n  var ctx = this.context;\n\n  if (data.text == null) {\n    if (!data.path) throw new TypeError('No input file or string!');\n    data.text = fs.readFileSync(data.path);\n  }\n\n  if (data.text == null) throw new TypeError('No input file or string!');\n\n  var ext = data.engine || getExtname(data.path);\n  var result;\n\n  if (ext && this.isRenderableSync(ext)) {\n    var renderer = this.getRendererSync(ext);\n    result = renderer.call(ctx, data, options);\n  } else {\n    result = data.text;\n  }\n\n  var output = this.getOutput(ext) || ext;\n  result = toString(result, data);\n\n  if (data.onRenderEnd) {\n    result = data.onRenderEnd(result);\n  }\n\n  return ctx.execFilterSync('after_render:' + output, result, {\n    context: ctx,\n    args: [data]\n  });\n};\n\nfunction toString(result, options) {\n  if (!options.hasOwnProperty('toString') || typeof result === 'string') return result;\n\n  if (typeof options.toString === 'function') {\n    return options.toString(result);\n  } else if (typeof result === 'object') {\n    return JSON.stringify(result);\n  } else if (result.toString) {\n    return result.toString();\n  }\n\n  return result;\n}\n\nmodule.exports = Render;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/hexo/register_models.js":"'use strict';\n\nvar models = require('../models');\n\nmodule.exports = function(ctx) {\n  var db = ctx.database;\n\n  var keys = Object.keys(models);\n  var key = '';\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    key = keys[i];\n    db.model(key, models[key](ctx));\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/models/index.js":"'use strict';\n\nexports.Asset = require('./asset');\nexports.Cache = require('./cache');\nexports.Category = require('./category');\nexports.Data = require('./data');\nexports.Page = require('./page');\nexports.Post = require('./post');\nexports.PostAsset = require('./post_asset');\nexports.PostCategory = require('./post_category');\nexports.PostTag = require('./post_tag');\nexports.Tag = require('./tag');\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/models/asset.js":"'use strict';\n\nvar Schema = require('warehouse').Schema;\nvar pathFn = require('path');\n\nmodule.exports = function(ctx) {\n  var Asset = new Schema({\n    _id: {type: String, required: true},\n    path: {type: String, required: true},\n    modified: {type: Boolean, default: true},\n    renderable: {type: Boolean, default: true}\n  });\n\n  Asset.virtual('source').get(function() {\n    return pathFn.join(ctx.base_dir, this._id);\n  });\n\n  return Asset;\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/models/cache.js":"'use strict';\n\nvar Schema = require('warehouse').Schema;\nvar Promise = require('bluebird');\n\nmodule.exports = function(ctx) {\n  var Cache = new Schema({\n    _id: {type: String, required: true},\n    hash: {type: String, default: ''},\n    modified: {type: Number, default: Date.now}\n  });\n\n  Cache.static('compareFile', function(id, hashFn, statFn) {\n    var cache = this.findById(id);\n    var self = this;\n    var mtime;\n\n    // If cache does not exist, then it must be a new file. We have to get both\n    // file hash and stats.\n    if (!cache) {\n      return Promise.all([hashFn(id), statFn(id)]).spread(function(hash, stats) {\n        return self.insert({\n          _id: id,\n          hash: hash,\n          modified: stats.mtime\n        });\n      }).thenReturn({\n        type: 'create'\n      });\n    }\n\n    // Get file stats\n    return statFn(id).then(function(stats) {\n      mtime = stats.mtime;\n\n      // Skip the file if the modified time is unchanged\n      if (cache.modified === mtime) {\n        return {\n          type: 'skip'\n        };\n      }\n\n      // Get file hash\n      return hashFn(id);\n    }).then(function(result) {\n      // If the result is an object, skip the following steps because it's an\n      // unchanged file\n      if (typeof result === 'object') return result;\n\n      var hash = result;\n\n      // Skip the file if the hash is unchanged\n      if (cache.hash === hash) {\n        return {\n          type: 'skip'\n        };\n      }\n\n      // Update cache info\n      cache.hash = hash;\n      cache.modified = mtime;\n\n      return cache.save().thenReturn({\n        type: 'update'\n      });\n    });\n  });\n\n  return Cache;\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/models/category.js":"'use strict';\n\nvar Schema = require('warehouse').Schema;\nvar util = require('hexo-util');\nvar slugize = util.slugize;\n\nmodule.exports = function(ctx) {\n  var Category = new Schema({\n    name: {type: String, required: true},\n    parent: {type: Schema.Types.CUID, ref: 'Category'}\n  });\n\n  Category.virtual('slug').get(function() {\n    var map = ctx.config.category_map || {};\n    var name = this.name;\n    var str = '';\n\n    if (!name) return;\n\n    if (this.parent) {\n      var parent = ctx.model('Category').findById(this.parent);\n      str += parent.slug + '/';\n    }\n\n    name = map[name] || name;\n    str += slugize(name, {transform: ctx.config.filename_case});\n\n    return str;\n  });\n\n  Category.virtual('path').get(function() {\n    var catDir = ctx.config.category_dir;\n    if (catDir === '/') catDir = '';\n    if (catDir.length && catDir[catDir.length - 1] !== '/') catDir += '/';\n\n    return catDir + this.slug + '/';\n  });\n\n  Category.virtual('permalink').get(function() {\n    return ctx.config.url + '/' + this.path;\n  });\n\n  Category.virtual('posts').get(function() {\n    var PostCategory = ctx.model('PostCategory');\n\n    var ids = PostCategory.find({category_id: this._id}).map(function(item) {\n      return item.post_id;\n    });\n\n    return ctx.locals.get('posts').find({\n      _id: {$in: ids}\n    });\n  });\n\n  Category.virtual('length').get(function() {\n    return this.posts.length;\n  });\n\n  // Check whether a category exists\n  Category.pre('save', function(data) {\n    var name = data.name;\n    var parent = data.parent;\n    if (!name) return;\n\n    var Category = ctx.model('Category');\n    var cat = Category.findOne({\n      name: name,\n      parent: parent || {$exists: false}\n    }, {lean: true});\n\n    if (cat) {\n      throw new Error('Category `' + name + '` has already existed!');\n    }\n  });\n\n  // Remove PostCategory references\n  Category.pre('remove', function(data) {\n    var PostCategory = ctx.model('PostCategory');\n    return PostCategory.remove({category_id: data._id});\n  });\n\n  return Category;\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/models/data.js":"'use strict';\n\nvar Schema = require('warehouse').Schema;\n\nmodule.exports = function(ctx) {\n  var Data = new Schema({\n    _id: {type: String, required: true},\n    data: Object\n  });\n\n  return Data;\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/models/page.js":"'use strict';\n\nvar Schema = require('warehouse').Schema;\nvar pathFn = require('path');\nvar Moment = require('./types/moment');\nvar moment = require('moment');\n\nmodule.exports = function(ctx) {\n  var Page = new Schema({\n    title: {type: String, default: ''},\n    date: {\n      type: Moment,\n      default: moment,\n      language: ctx.config.languages,\n      timezone: ctx.config.timezone\n    },\n    updated: {\n      type: Moment,\n      default: moment,\n      language: ctx.config.languages,\n      timezone: ctx.config.timezone\n    },\n    comments: {type: Boolean, default: true},\n    layout: {type: String, default: 'page'},\n    _content: {type: String, default: ''},\n    source: {type: String, required: true},\n    path: {type: String, required: true},\n    raw: {type: String, default: ''},\n    content: {type: String},\n    excerpt: {type: String},\n    more: {type: String}\n  });\n\n  Page.virtual('permalink').get(function() {\n    return ctx.config.url + '/' + this.path;\n  });\n\n  Page.virtual('full_source').get(function() {\n    return pathFn.join(ctx.source_dir, this.source || '');\n  });\n\n  return Page;\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/models/types/moment.js":"'use strict';\n\nvar moment = require('moment-timezone');\nvar SchemaType = require('warehouse').SchemaType;\nvar util = require('util');\n\nfunction SchemaTypeMoment(name, options) {\n  SchemaType.call(this, name, options);\n}\n\nutil.inherits(SchemaTypeMoment, SchemaType);\n\nfunction toMoment(value) {\n  // FIXME: Something is wrong when using a moment instance. I try to get the\n  // original date object and create a new moment object again.\n  if (moment.isMoment(value)) return moment(value._d);\n  return moment(value);\n}\n\nSchemaTypeMoment.prototype.cast = function(value, data) {\n  value = SchemaType.prototype.cast.call(this, value, data);\n  if (value == null) return value;\n\n  var options = this.options;\n  value = toMoment(value);\n\n  if (options.language) value = value.locale(options.language);\n  if (options.timezone) value = value.tz(options.timezone);\n\n  return value;\n};\n\nSchemaTypeMoment.prototype.validate = function(value, data) {\n  value = SchemaType.prototype.validate.call(this, value, data);\n  if (value == null) return value;\n\n  value = toMoment(value);\n\n  if (!value.isValid()) {\n    throw new Error('`' + value + '` is not a valid date!');\n  }\n\n  return value;\n};\n\nSchemaTypeMoment.prototype.match = function(value, query, data) {\n  return value ? value.valueOf() === query.valueOf() : false;\n};\n\nSchemaTypeMoment.prototype.compare = function(a, b) {\n  if (a) {\n    if (b) return a - b;\n    return 1;\n  }\n\n  if (b) return -1;\n  return 0;\n};\n\nSchemaTypeMoment.prototype.parse = function(value, data) {\n  if (value) return toMoment(value);\n};\n\nSchemaTypeMoment.prototype.value = function(value, data) {\n  // FIXME: Same as above. Also a dirty hack.\n  return value ? value._d.toISOString() : value;\n};\n\nSchemaTypeMoment.prototype.q$day = function(value, query, data) {\n  return value ? value.date() === query : false;\n};\n\nSchemaTypeMoment.prototype.q$month = function(value, query, data) {\n  return value ? value.month() === query : false;\n};\n\nSchemaTypeMoment.prototype.q$year = function(value, query, data) {\n  return value ? value.year() === query : false;\n};\n\nSchemaTypeMoment.prototype.u$inc = function(value, update, data) {\n  if (!value) return value;\n  return value.add(update);\n};\n\nSchemaTypeMoment.prototype.u$dec = function(value, update, data) {\n  if (!value) return value;\n  return value.subtract(update);\n};\n\nmodule.exports = SchemaTypeMoment;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/models/post.js":"'use strict';\n\nvar Schema = require('warehouse').Schema;\nvar moment = require('moment');\nvar pathFn = require('path');\nvar Promise = require('bluebird');\nvar _ = require('lodash');\nvar Moment = require('./types/moment');\n\nfunction pickID(data) {\n  return data._id;\n}\n\nfunction removeEmptyTag(tags) {\n  return tags.filter(function(tag) {\n    return tag != null && tag !== '';\n  }).map(function(tag) {\n    return tag + '';\n  });\n}\n\nmodule.exports = function(ctx) {\n  var Post = new Schema({\n    id: String,\n    title: {type: String, default: ''},\n    date: {\n      type: Moment,\n      default: moment,\n      language: ctx.config.languages,\n      timezone: ctx.config.timezone\n    },\n    updated: {\n      type: Moment,\n      default: moment,\n      language: ctx.config.languages,\n      timezone: ctx.config.timezone\n    },\n    comments: {type: Boolean, default: true},\n    layout: {type: String, default: 'post'},\n    _content: {type: String, default: ''},\n    source: {type: String, required: true},\n    slug: {type: String, required: true},\n    photos: [String],\n    link: {type: String, default: ''},\n    raw: {type: String, default: ''},\n    published: {type: Boolean, default: true},\n    content: {type: String},\n    excerpt: {type: String},\n    more: {type: String}\n  });\n\n  Post.virtual('path').get(function() {\n    var path = ctx.execFilterSync('post_permalink', this, {context: ctx});\n    return typeof path === 'string' ? path : '';\n  });\n\n  Post.virtual('permalink').get(function() {\n    var url_for = ctx.extend.helper.get('url_for');\n    var config = ctx.config;\n    var partial_url = url_for.call(ctx, this.path);\n    return config.url + _.replace(partial_url, config.root, '/');\n  });\n\n  Post.virtual('full_source').get(function() {\n    return pathFn.join(ctx.source_dir, this.source || '');\n  });\n\n  Post.virtual('asset_dir').get(function() {\n    var src = this.full_source;\n    return src.substring(0, src.length - pathFn.extname(src).length) + pathFn.sep;\n  });\n\n  Post.virtual('tags').get(function() {\n    var PostTag = ctx.model('PostTag');\n    var Tag = ctx.model('Tag');\n\n    var ids = PostTag.find({post_id: this._id}, {lean: true}).map(function(item) {\n      return item.tag_id;\n    });\n\n    return Tag.find({_id: {$in: ids}});\n  });\n\n  Post.method('setTags', function(tags) {\n    tags = removeEmptyTag(tags);\n\n    var PostTag = ctx.model('PostTag');\n    var Tag = ctx.model('Tag');\n    var id = this._id;\n    var existed = PostTag.find({post_id: id}, {lean: true}).map(pickID);\n\n    return Promise.map(tags, function(tag) {\n      // Find the tag by name\n      var data = Tag.findOne({name: tag}, {lean: true});\n      if (data) return data;\n\n      // Insert the tag if not exist\n      return Tag.insert({name: tag}).catch(function(err) {\n        // Try to find the tag again. Throw the error if not found\n        var data = Tag.findOne({name: tag}, {lean: true});\n\n        if (data) return data;\n        throw err;\n      });\n    }).map(function(tag) {\n      // Find the reference\n      var ref = PostTag.findOne({post_id: id, tag_id: tag._id}, {lean: true});\n      if (ref) return ref;\n\n      // Insert the reference if not exist\n      return PostTag.insert({\n        post_id: id,\n        tag_id: tag._id\n      });\n    }).then(function(tags) {\n      // Remove old tags\n      var deleted = _.difference(existed, tags.map(pickID));\n      return deleted;\n    }).map(function(tag) {\n      return PostTag.removeById(tag);\n    });\n  });\n\n  Post.virtual('categories').get(function() {\n    var PostCategory = ctx.model('PostCategory');\n    var Category = ctx.model('Category');\n\n    var ids = PostCategory.find({post_id: this._id}, {lean: true}).map(function(item) {\n      return item.category_id;\n    });\n\n    return Category.find({_id: {$in: ids}});\n  });\n\n  Post.method('setCategories', function(cats) {\n    cats = removeEmptyTag(cats);\n\n    var PostCategory = ctx.model('PostCategory');\n    var Category = ctx.model('Category');\n    var id = this._id;\n    var arr = [];\n    var existed = PostCategory.find({post_id: id}, {lean: true}).map(pickID);\n\n    // Don't use \"Promise.map\". It doesn't run in series.\n    // MUST USE \"Promise.each\".\n    return Promise.each(cats, function(cat, i) {\n      // Find the category by name\n      var data = Category.findOne({\n        name: cat,\n        parent: i ? arr[i - 1] : {$exists: false}\n      }, {lean: true});\n\n      if (data) {\n        arr.push(data._id);\n        return data;\n      }\n\n      // Insert the category if not exist\n      var obj = {name: cat};\n      if (i) obj.parent = arr[i - 1];\n\n      return Category.insert(obj).catch(function(err) {\n        // Try to find the category again. Throw the error if not found\n        var data = Category.findOne({\n          name: cat,\n          parent: i ? arr[i - 1] : {$exists: false}\n        }, {lean: true});\n\n        if (data) return data;\n        throw err;\n      }).then(function(data) {\n        arr.push(data._id);\n        return data;\n      });\n    }).map(function() {\n      // Get the index from the second argument\n      // and get the category id from arr.\n      var cat = arr[arguments[1]];\n\n      // Find the reference\n      var ref = PostCategory.findOne({post_id: id, category_id: cat}, {lean: true});\n      if (ref) return ref;\n\n      // Insert the reference if not exist\n      return PostCategory.insert({\n        post_id: id,\n        category_id: cat\n      });\n    }).then(function(cats) {\n      // Remove old categories\n      var deleted = _.difference(existed, cats.map(pickID));\n      return deleted;\n    }).map(function(cat) {\n      return PostCategory.removeById(cat);\n    });\n  });\n\n  // Remove PostTag references\n  Post.pre('remove', function(data) {\n    var PostTag = ctx.model('PostTag');\n    return PostTag.remove({post_id: data._id});\n  });\n\n  // Remove PostCategory references\n  Post.pre('remove', function(data) {\n    var PostCategory = ctx.model('PostCategory');\n    return PostCategory.remove({post_id: data._id});\n  });\n\n  // Remove assets\n  Post.pre('remove', function(data) {\n    var PostAsset = ctx.model('PostAsset');\n    return PostAsset.remove({post: data._id});\n  });\n\n  return Post;\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/models/post_asset.js":"'use strict';\n\nvar Schema = require('warehouse').Schema;\nvar pathFn = require('path');\n\nmodule.exports = function(ctx) {\n  var PostAsset = new Schema({\n    _id: {type: String, required: true},\n    slug: {type: String, required: true},\n    modified: {type: Boolean, default: true},\n    post: {type: Schema.Types.CUID, ref: 'Post'},\n    renderable: {type: Boolean, default: true}\n  });\n\n  PostAsset.virtual('path').get(function() {\n    var Post = ctx.model('Post');\n    var post = Post.findById(this.post);\n    if (!post) return;\n\n    // PostAsset.path is file path relative to `public_dir`\n    // no need to urlescape, #1562\n    return pathFn.join(post.path, this.slug);\n  });\n\n  PostAsset.virtual('source').get(function() {\n    return pathFn.join(ctx.base_dir, this._id);\n  });\n\n  return PostAsset;\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/models/post_category.js":"'use strict';\n\nvar Schema = require('warehouse').Schema;\n\nmodule.exports = function(ctx) {\n  var PostCategory = new Schema({\n    post_id: {type: Schema.Types.CUID, ref: 'Post'},\n    category_id: {type: Schema.Types.CUID, ref: 'Category'}\n  });\n\n  return PostCategory;\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/models/post_tag.js":"'use strict';\n\nvar Schema = require('warehouse').Schema;\n\nmodule.exports = function(ctx) {\n  var PostTag = new Schema({\n    post_id: {type: Schema.Types.CUID, ref: 'Post'},\n    tag_id: {type: Schema.Types.CUID, ref: 'Tag'}\n  });\n\n  return PostTag;\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/models/tag.js":"'use strict';\n\nvar Schema = require('warehouse').Schema;\nvar util = require('hexo-util');\nvar slugize = util.slugize;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nmodule.exports = function(ctx) {\n  var Tag = new Schema({\n    name: {type: String, required: true}\n  });\n\n  Tag.virtual('slug').get(function() {\n    var map = ctx.config.tag_map || {};\n    var name = this.name;\n    if (!name) return;\n\n    if (hasOwn.call(map, name)) {\n      name = map[name] || name;\n    }\n\n    return slugize(name, {transform: ctx.config.filename_case});\n  });\n\n  Tag.virtual('path').get(function() {\n    var tagDir = ctx.config.tag_dir;\n    if (tagDir[tagDir.length - 1] !== '/') tagDir += '/';\n\n    return tagDir + this.slug + '/';\n  });\n\n  Tag.virtual('permalink').get(function() {\n    return ctx.config.url + '/' + this.path;\n  });\n\n  Tag.virtual('posts').get(function() {\n    var PostTag = ctx.model('PostTag');\n\n    var ids = PostTag.find({tag_id: this._id}).map(function(item) {\n      return item.post_id;\n    });\n\n    return ctx.locals.get('posts').find({\n      _id: {$in: ids}\n    });\n  });\n\n  Tag.virtual('length').get(function() {\n    return this.posts.length;\n  });\n\n  // Check whether a tag exists\n  Tag.pre('save', function(data) {\n    var name = data.name;\n    if (!name) return;\n\n    var Tag = ctx.model('Tag');\n    var tag = Tag.findOne({name: name}, {lean: true});\n\n    if (tag) {\n      throw new Error('Tag `' + name + '` has already existed!');\n    }\n  });\n\n  // Remove PostTag references\n  Tag.pre('remove', function(data) {\n    var PostTag = ctx.model('PostTag');\n    return PostTag.remove({tag_id: data._id});\n  });\n\n  return Tag;\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/hexo/post.js":"'use strict';\n\nvar moment = require('moment');\nvar Promise = require('bluebird');\nvar pathFn = require('path');\nvar _ = require('lodash');\nvar yaml = require('js-yaml');\nvar util = require('hexo-util');\nvar fs = require('hexo-fs');\nvar yfm = require('hexo-front-matter');\n\nvar slugize = util.slugize;\nvar escapeRegExp = util.escapeRegExp;\n\nvar rEscapeContent = /<escape(?:[^>]*)>([\\s\\S]*?)<\\/escape>/g;\nvar rSwigVar = /\\{\\{[\\s\\S]*?\\}\\}/g;\nvar rSwigComment = /\\{#[\\s\\S]*?#\\}/g;\nvar rSwigBlock = /\\{%[\\s\\S]*?%\\}/g;\nvar rSwigFullBlock = /\\{% *(.+?)(?: *| +.*)%\\}[\\s\\S]+?\\{% *end\\1 *%\\}/g;\nvar placeholder = '\\uFFFC';\nvar rPlaceholder = /(?:<|&lt;)\\!--\\uFFFC(\\d+)--(?:>|&gt;)/g;\n\nvar preservedKeys = {\n  title: true,\n  slug: true,\n  path: true,\n  layout: true,\n  date: true,\n  content: true\n};\n\nfunction Post(context) {\n  this.context = context;\n}\n\nPost.prototype.create = function(data, replace, callback) {\n  if (!callback && typeof replace === 'function') {\n    callback = replace;\n    replace = false;\n  }\n\n  var ctx = this.context;\n  var config = ctx.config;\n\n  data.slug = slugize((data.slug || data.title).toString(), {transform: config.filename_case});\n  data.layout = (data.layout || config.default_layout).toLowerCase();\n  data.date = data.date ? moment(data.date) : moment();\n\n  return Promise.all([\n    // Get the post path\n    ctx.execFilter('new_post_path', data, {\n      args: [replace],\n      context: ctx\n    }),\n    this._renderScaffold(data)\n  ]).spread(function(path, content) {\n    var result = {\n      path: path,\n      content: content\n    };\n\n    return Promise.all([\n      // Write content to file\n      fs.writeFile(path, content),\n      // Create asset folder\n      createAssetFolder(path, config.post_asset_folder)\n    ]).then(function() {\n      ctx.emit('new', result);\n    }).thenReturn(result);\n  }).asCallback(callback);\n};\n\nfunction prepareFrontMatter(data) {\n  var keys = Object.keys(data);\n  var key = '';\n  var item;\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    key = keys[i];\n    item = data[key];\n\n    if (moment.isMoment(item)) {\n      data[key] = item.utc().format('YYYY-MM-DD HH:mm:ss');\n    } else if (moment.isDate(item)) {\n      data[key] = moment.utc(item).format('YYYY-MM-DD HH:mm:ss');\n    } else if (typeof item === 'string') {\n      data[key] = '\"' + item + '\"';\n    }\n  }\n\n  return data;\n}\n\nPost.prototype._getScaffold = function(layout) {\n  var ctx = this.context;\n\n  return ctx.scaffold.get(layout).then(function(result) {\n    if (result != null) return result;\n    return ctx.scaffold.get('normal');\n  });\n};\n\nPost.prototype._renderScaffold = function(data) {\n  var tag = this.context.extend.tag;\n  var yfmSplit;\n\n  return this._getScaffold(data.layout).then(function(scaffold) {\n    var frontMatter = prepareFrontMatter(_.clone(data));\n    yfmSplit = yfm.split(scaffold);\n\n    return tag.render(yfmSplit.data, frontMatter);\n  }).then(function(frontMatter) {\n    var separator = yfmSplit.separator;\n    var jsonMode = separator[0] === ';';\n    var content = '';\n    var obj;\n\n    // Parse front-matter\n    if (jsonMode) {\n      obj = JSON.parse('{' + frontMatter + '}');\n    } else {\n      obj = yaml.load(frontMatter);\n    }\n\n    // Add data which are not in the front-matter\n    var keys = Object.keys(data);\n    var key = '';\n\n    for (var i = 0, len = keys.length; i < len; i++) {\n      key = keys[i];\n\n      if (!preservedKeys[key] && obj[key] == null) {\n        obj[key] = data[key];\n      }\n    }\n\n    // Prepend the separator\n    if (yfmSplit.prefixSeparator) content += separator + '\\n';\n\n    content += yfm.stringify(obj, {\n      mode: jsonMode ? 'json' : ''\n    });\n\n    // Concat content\n    content += yfmSplit.content;\n\n    if (data.content) {\n      content += '\\n' + data.content;\n    }\n\n    return content;\n  });\n};\n\nfunction createAssetFolder(path, assetFolder) {\n  if (!assetFolder) return Promise.resolve();\n\n  var target = removeExtname(path);\n\n  return fs.exists(target).then(function(exist) {\n    if (!exist) return fs.mkdirs(target);\n  });\n}\n\nfunction removeExtname(str) {\n  return str.substring(0, str.length - pathFn.extname(str).length);\n}\n\nPost.prototype.publish = function(data, replace, callback) {\n  if (!callback && typeof replace === 'function') {\n    callback = replace;\n    replace = false;\n  }\n\n  if (data.layout === 'draft') data.layout = 'post';\n\n  var ctx = this.context;\n  var config = ctx.config;\n  var draftDir = pathFn.join(ctx.source_dir, '_drafts');\n  var slug = data.slug = slugize(data.slug.toString(), {transform: config.filename_case});\n  var regex = new RegExp('^' + escapeRegExp(slug) + '(?:[^\\\\/\\\\\\\\]+)');\n  var self = this;\n  var src = '';\n  var result = {};\n\n  data.layout = (data.layout || config.default_layout).toLowerCase();\n\n  // Find the draft\n  return fs.listDir(draftDir).then(function(list) {\n    var item = '';\n\n    for (var i = 0, len = list.length; i < len; i++) {\n      item = list[i];\n      if (regex.test(item)) return item;\n    }\n  }).then(function(item) {\n    if (!item) throw new Error('Draft \"' + slug + '\" does not exist.');\n\n    // Read the content\n    src = pathFn.join(draftDir, item);\n    return fs.readFile(src);\n  }).then(function(content) {\n    // Create post\n    _.extend(data, yfm(content));\n    data.content = data._content;\n    delete data._content;\n\n    return self.create(data, replace).then(function(post) {\n      result.path = post.path;\n      result.content = post.content;\n    });\n  }).then(function() {\n    // Remove the original draft file\n    return fs.unlink(src);\n  }).then(function() {\n    if (!config.post_asset_folder) return;\n\n    // Copy assets\n    var assetSrc = removeExtname(src);\n    var assetDest = removeExtname(result.path);\n\n    return fs.exists(assetSrc).then(function(exist) {\n      if (!exist) return;\n\n      return fs.copyDir(assetSrc, assetDest).then(function() {\n        return fs.rmdir(assetSrc);\n      });\n    });\n  }).thenReturn(result).asCallback(callback);\n};\n\nPost.prototype.render = function(source, data, callback) {\n  data = data || {};\n\n  var ctx = this.context;\n  var config = ctx.config;\n  var cache = [];\n  var tag = ctx.extend.tag;\n  var isSwig = data.engine === 'swig' || (source && pathFn.extname(source) === '.swig');\n\n  function escapeContent(str) {\n    return '<!--' + placeholder + (cache.push(str) - 1) + '-->';\n  }\n\n  function tagFilter(content) {\n    // Replace cache data with real contents\n    content = content.replace(rPlaceholder, function() {\n      return cache[arguments[1]];\n    });\n\n    // Render with Nunjucks\n    data.content = content;\n    return tag.render(data.content, data);\n  }\n\n  return new Promise(function(resolve, reject) {\n    if (data.content != null) return resolve(data.content);\n    if (!source) return reject(new Error('No input file or string!'));\n\n    // Read content from files\n    fs.readFile(source).then(resolve, reject);\n  }).then(function(content) {\n    data.content = content;\n\n    // Run \"before_post_render\" filters\n    return ctx.execFilter('before_post_render', data, {context: ctx}).then(function() {\n      data.content = data.content.replace(rEscapeContent, function(match, content) {\n        return escapeContent(content);\n      });\n    });\n  }).then(function() {\n    // Skip rendering if this is a swig file\n    if (isSwig) return data.content;\n\n    // Escape all Swig tags\n    data.content = data.content\n      .replace(rSwigFullBlock, escapeContent)\n      .replace(rSwigBlock, escapeContent)\n      .replace(rSwigComment, '')\n      .replace(rSwigVar, escapeContent);\n\n    var options = data.markdown || {};\n    if (!config.highlight.enable) options.highlight = null;\n\n    // Render with markdown or other renderer\n    return ctx.render.render({\n      text: data.content,\n      path: source,\n      engine: data.engine,\n      toString: true,\n      onRenderEnd: tagFilter\n    }, options);\n  }).then(function(content) {\n    data.content = content;\n\n    if (!isSwig) {\n      return data.content;\n    }\n\n    // Render with Nunjucks\n    return tag.render(data.content, data);\n  }).then(function(content) {\n    data.content = content;\n\n    // Run \"after_post_render\" filters\n    return ctx.execFilter('after_post_render', data, {context: ctx});\n  });\n};\n\nmodule.exports = Post;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-front-matter/lib/front_matter.js":"'use strict';\n\nvar yaml = require('js-yaml');\nvar util = require('util');\nvar isDate = util.isDate;\nvar rPrefixSep = /^(-{3,}|;{3,})/;\nvar rFrontMatter = /^(-{3,}|;{3,})\\n([\\s\\S]+?)\\n\\1(?:$|\\n([\\s\\S]*)$)/;\nvar rFrontMatterNew = /^([\\s\\S]+?)\\n(-{3,}|;{3,})(?:$|\\n([\\s\\S]*)$)/;\n\nfunction split(str) {\n  if (typeof str !== 'string') throw new TypeError('str is required!');\n\n  if (rFrontMatter.test(str)) return splitOld(str);\n  if (rFrontMatterNew.test(str)) return splitNew(str);\n\n  return {content: str};\n}\n\nfunction splitOld(str) {\n  var match = str.match(rFrontMatter);\n\n  return {\n    data: match[2],\n    content: match[3] || '',\n    separator: match[1],\n    prefixSeparator: true\n  };\n}\n\nfunction splitNew(str) {\n  if (rPrefixSep.test(str)) return {content: str};\n\n  var match = str.match(rFrontMatterNew);\n\n  return {\n    data: match[1],\n    content: match[3] || '',\n    separator: match[2],\n    prefixSeparator: false\n  };\n}\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') throw new TypeError('str is required!');\n\n  var splitData = split(str);\n  var raw = splitData.data;\n\n  if (!raw) return {_content: str};\n\n  var data;\n\n  if (splitData.separator[0] === ';') {\n    data = parseJSON(raw);\n  } else {\n    data = parseYAML(raw, options);\n  }\n\n  if (!data) return {_content: str};\n\n  var keys = Object.keys(data);\n  var key = '';\n  var item;\n\n  // Convert timezone\n  for (var i = 0, len = keys.length; i < len; i++) {\n    key = keys[i];\n    item = data[key];\n\n    if (isDate(item)) {\n      data[key] = new Date(item.getTime() + item.getTimezoneOffset() * 60 * 1000);\n    }\n  }\n\n  data._content = splitData.content;\n  return data;\n}\n\nfunction parseYAML(str, options) {\n  var result = yaml.load(escapeYAML(str), options);\n  if (typeof result !== 'object') return;\n\n  return result;\n}\n\nfunction parseJSON(str) {\n  try {\n    return JSON.parse('{' + str + '}');\n  } catch (err) {\n    return;\n  }\n}\n\nfunction escapeYAML(str) {\n  if (typeof str !== 'string') throw new TypeError('str is required!');\n\n  return str.replace(/\\n(\\t+)/g, function(match, tabs) {\n    var result = '\\n';\n\n    for (var i = 0, len = tabs.length; i < len; i++) {\n      result += '  ';\n    }\n\n    return result;\n  });\n}\n\nfunction stringify(obj, options) {\n  if (!obj) throw new TypeError('obj is required!');\n\n  options = options || {};\n\n  var content = obj._content || '';\n  delete obj._content;\n\n  if (!Object.keys(obj).length) return content;\n\n  var mode = options.mode;\n  var separator = options.separator || (mode === 'json' ? ';;;' : '---');\n  var result = '';\n\n  if (options.prefixSeparator) result += separator + '\\n';\n\n  if (mode === 'json') {\n    result += stringifyJSON(obj);\n  } else {\n    result += stringifyYAML(obj, options);\n  }\n\n  result += separator + '\\n' + content;\n\n  return result;\n}\n\nfunction stringifyYAML(obj, options) {\n  var keys = Object.keys(obj);\n  var data = {};\n  var nullKeys = [];\n  var dateKeys = [];\n  var key, value, i, len;\n\n  for (i = 0, len = keys.length; i < len; i++) {\n    key = keys[i];\n    value = obj[key];\n\n    if (value == null) {\n      nullKeys.push(key);\n    } else if (isDate(value)) {\n      dateKeys.push(key);\n    } else {\n      data[key] = value;\n    }\n  }\n\n  var result = yaml.dump(data, options);\n\n  if (dateKeys.length) {\n    for (i = 0, len = dateKeys.length; i < len; i++) {\n      key = dateKeys[i];\n      result += key + ': ' + formatDate(obj[key]) + '\\n';\n    }\n  }\n\n  if (nullKeys.length) {\n    for (i = 0, len = nullKeys.length; i < len; i++) {\n      result += nullKeys[i] + ':\\n';\n    }\n  }\n\n  return result;\n}\n\nfunction stringifyJSON(obj) {\n  return JSON.stringify(obj, null, '  ')\n    // Remove indention\n    .replace(/\\n {2}/g, function() {\n      return '\\n';\n    })\n    // Remove prefixing and trailing braces\n    .replace(/^{\\n|}$/g, '');\n}\n\nfunction doubleDigit(num) {\n  return num < 10 ? '0' + num : num;\n}\n\nfunction formatDate(date) {\n  return date.getFullYear() + '-' +\n    doubleDigit(date.getMonth() + 1) + '-' +\n    doubleDigit(date.getDate()) + ' ' +\n    doubleDigit(date.getHours()) + ':' +\n    doubleDigit(date.getMinutes()) + ':' +\n    doubleDigit(date.getSeconds());\n}\n\nexports = module.exports = parse;\nexports.parse = parse;\nexports.split = split;\nexports.escape = escapeYAML;\nexports.stringify = stringify;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/hexo/scaffold.js":"'use strict';\n\nvar pathFn = require('path');\nvar fs = require('hexo-fs');\n\nfunction Scaffold(context) {\n  this.context = context;\n  this.scaffoldDir = context.scaffold_dir;\n}\n\nScaffold.prototype.defaults = {\n  normal: [\n    '---',\n    'layout: {{ layout }}',\n    'title: {{ title }}',\n    'date: {{ date }}',\n    'tags:',\n    '---'\n  ].join('\\n')\n};\n\nScaffold.prototype._listDir = function() {\n  var scaffoldDir = this.scaffoldDir;\n\n  return fs.exists(scaffoldDir).then(function(exist) {\n    if (!exist) return [];\n\n    return fs.listDir(scaffoldDir, {\n      ignoreFilesRegex: /^_|\\/_/\n    });\n  }).map(function(item) {\n    return {\n      name: item.substring(0, item.length - pathFn.extname(item).length),\n      path: pathFn.join(scaffoldDir, item)\n    };\n  });\n};\n\nScaffold.prototype._getScaffold = function(name) {\n  return this._listDir().then(function(list) {\n    var item;\n\n    for (var i = 0, len = list.length; i < len; i++) {\n      item = list[i];\n      if (item.name === name) return item;\n    }\n  });\n};\n\nScaffold.prototype.get = function(name, callback) {\n  var self = this;\n\n  return this._getScaffold(name).then(function(item) {\n    if (item) {\n      return fs.readFile(item.path);\n    }\n\n    return self.defaults[name];\n  }).asCallback(callback);\n};\n\nScaffold.prototype.set = function(name, content, callback) {\n  var scaffoldDir = this.scaffoldDir;\n\n  return this._getScaffold(name).then(function(item) {\n    var path = item ? item.path : pathFn.join(scaffoldDir, name);\n    if (!pathFn.extname(path)) path += '.md';\n\n    return fs.writeFile(path, content);\n  }).asCallback(callback);\n};\n\nScaffold.prototype.remove = function(name, callback) {\n  return this._getScaffold(name).then(function(item) {\n    if (!item) return;\n\n    return fs.unlink(item.path);\n  }).asCallback(callback);\n};\n\nmodule.exports = Scaffold;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/hexo/source.js":"'use strict';\n\nvar Box = require('../box');\nvar util = require('util');\n\nfunction Source(ctx) {\n  Box.call(this, ctx, ctx.source_dir);\n\n  this.processors = ctx.extend.processor.list();\n}\n\nutil.inherits(Source, Box);\n\nmodule.exports = Source;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/box/index.js":"'use strict';\n\nvar pathFn = require('path');\nvar Promise = require('bluebird');\nvar _ = require('lodash');\nvar File = require('./file');\nvar util = require('hexo-util');\nvar fs = require('hexo-fs');\nvar chalk = require('chalk');\nvar EventEmitter = require('events').EventEmitter;\n\nvar Pattern = util.Pattern;\nvar join = pathFn.join;\nvar sep = pathFn.sep;\n\nvar defaultPattern = new Pattern(function() {\n  return {};\n});\n\nfunction Box(ctx, base, options) {\n  EventEmitter.call(this);\n\n  this.options = _.assign({\n    persistent: true\n  }, options);\n\n  if (base.substring(base.length - 1) !== sep) {\n    base += sep;\n  }\n\n  this.context = ctx;\n  this.base = base;\n  this.processors = [];\n  this._processingFiles = {};\n  this.watcher = null;\n  this.Cache = ctx.model('Cache');\n  this.File = this._createFileClass();\n}\n\nrequire('util').inherits(Box, EventEmitter);\n\nfunction escapeBackslash(path) {\n  // Replace backslashes on Windows\n  return path.replace(/\\\\/g, '/');\n}\n\nfunction getHash(path) {\n  return new Promise(function(resolve, reject) {\n    var src = fs.createReadStream(path);\n    var hasher = new util.HashStream();\n\n    src.pipe(hasher)\n      .on('finish', function() {\n        resolve(hasher.read().toString('hex'));\n      })\n      .on('error', reject);\n  });\n}\n\nBox.prototype._createFileClass = function() {\n  var ctx = this.context;\n\n  var _File = function(data) {\n    File.call(this, data);\n  };\n\n  require('util').inherits(_File, File);\n\n  _File.prototype.box = this;\n\n  _File.prototype.render = function(options, callback) {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    return ctx.render.render({\n      path: this.source\n    }, options).asCallback(callback);\n  };\n\n  _File.prototype.renderSync = function(options) {\n    return ctx.render.renderSync({\n      path: this.source\n    }, options);\n  };\n\n  return _File;\n};\n\nBox.prototype.addProcessor = function(pattern, fn) {\n  if (!fn && typeof pattern === 'function') {\n    fn = pattern;\n    pattern = defaultPattern;\n  }\n\n  if (typeof fn !== 'function') throw new TypeError('fn must be a function');\n  if (!(pattern instanceof Pattern)) pattern = new Pattern(pattern);\n\n  this.processors.push({\n    pattern: pattern,\n    process: fn\n  });\n};\n\nBox.prototype._readDir = function(base, fn, prefix) {\n  prefix = prefix || '';\n\n  var self = this;\n\n  return fs.readdir(base).map(function(path) {\n    return fs.stat(join(base, path)).then(function(stats) {\n      if (stats.isDirectory()) {\n        return self._readDir(join(base, path), fn, prefix + path + '/');\n      }\n\n      return self._checkFileStatus(prefix + path).then(function(file) {\n        return fn(file).thenReturn(file);\n      });\n    });\n  }).catch(function(err) {\n    if (err.cause && err.cause.code === 'ENOENT') return;\n    throw err;\n  }).reduce(function(files, item) {\n    return files.concat(item);\n  }, []);\n};\n\nBox.prototype._checkFileStatus = function(path) {\n  var Cache = this.Cache;\n  var src = join(this.base, path);\n  var ctx = this.context;\n\n  return Cache.compareFile(\n    escapeBackslash(src.substring(ctx.base_dir.length)),\n    function() {\n      return getHash(src);\n    },\n\n    function() {\n      return fs.stat(src);\n    }\n  ).then(function(result) {\n    return {\n      type: result.type,\n      path: path\n    };\n  });\n};\n\nBox.prototype.process = function(callback) {\n  var self = this;\n  var base = this.base;\n  var Cache = this.Cache;\n  var ctx = this.context;\n\n  return fs.stat(base).then(function(stats) {\n    if (!stats.isDirectory()) return;\n\n    // Check existing files in cache\n    var relativeBase = escapeBackslash(base.substring(ctx.base_dir.length));\n    var cacheFiles = Cache.filter(function(item) {\n      return item._id.substring(0, relativeBase.length) === relativeBase;\n    }).map(function(item) {\n      return item._id.substring(relativeBase.length);\n    });\n\n    // Read files from directory\n    return self._readDir(base, function(file) {\n      return self._processFile(file.type, file.path);\n    }).map(function(file) {\n      return file.path;\n    }).then(function(files) {\n      // Handle deleted files\n      return Promise.filter(cacheFiles, function(path) {\n        return !~files.indexOf(path);\n      }).map(function(path) {\n        return self._processFile(File.TYPE_DELETE, path);\n      });\n    });\n  }).catch(function(err) {\n    if (err.cause && err.cause.code !== 'ENOENT') throw err;\n  }).asCallback(callback);\n};\n\nBox.prototype.load = Box.prototype.process;\n\nBox.prototype._processFile = function(type, path) {\n  if (this._processingFiles[path]) {\n    return Promise.resolve();\n  }\n\n  this._processingFiles[path] = true;\n\n  var File = this.File;\n  var base = this.base;\n  var ctx = this.context;\n  var self = this;\n\n  this.emit('processBefore', {\n    type: type,\n    path: path\n  });\n\n  return Promise.reduce(this.processors, function(count, processor) {\n    var params = processor.pattern.match(path);\n    if (!params) return count;\n\n    var file = new File({\n      source: join(base, path),\n      path: path,\n      params: params,\n      type: type\n    });\n\n    return Promise.method(processor.process).call(ctx, file)\n      .thenReturn(count + 1);\n  }, 0).then(function(count) {\n    if (count) {\n      ctx.log.debug('Processed: %s', chalk.magenta(path));\n    }\n\n    self.emit('processAfter', {\n      type: type,\n      path: path\n    });\n  }).catch(function(err) {\n    ctx.log.error({err: err}, 'Process failed: %s', chalk.magenta(path));\n  }).finally(function() {\n    self._processingFiles[path] = false;\n  }).thenReturn(path);\n};\n\nBox.prototype.watch = function(callback) {\n  if (this.isWatching()) {\n    return Promise.reject(new Error('Watcher has already started.')).asCallback(callback);\n  }\n\n  var base = this.base;\n  var self = this;\n\n  function getPath(path) {\n    return escapeBackslash(path.substring(base.length));\n  }\n\n  return this.process().then(function() {\n    return fs.watch(base, self.options);\n  }).then(function(watcher) {\n    self.watcher = watcher;\n\n    watcher.on('add', function(path) {\n      self._processFile(File.TYPE_CREATE, getPath(path));\n    });\n\n    watcher.on('change', function(path) {\n      self._processFile(File.TYPE_UPDATE, getPath(path));\n    });\n\n    watcher.on('unlink', function(path) {\n      self._processFile(File.TYPE_DELETE, getPath(path));\n    });\n\n    watcher.on('addDir', function(path) {\n      var prefix = getPath(path);\n      if (prefix) prefix += '/';\n\n      self._readDir(path, function(file) {\n        return self._processFile(file.type, file.path);\n      }, prefix);\n    });\n  }).asCallback(callback);\n};\n\nBox.prototype.unwatch = function() {\n  if (!this.isWatching()) return;\n\n  this.watcher.close();\n  this.watcher = null;\n};\n\nBox.prototype.isWatching = function() {\n  return Boolean(this.watcher);\n};\n\nmodule.exports = Box;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/box/file.js":"'use strict';\n\nvar fs = require('hexo-fs');\n\nfunction File(data) {\n  this.source = data.source;\n  this.path = data.path;\n  this.params = data.params;\n  this.type = data.type;\n}\n\nFile.prototype.read = function(options, callback) {\n  return fs.readFile(this.source, options).asCallback(callback);\n};\n\nFile.prototype.readSync = function(options) {\n  return fs.readFileSync(this.source, options);\n};\n\nFile.prototype.stat = function(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  return fs.stat(this.source).asCallback(callback);\n};\n\nFile.prototype.statSync = function(options) {\n  return fs.statSync(this.source);\n};\n\nFile.TYPE_CREATE = 'create';\nFile.TYPE_UPDATE = 'update';\nFile.TYPE_SKIP = 'skip';\nFile.TYPE_DELETE = 'delete';\n\nmodule.exports = File;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/hexo/router.js":"'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\nvar Promise = require('bluebird');\nvar Stream = require('stream');\nvar util = require('util');\nvar Readable = Stream.Readable;\n\nfunction Router() {\n  EventEmitter.call(this);\n\n  this.routes = {};\n}\n\nutil.inherits(Router, EventEmitter);\n\nRouter.format = Router.prototype.format = function(path) {\n  path = path || '';\n  if (typeof path !== 'string') throw new TypeError('path must be a string!');\n\n  path = path\n    .replace(/^\\/+/, '') // Remove prefixed slashes\n    .replace(/\\\\/g, '/') // Replaces all backslashes\n    .replace(/\\?.*$/, ''); // Remove query string\n\n  // Appends `index.html` to the path with trailing slash\n  if (!path || path[path.length - 1] === '/') {\n    path += 'index.html';\n  }\n\n  return path;\n};\n\nRouter.prototype.list = function() {\n  var routes = this.routes;\n  var keys = Object.keys(routes);\n  var arr = [];\n  var key;\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    key = keys[i];\n    if (routes[key]) arr.push(key);\n  }\n\n  return arr;\n};\n\nRouter.prototype.get = function(path) {\n  if (typeof path !== 'string') throw new TypeError('path must be a string!');\n\n  var data = this.routes[this.format(path)];\n  if (data == null) return;\n\n  return new RouteStream(data);\n};\n\nRouter.prototype.isModified = function(path) {\n  if (typeof path !== 'string') throw new TypeError('path must be a string!');\n\n  var data = this.routes[this.format(path)];\n  return data ? data.modified : false;\n};\n\nRouter.prototype.set = function(path, data) {\n  if (typeof path !== 'string') throw new TypeError('path must be a string!');\n  if (data == null) throw new TypeError('data is required!');\n\n  var obj;\n\n  if (typeof data === 'object' && data.data != null) {\n    obj = data;\n  } else {\n    obj = {\n      data: data,\n      modified: true\n    };\n  }\n\n  if (typeof obj.data === 'function') {\n    if (obj.data.length) {\n      obj.data = Promise.promisify(obj.data);\n    } else {\n      obj.data = Promise.method(obj.data);\n    }\n  }\n\n  path = this.format(path);\n\n  this.routes[path] = {\n    data: obj.data,\n    modified: obj.modified == null ? true : obj.modified\n  };\n\n  this.emit('update', path);\n\n  return this;\n};\n\nRouter.prototype.remove = function(path) {\n  if (typeof path !== 'string') throw new TypeError('path must be a string!');\n  path = this.format(path);\n\n  this.routes[path] = null;\n  this.emit('remove', path);\n\n  return this;\n};\n\nfunction RouteStream(data) {\n  Readable.call(this, {objectMode: true});\n\n  this._data = data.data;\n  this._ended = false;\n  this.modified = data.modified;\n}\n\nutil.inherits(RouteStream, Readable);\n\nRouteStream.prototype._read = function() {\n  var data = this._data;\n\n  if (typeof data !== 'function') {\n    this.push(data);\n    this.push(null);\n    return;\n  }\n\n  // Don't read it twice!\n  if (this._ended) return false;\n  this._ended = true;\n\n  var self = this;\n\n  data().then(function(data) {\n    if (data instanceof Stream && data.readable) {\n      data.on('data', function(d) {\n        self.push(d);\n      });\n\n      data.on('end', function() {\n        self.push(null);\n      });\n\n      data.on('error', function(err) {\n        self.emit('error', err);\n      });\n    } else if (data instanceof Buffer || typeof data === 'string') {\n      self.push(data);\n      self.push(null);\n    } else if (typeof data === 'object') {\n      self.push(JSON.stringify(data));\n      self.push(null);\n    } else {\n      self.push(null);\n    }\n  }).catch(function(err) {\n    self.emit('error', err);\n  });\n};\n\nmodule.exports = Router;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/theme/index.js":"'use strict';\n\nvar pathFn = require('path');\nvar util = require('util');\nvar Box = require('../box');\nvar View = require('./view');\nvar I18n = require('hexo-i18n');\nvar _ = require('lodash');\n\nfunction Theme(ctx) {\n  Box.call(this, ctx, ctx.theme_dir);\n\n  this.config = {};\n\n  this.views = {};\n\n  this.processors = [\n    require('./processors/config'),\n    require('./processors/i18n'),\n    require('./processors/source'),\n    require('./processors/view')\n  ];\n\n  var languages = ctx.config.language;\n\n  if (!Array.isArray(languages)) {\n    languages = [languages];\n  }\n\n  languages.push('default');\n\n  this.i18n = new I18n({\n    languages: _(languages).compact().uniq().value()\n  });\n\n  var _View = this.View = function(path, data) {\n    View.call(this, path, data);\n  };\n\n  util.inherits(_View, View);\n\n  _View.prototype._theme = this;\n  _View.prototype._render = ctx.render;\n  _View.prototype._helper = ctx.extend.helper;\n}\n\nutil.inherits(Theme, Box);\n\nTheme.prototype.getView = function(path) {\n  // Replace backslashes on Windows\n  path = path.replace(/\\\\/g, '/');\n\n  var extname = pathFn.extname(path);\n  var name = path.substring(0, path.length - extname.length);\n  var views = this.views[name];\n\n  if (!views) return;\n\n  if (extname) {\n    return views[extname];\n  }\n\n  return views[Object.keys(views)[0]];\n};\n\nTheme.prototype.setView = function(path, data) {\n  var extname = pathFn.extname(path);\n  var name = path.substring(0, path.length - extname.length);\n  var views = this.views[name] = this.views[name] || {};\n\n  views[extname] = new this.View(path, data);\n};\n\nTheme.prototype.removeView = function(path) {\n  var extname = pathFn.extname(path);\n  var name = path.substring(0, path.length - extname.length);\n  var views = this.views[name];\n\n  if (!views) return;\n\n  delete views[extname];\n};\n\nmodule.exports = Theme;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/theme/view.js":"'use strict';\n\nvar pathFn = require('path');\nvar _ = require('lodash');\nvar yfm = require('hexo-front-matter');\nvar Promise = require('bluebird');\n\nfunction View(path, data) {\n  this.path = path;\n  this.source = pathFn.join(this._theme.base, 'layout', path);\n  this.data = typeof data === 'string' ? yfm(data) : data;\n\n  this._precompile();\n}\n\nView.prototype.render = function(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  var data = this.data;\n  var layout = data.hasOwnProperty('layout') ? data.layout : options.layout;\n  var locals = this._buildLocals(options);\n  var self = this;\n\n  return this._compiled(this._bindHelpers(locals)).then(function(result) {\n    if (result == null || !layout) return result;\n\n    var layoutView = self._resolveLayout(layout);\n    if (!layoutView) return result;\n\n    var layoutLocals = _.assign({}, locals, {\n      body: result,\n      layout: false\n    });\n\n    return layoutView.render(layoutLocals, callback);\n  }).asCallback(callback);\n};\n\nView.prototype.renderSync = function(options) {\n  options = options || {};\n\n  var data = this.data;\n  var layout = data.hasOwnProperty('layout') ? data.layout : options.layout;\n  var locals = this._buildLocals(options);\n  var result = this._compiledSync(this._bindHelpers(locals));\n\n  if (result == null || !layout) return result;\n\n  var layoutView = this._resolveLayout(layout);\n  if (!layoutView) return result;\n\n  var layoutLocals = _.assign({}, locals, {\n    body: result,\n    layout: false\n  });\n\n  return layoutView.renderSync(layoutLocals);\n};\n\nView.prototype._buildLocals = function(locals) {\n  return _.assignIn({}, locals, _.omit(this.data, ['layout', '_content']), {\n    filename: this.source\n  });\n};\n\nView.prototype._bindHelpers = function(locals) {\n  var helpers = this._helper.list();\n  var keys = Object.keys(helpers);\n  var key = '';\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    key = keys[i];\n    locals[key] = _.bind(helpers[key], locals);\n  }\n\n  return locals;\n};\n\nView.prototype._resolveLayout = function(name) {\n  // Relative path\n  var layoutPath = pathFn.join(pathFn.dirname(this.path), name);\n  var layoutView = this._theme.getView(layoutPath);\n\n  if (layoutView && layoutView.source !== this.source) return layoutView;\n\n  // Absolute path\n  layoutView = this._theme.getView(name);\n  if (layoutView && layoutView.source !== this.source) return layoutView;\n};\n\nView.prototype._precompile = function() {\n  var render = this._render;\n  var ctx = render.context;\n  var ext = pathFn.extname(this.path);\n  var renderer = render.getRenderer(ext);\n  var data = {\n    path: this.source,\n    text: this.data._content\n  };\n\n  function buildFilterArguments(result) {\n    var output = render.getOutput(ext) || ext;\n    return [\n      'after_render:' + output,\n      result,\n      {\n        context: ctx,\n        args: [data]\n      }\n    ];\n  }\n\n  if (renderer && typeof renderer.compile === 'function') {\n    var compiled = renderer.compile(data);\n\n    this._compiledSync = function(locals) {\n      var result = compiled(locals);\n      return ctx.execFilterSync.apply(ctx, buildFilterArguments(result));\n    };\n\n    this._compiled = function(locals) {\n      return Promise.resolve(compiled(locals))\n        .then(function(result) {\n          return ctx.execFilter.apply(ctx, buildFilterArguments(result));\n        });\n    };\n  } else {\n    this._compiledSync = function(locals) {\n      return render.renderSync(data, locals);\n    };\n\n    this._compiled = function(locals) {\n      return render.render(data, locals);\n    };\n  }\n};\n\nmodule.exports = View;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo-i18n/lib/i18n.js":"'use strict';\n\nvar vsprintf = require('sprintf-js').vsprintf;\n\nfunction i18n(options){\n  /* jshint validthis: true */\n  options = options || {};\n\n  this.data = {};\n  this.languages = options.languages || ['default'];\n\n  if (!Array.isArray(this.languages)){\n    this.languages = [this.languages];\n  }\n}\n\ni18n.prototype.get = function(languages){\n  var data = this.data;\n  var result = {};\n  var lang, langData, keys, key, i, leni, j, lenj;\n\n  if (languages){\n    if (!Array.isArray(languages)){\n      languages = [languages];\n    }\n  } else {\n    languages = this.languages;\n  }\n\n  for (i = 0, leni = languages.length; i < leni; i++){\n    lang = languages[i];\n    langData = data[lang];\n    if (!langData) continue;\n\n    keys = Object.keys(langData);\n\n    for (j = 0, lenj = keys.length; j < lenj; j++){\n      key = keys[j];\n      if (!result.hasOwnProperty(key)) result[key] = langData[key];\n    }\n  }\n\n  return result;\n};\n\ni18n.prototype.set = function(lang, data){\n  if (typeof lang !== 'string') throw new TypeError('lang must be a string!');\n  if (typeof data !== 'object') throw new TypeError('data is required!');\n\n  this.data[lang] = flattenObject(data);\n\n  return this;\n};\n\ni18n.prototype.remove = function(lang){\n  if (typeof lang !== 'string') throw new TypeError('lang must be a string!');\n\n  delete this.data[lang];\n\n  return this;\n};\n\ni18n.prototype.list = function(){\n  return Object.keys(this.data);\n};\n\nfunction flattenObject(data, obj, parent){\n  obj = obj || {};\n  parent = parent || '';\n\n  var keys = Object.keys(data);\n  var key = '';\n  var item;\n\n  for (var i = 0, len = keys.length; i < len; i++){\n    key = keys[i];\n    item = data[key];\n\n    if (typeof item === 'object'){\n      flattenObject(item, obj, parent + key + '.');\n    } else {\n      obj[parent + key] = item;\n    }\n  }\n\n  return obj;\n}\n\ni18n.prototype.__ = function(lang){\n  var data = this.get(lang);\n\n  return function(){\n    var len = arguments.length;\n    if (!len) return '';\n\n    var args = new Array(len);\n\n    for (var i = 0; i < len; i++){\n      args[i] = arguments[i];\n    }\n\n    var key = args.shift();\n    var str = data[key] || key;\n\n    return vsprintf(str, args);\n  };\n};\n\ni18n.prototype._p = function(lang){\n  var data = this.get(lang);\n\n  return function(){\n    var len = arguments.length;\n    if (!len) return '';\n\n    var args = new Array(len);\n\n    for (var i = 0; i < len; i++){\n      args[i] = arguments[i];\n    }\n\n    var key = args.shift();\n    var number = args.length ? +args[0] : 0;\n    var str = key;\n\n    if (!number && data.hasOwnProperty(key + '.zero')){\n      str = data[key + '.zero'];\n    } else if (number === 1 && data.hasOwnProperty(key + '.one')){\n      str = data[key + '.one'];\n    } else if (data.hasOwnProperty(key + '.other')){\n      str = data[key + '.other'];\n    } else if (data.hasOwnProperty(key)){\n      str = data[key];\n    }\n\n    return vsprintf(str, args);\n  };\n};\n\nmodule.exports = i18n;","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/hexo/locals.js":"'use strict';\n\nfunction Locals() {\n  this.cache = {};\n  this.getters = {};\n}\n\nLocals.prototype.get = function(name) {\n  if (typeof name !== 'string') throw new TypeError('name must be a string!');\n\n  var cache = this.cache[name];\n\n  if (cache == null) {\n    var getter = this.getters[name];\n    if (!getter) return;\n\n    cache = this.cache[name] = getter();\n  }\n\n  return cache;\n};\n\nLocals.prototype.set = function(name, value) {\n  if (typeof name !== 'string') throw new TypeError('name must be a string!');\n  if (value == null) throw new TypeError('value is required!');\n\n  var getter;\n\n  if (typeof value === 'function') {\n    getter = value;\n  } else {\n    getter = function() {\n      return value;\n    };\n  }\n\n  this.getters[name] = getter;\n  this.cache[name] = null;\n\n  return this;\n};\n\nLocals.prototype.remove = function(name) {\n  if (typeof name !== 'string') throw new TypeError('name must be a string!');\n\n  this.getters[name] = null;\n  this.cache[name] = null;\n\n  return this;\n};\n\nLocals.prototype.invalidate = function() {\n  this.cache = {};\n\n  return this;\n};\n\nLocals.prototype.toObject = function() {\n  var result = {};\n  var keys = Object.keys(this.getters);\n  var key = '';\n  var item;\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    key = keys[i];\n    item = this.get(key);\n\n    if (item != null) result[key] = item;\n  }\n\n  return result;\n};\n\nmodule.exports = Locals;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/hexo/default_config.js":"'use strict';\n\nmodule.exports = {\n  // Site\n  title: 'Hexo',\n  subtitle: '',\n  description: '',\n  author: 'John Doe',\n  language: '',\n  timezone: '',\n  // URL\n  url: 'http://yoursite.com',\n  root: '/',\n  permalink: ':year/:month/:day/:title/',\n  permalink_defaults: {},\n  // Directory\n  source_dir: 'source',\n  public_dir: 'public',\n  tag_dir: 'tags',\n  archive_dir: 'archives',\n  category_dir: 'categories',\n  code_dir: 'downloads/code',\n  i18n_dir: ':lang',\n  skip_render: [],\n  // Writing\n  new_post_name: ':title.md',\n  default_layout: 'post',\n  titlecase: false,\n  external_link: true,\n  filename_case: 0,\n  render_drafts: false,\n  post_asset_folder: false,\n  relative_link: false,\n  future: true,\n  highlight: {\n    enable: true,\n    auto_detect: false,\n    line_number: true,\n    tab_replace: ''\n  },\n  // Category & Tag\n  default_category: 'uncategorized',\n  category_map: {},\n  tag_map: {},\n  // Date / Time format\n  date_format: 'YYYY-MM-DD',\n  time_format: 'HH:mm:ss',\n  // Pagination\n  per_page: 10,\n  pagination_dir: 'page',\n  // Extensions\n  theme: 'landscape',\n  // Deployment\n  deploy: {}\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/hexo/load_database.js":"'use strict';\n\nvar fs = require('hexo-fs');\nvar Promise = require('bluebird');\n\nmodule.exports = function(ctx) {\n  if (ctx._dbLoaded) return Promise.resolve();\n\n  var db = ctx.database;\n  var path = db.options.path;\n  var log = ctx.log;\n\n  return fs.exists(path).then(function(exist) {\n    if (!exist) return;\n\n    log.debug('Loading database.');\n    return db.load();\n  }).then(function() {\n    ctx._dbLoaded = true;\n  }).catch(function() {\n    log.error('Database load failed. Deleting database.');\n    return fs.unlink(path);\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/console/clean.js":"'use strict';\n\nvar Promise = require('bluebird');\nvar fs = require('hexo-fs');\n\nfunction cleanConsole(args) {\n  return Promise.all([\n    deleteDatabase(this),\n    deletePublicDir(this)\n  ]);\n}\n\nfunction deleteDatabase(ctx) {\n  var dbPath = ctx.database.options.path;\n\n  return fs.exists(dbPath).then(function(exist) {\n    if (!exist) return;\n\n    return fs.unlink(dbPath).then(function() {\n      ctx.log.info('Deleted database.');\n    });\n  });\n}\n\nfunction deletePublicDir(ctx) {\n  var publicDir = ctx.public_dir;\n\n  return fs.exists(publicDir).then(function(exist) {\n    if (!exist) return;\n\n    return fs.rmdir(publicDir).then(function() {\n      ctx.log.info('Deleted public folder.');\n    });\n  });\n}\n\nmodule.exports = cleanConsole;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/console/config.js":"'use strict';\n\nvar yaml = require('js-yaml');\nvar fs = require('hexo-fs');\nvar pathFn = require('path');\nvar Promise = require('bluebird');\n\nfunction configConsole(args) {\n  var key = args._[0];\n  var value = args._[1];\n  var self = this;\n\n  if (!key) {\n    console.log(this.config);\n    return Promise.resolve();\n  }\n\n  if (!value) {\n    value = getProperty(this.config, key);\n    if (value) console.log(value);\n    return Promise.resolve();\n  }\n\n  var configPath = this.config_path;\n  var extname = pathFn.extname(configPath);\n\n  return fs.exists(configPath).then(function(exist) {\n    if (!exist) return {};\n    return self.render.render({path: configPath});\n  }).then(function(config) {\n    if (!config) config = {};\n\n    var result = '';\n\n    setProperty(config, key, castValue(value));\n\n    if (extname === '.json') {\n      result = JSON.stringify(config);\n    } else {\n      result = yaml.safeDump(config);\n    }\n\n    return fs.writeFile(configPath, result);\n  });\n}\n\nfunction getProperty(obj, key) {\n  var split = key.split('.');\n  var result = obj[split[0]];\n\n  for (var i = 1, len = split.length; i < len; i++) {\n    result = result[split[i]];\n  }\n\n  return result;\n}\n\nfunction setProperty(obj, key, value) {\n  var split = key.split('.');\n  var cursor = obj;\n  var name = '';\n  var lastKey = split.pop();\n\n  for (var i = 0, len = split.length; i < len; i++) {\n    name = split[i];\n    cursor = cursor[name] = cursor[name] || {};\n  }\n\n  cursor[lastKey] = value;\n}\n\nfunction castValue(value) {\n  switch (value){\n    case 'true':\n      return true;\n\n    case 'false':\n      return false;\n\n    case 'null':\n      return null;\n\n    case 'undefined':\n      return undefined;\n  }\n\n  var num = Number(value);\n  if (!isNaN(num)) return num;\n\n  return value;\n}\n\nmodule.exports = configConsole;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/console/deploy.js":"'use strict';\n\nvar _ = require('lodash');\nvar fs = require('hexo-fs');\nvar chalk = require('chalk');\nvar Promise = require('bluebird');\n\nfunction deployConsole(args) {\n  var config = this.config.deploy;\n  var deployers = this.extend.deployer.list();\n  var self = this;\n\n  if (!config) {\n    var help = '';\n\n    help += 'You should configure deployment settings in _config.yml first!\\n\\n';\n    help += 'Available deployer plugins:\\n';\n    help += '  ' + Object.keys(deployers).join(', ') + '\\n\\n';\n    help += 'For more help, you can check the online docs: ' + chalk.underline('http://hexo.io/');\n\n    console.log(help);\n    return;\n  }\n\n  return new Promise(function(resolve, reject) {\n    var generateArgs = _.clone(args);\n    generateArgs.d = false;\n    generateArgs.deploy = false;\n\n    if (args.g || args.generate) {\n      self.call('generate', args).then(resolve, reject);\n    } else {\n      fs.exists(self.public_dir, function(exist) {\n        if (exist) return resolve();\n        self.call('generate', args).then(resolve, reject);\n      });\n    }\n  }).then(function() {\n    self.emit('deployBefore');\n\n    if (!Array.isArray(config)) config = [config];\n    return config;\n  }).each(function(item) {\n    if (!item.type) return;\n\n    var type = item.type;\n\n    if (!deployers[type]) {\n      self.log.error('Deployer not found: %s', chalk.magenta(type));\n      return;\n    }\n\n    self.log.info('Deploying: %s', chalk.magenta(type));\n\n    return deployers[type].call(self, _.extend({}, item, args)).then(function() {\n      self.log.info('Deploy done: %s', chalk.magenta(type));\n    });\n  }).then(function() {\n    self.emit('deployAfter');\n  });\n}\n\nmodule.exports = deployConsole;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/console/generate.js":"'use strict';\n\nvar fs = require('hexo-fs');\nvar pathFn = require('path');\nvar Promise = require('bluebird');\nvar prettyHrtime = require('pretty-hrtime');\nvar chalk = require('chalk');\nvar tildify = require('tildify');\nvar Transform = require('stream').Transform;\nvar _ = require('lodash');\nvar util = require('hexo-util');\n\nvar join = pathFn.join;\n\nfunction generateConsole(args) {\n  var force = args.f || args.force;\n  var route = this.route;\n  var publicDir = this.public_dir;\n  var log = this.log;\n  var self = this;\n  var start = process.hrtime();\n  var Cache = this.model('Cache');\n  var generatingFiles = {};\n\n  function generateFile(path) {\n    // Skip if the file is generating\n    if (generatingFiles[path]) return Promise.resolve();\n\n    // Lock the file\n    generatingFiles[path] = true;\n\n    var dest = join(publicDir, path);\n\n    return fs.exists(dest).then(function(exist) {\n      if (force || !exist) return writeFile(path, true);\n      if (route.isModified(path)) return writeFile(path);\n    }).finally(function() {\n      // Unlock the file\n      generatingFiles[path] = false;\n    });\n  }\n\n  function writeFile(path, force) {\n    var dest = join(publicDir, path);\n    var cacheId = 'public/' + path;\n    var cacheStream = new CacheStream();\n    var hashStream = new util.HashStream();\n\n    // Get data => Cache data => Calculate hash\n    return pipeStream(route.get(path), cacheStream, hashStream).then(function() {\n      var cache = Cache.findById(cacheId);\n      var hash = hashStream.read().toString('hex');\n\n      // Skip generating if hash is unchanged\n      if (!force && cache && cache.hash === hash) {\n        return;\n      }\n\n      // Save new hash to cache\n      return Cache.save({\n        _id: cacheId,\n        hash: hash\n      }).then(function() {\n        // Write cache data to public folder\n        return fs.writeFile(dest, cacheStream.getCache());\n      }).then(function() {\n        log.info('Generated: %s', chalk.magenta(path));\n        return true;\n      });\n    }).finally(function() {\n      // Destroy cache\n      cacheStream.destroy();\n    });\n  }\n\n  function deleteFile(path) {\n    var dest = join(publicDir, path);\n\n    return fs.unlink(dest).then(function() {\n      log.info('Deleted: %s', chalk.magenta(path));\n    }, function(err) {\n      // Skip ENOENT errors (file was deleted)\n      if (err.cause && err.cause.code === 'ENOENT') return;\n      throw err;\n    });\n  }\n\n  function firstGenerate() {\n    // Show the loading time\n    var interval = prettyHrtime(process.hrtime(start));\n    log.info('Files loaded in %s', chalk.cyan(interval));\n\n    // Reset the timer for later usage\n    start = process.hrtime();\n\n    // Check the public folder\n    return fs.stat(publicDir).then(function(stats) {\n      if (!stats.isDirectory()) {\n        throw new Error('%s is not a directory', chalk.magenta(tildify(publicDir)));\n      }\n    }).catch(function(err) {\n      // Create public folder if not exists\n      if (err.cause && err.cause.code === 'ENOENT') {\n        return fs.mkdirs(publicDir);\n      }\n\n      throw err;\n    }).then(function() {\n      var routeList = route.list();\n      var publicFiles = Cache.filter(function(item) {\n        return item._id.substring(0, 7) === 'public/';\n      }).map(function(item) {\n        return item._id.substring(7);\n      });\n\n      return Promise.all([\n        // Generate files\n        Promise.map(routeList, generateFile),\n\n        // Clean files\n        Promise.filter(publicFiles, function(path) {\n          return !~routeList.indexOf(path);\n        }).map(deleteFile)\n      ]);\n    }).spread(function(result) {\n      var interval = prettyHrtime(process.hrtime(start));\n      var count = result.filter(Boolean).length;\n\n      log.info('%d files generated in %s', count, chalk.cyan(interval));\n    });\n  }\n\n  if (args.w || args.watch) {\n    return this.watch().then(firstGenerate).then(function() {\n      log.info('Hexo is watching for file changes. Press Ctrl+C to exit.');\n\n      // Watch changes of the route\n      route.on('update', function(path) {\n        var modified = route.isModified(path);\n        if (!modified) return;\n\n        generateFile(path);\n      }).on('remove', function(path) {\n        deleteFile(path);\n      });\n    });\n  }\n\n  return this.load().then(firstGenerate).then(function() {\n    if (args.d || args.deploy) {\n      return self.call('deploy', args);\n    }\n  });\n}\n\n// Pipe a stream from one to another\nfunction pipeStream() {\n  var args = _.toArray(arguments);\n  var src = args.shift();\n\n  return new Promise(function(resolve, reject) {\n    var stream = src;\n    var target;\n\n    while ((target = args.shift()) != null) {\n      stream = stream.pipe(target).on('error', reject);\n    }\n\n    stream.on('finish', resolve);\n    stream.on('end', resolve);\n    stream.on('close', resolve);\n  });\n}\n\nfunction CacheStream() {\n  Transform.call(this);\n\n  this._cache = [];\n}\n\nrequire('util').inherits(CacheStream, Transform);\n\nCacheStream.prototype._transform = function(chunk, enc, callback) {\n  var buf = chunk instanceof Buffer ? chunk : new Buffer(chunk, enc);\n\n  this._cache.push(buf);\n  this.push(buf);\n  callback();\n};\n\nCacheStream.prototype.destroy = function() {\n  this._cache.length = 0;\n};\n\nCacheStream.prototype.getCache = function() {\n  return Buffer.concat(this._cache);\n};\n\nmodule.exports = generateConsole;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/console/migrate.js":"'use strict';\n\nvar chalk = require('chalk');\n\nfunction migrateConsole(args) {\n  // Display help message if user didn't input any arguments\n  if (!args._.length) {\n    return this.call('help', {_: ['migrate']});\n  }\n\n  var type = args._.shift();\n  var migrators = this.extend.migrator.list();\n\n  if (!migrators[type]) {\n    var help = '';\n\n    help += type.magenta + ' migrator plugin is not installed.\\n\\n';\n    help += 'Installed migrator plugins:\\n';\n    help += '  ' + Object.keys(migrators).join(', ') + '\\n\\n';\n    help += 'For more help, you can check the online docs: ' + chalk.underline('http://hexo.io/');\n\n    console.log(help);\n    return;\n  }\n\n  return migrators[type].call(this, args);\n}\n\nmodule.exports = migrateConsole;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/console/new.js":"'use strict';\n\nvar tildify = require('tildify');\nvar chalk = require('chalk');\n\nvar reservedKeys = {\n  _: true,\n  title: true,\n  layout: true,\n  slug: true,\n  path: true,\n  replace: true,\n  // Global options\n  config: true,\n  debug: true,\n  safe: true,\n  silent: true\n};\n\nfunction newConsole(args) {\n  // Display help message if user didn't input any arguments\n  if (!args._.length) {\n    return this.call('help', {_: ['new']});\n  }\n\n  var data = {\n    title: args._.pop(),\n    layout: args._.length ? args._[0] : this.config.default_layout,\n    slug: args.s || args.slug,\n    path: args.p || args.path\n  };\n\n  var keys = Object.keys(args);\n  var key = '';\n  var self = this;\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    key = keys[i];\n    if (!reservedKeys[key]) data[key] = args[key];\n  }\n\n  return this.post.create(data, args.r || args.replace).then(function(post) {\n    self.log.info('Created: %s', chalk.magenta(tildify(post.path)));\n  });\n}\n\nmodule.exports = newConsole;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/console/publish.js":"'use strict';\n\nvar tildify = require('tildify');\nvar chalk = require('chalk');\n\nfunction publishConsole(args) {\n  // Display help message if user didn't input any arguments\n  if (!args._.length) {\n    return this.call('help', {_: ['publish']});\n  }\n\n  var self = this;\n\n  return this.post.publish({\n    slug: args._.pop(),\n    layout: args._.length ? args._[0] : this.config.default_layout\n  }, args.r || args.replace).then(function(post) {\n    self.log.info('Published: %s', chalk.magenta(tildify(post.path)));\n  });\n}\n\nmodule.exports = publishConsole;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/console/render.js":"'use strict';\n\nvar pathFn = require('path');\nvar tildify = require('tildify');\nvar prettyHrtime = require('pretty-hrtime');\nvar fs = require('hexo-fs');\nvar chalk = require('chalk');\n\nfunction renderConsole(args) {\n  // Display help message if user didn't input any arguments\n  if (!args._.length) {\n    return this.call('help', {_: 'render'});\n  }\n\n  var baseDir = this.base_dir;\n  var src = pathFn.resolve(baseDir, args._[0]);\n  var output = args.o || args.output;\n  var start = process.hrtime();\n  var log = this.log;\n\n  return this.render.render({\n    path: src,\n    engine: args.engine\n  }).then(function(result) {\n    if (typeof result === 'object') {\n      if (args.pretty) {\n        result = JSON.stringify(result, null, '  ');\n      } else {\n        result = JSON.stringify(result);\n      }\n    }\n\n    if (!output) return console.log(result);\n\n    var dest = pathFn.resolve(baseDir, output);\n    var interval = prettyHrtime(process.hrtime(start));\n\n    log.info('Rendered in %s: %s -> %s', chalk.cyan(interval), chalk.magenta(tildify(src)), chalk.magenta(tildify(dest)));\n    return fs.writeFile(dest, result);\n  });\n}\n\nmodule.exports = renderConsole;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/filter/new_post_path.js":"'use strict';\n\nvar pathFn = require('path');\nvar moment = require('moment');\nvar _ = require('lodash');\nvar Promise = require('bluebird');\nvar util = require('hexo-util');\nvar fs = require('hexo-fs');\nvar Permalink = util.Permalink;\nvar permalink;\n\nvar reservedKeys = {\n  year: true,\n  month: true,\n  i_month: true,\n  day: true,\n  i_day: true,\n  title: true\n};\n\nfunction newPostPathFilter(data, replace) {\n  data = data || {};\n\n  var sourceDir = this.source_dir;\n  var draftDir = pathFn.join(sourceDir, '_drafts');\n  var postDir = pathFn.join(sourceDir, '_posts');\n  var config = this.config;\n  var newPostName = config.new_post_name;\n  var permalinkDefaults = config.permalink_defaults;\n  var path = data.path;\n  var layout = data.layout;\n  var slug = data.slug;\n  var target = '';\n\n  if (!permalink || permalink.rule !== newPostName) {\n    permalink = new Permalink(newPostName);\n  }\n\n  if (path) {\n    switch (layout){\n      case 'page':\n        target = pathFn.join(sourceDir, path);\n        break;\n\n      case 'draft':\n        target = pathFn.join(draftDir, path);\n        break;\n\n      default:\n        target = pathFn.join(postDir, path);\n    }\n  } else if (slug) {\n    switch (layout){\n      case 'page':\n        target = pathFn.join(sourceDir, slug, 'index');\n        break;\n\n      case 'draft':\n        target = pathFn.join(draftDir, slug);\n        break;\n\n      default:\n        var date = moment(data.date || Date.now());\n        var keys = Object.keys(data);\n        var key = '';\n\n        var filenameData = {\n          year: date.format('YYYY'),\n          month: date.format('MM'),\n          i_month: date.format('M'),\n          day: date.format('DD'),\n          i_day: date.format('D'),\n          title: slug\n        };\n\n        for (var i = 0, len = keys.length; i < len; i++) {\n          key = keys[i];\n          if (!reservedKeys[key]) filenameData[key] = data[key];\n        }\n\n        target = pathFn.join(postDir, permalink.stringify(\n          _.defaults(filenameData, permalinkDefaults)));\n    }\n  } else {\n    return Promise.reject(new TypeError('Either data.path or data.slug is required!'));\n  }\n\n  if (!pathFn.extname(target)) {\n    target += pathFn.extname(newPostName) || '.md';\n  }\n\n  if (replace) {\n    return Promise.resolve(target);\n  }\n\n  return fs.ensurePath(target);\n}\n\nmodule.exports = newPostPathFilter;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/filter/post_permalink.js":"'use strict';\n\nvar _ = require('lodash');\nvar util = require('hexo-util');\nvar pathFn = require('path');\nvar Permalink = util.Permalink;\nvar permalink;\n\nfunction postPermalinkFilter(data) {\n  var config = this.config;\n  var meta = {\n    id: data.id || data._id,\n    title: data.slug,\n    name: typeof data.slug === 'string' ? pathFn.basename(data.slug) : '',\n    post_title: util.slugize(data.title, {transform: 1}),\n    year: data.date.format('YYYY'),\n    month: data.date.format('MM'),\n    day: data.date.format('DD'),\n    i_month: data.date.format('M'),\n    i_day: data.date.format('D')\n  };\n\n  if (!permalink || permalink.rule !== config.permalink) {\n    permalink = new Permalink(config.permalink);\n  }\n\n  var categories = data.categories;\n\n  if (categories.length) {\n    meta.category = categories.last().slug;\n  } else {\n    meta.category = config.default_category;\n  }\n\n  var keys = Object.keys(data);\n  var key = '';\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    key = keys[i];\n    if (meta.hasOwnProperty(key)) continue;\n\n    // Use Object.getOwnPropertyDescriptor to copy getters to avoid \"Maximum call\n    // stack size exceeded\" error\n    Object.defineProperty(meta, key, Object.getOwnPropertyDescriptor(data, key));\n  }\n\n  return permalink.stringify(_.defaults(meta, config.permalink_defaults));\n}\n\nmodule.exports = postPermalinkFilter;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/css.js":"'use strict';\n\nfunction cssHelper() {\n  var result = '';\n  var path = '';\n\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    path = arguments[i];\n\n    if (i) result += '\\n';\n\n    if (Array.isArray(path)) {\n      result += cssHelper.apply(this, path);\n    } else {\n      if (path.indexOf('?') < 0 && path.substring(path.length - 4, path.length) !== '.css') path += '.css';\n      result += '<link rel=\"stylesheet\" href=\"' + this.url_for(path) + '\">';\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = cssHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/date.js":"'use strict';\n\nvar moment = require('moment-timezone');\nvar isMoment = moment.isMoment;\nvar isDate = require('util').isDate;\n\nfunction getMoment(date, lang, timezone) {\n  if (date == null) date = moment();\n  if (!isMoment(date)) date = moment(isDate(date) ? date : new Date(date));\n\n  if (lang) date = date.locale(lang);\n  if (timezone) date = date.tz(timezone);\n\n  return date;\n}\n\nfunction toISOString(date) {\n  if (date == null) {\n    return new Date().toISOString();\n  }\n\n  if (date instanceof Date || isMoment(date)) {\n    return date.toISOString();\n  }\n\n  return new Date(date).toISOString();\n}\n\nfunction dateHelper(date, format) {\n  var config = this.config;\n  var moment = getMoment(date, getLanguage(this), config.timezone);\n  return moment.format(format || config.date_format);\n}\n\nfunction timeHelper(date, format) {\n  var config = this.config;\n  var moment = getMoment(date, getLanguage(this), config.timezone);\n  return moment.format(format || config.time_format);\n}\n\nfunction fullDateHelper(date, format) {\n  if (format) {\n    var moment = getMoment(date, getLanguage(this), this.config.timezone);\n    return moment.format(format);\n  }\n\n  return this.date(date) + ' ' + this.time(date);\n}\n\nfunction relativeDateHelper(date) {\n  var config = this.config;\n  var moment = getMoment(date, getLanguage(this), config.timezone);\n  return moment.fromNow();\n}\n\nfunction timeTagHelper(date, format) {\n  var config = this.config;\n  return '<time datetime=\"' + toISOString(date) + '\">' + this.date(date, format, getLanguage(this), config.timezone) + '</time>';\n}\n\nfunction getLanguage(ctx) {\n  return ctx.page.lang || ctx.page.language || ctx.config.language;\n}\n\nexports.date = dateHelper;\nexports.date_xml = toISOString;\nexports.time = timeHelper;\nexports.full_date = fullDateHelper;\nexports.relative_date = relativeDateHelper;\nexports.time_tag = timeTagHelper;\nexports.moment = moment;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/debug.js":"'use strict';\n\nvar util = require('util');\n\n// this format object as string, resolves circular reference\nfunction inspectObject(object, options) {\n  return util.inspect(object, options);\n}\n\n// wrapper to log to console\nfunction log() {\n  return console.log.apply(null, arguments);\n}\n\nexports.inspectObject = inspectObject;\nexports.log = log;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/favicon_tag.js":"'use strict';\n\nfunction faviconTagHelper(path) {\n  return '<link rel=\"shortcut icon\" href=\"' + this.url_for(path) + '\">';\n}\n\nmodule.exports = faviconTagHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/feed_tag.js":"'use strict';\n\nfunction feedTagHelper(path, options) {\n  options = options || {};\n\n  var title = options.title || this.config.title;\n\n  return '<link rel=\"alternate\" href=\"' + this.url_for(path) + '\" title=\"' + title + '\">';\n}\n\nmodule.exports = feedTagHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/format.js":"'use strict';\n\nvar util = require('hexo-util');\nvar titlecase = require('titlecase');\n\nexports.strip_html = exports.stripHTML = util.stripHTML;\n\nexports.trim = function(str) {\n  return str.trim();\n};\n\nexports.titlecase = titlecase;\n\nexports.word_wrap = exports.wordWrap = util.wordWrap;\n\nexports.truncate = util.truncate;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/fragment_cache.js":"'use strict';\n\nmodule.exports = function(ctx) {\n  var cache = {};\n\n  return function fragmentCache(id, fn) {\n    if (this.cache && cache[id] != null) return cache[id];\n\n    var result = cache[id] = fn();\n    return result;\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/gravatar.js":"'use strict';\n\nvar crypto = require('crypto');\nvar querystring = require('querystring');\n\nfunction md5(str) {\n  return crypto.createHash('md5').update(str).digest('hex');\n}\n\nfunction gravatarHelper(email, options) {\n  if (typeof options === 'number') {\n    options = {s: options};\n  }\n\n  var str = 'https://www.gravatar.com/avatar/' + md5(email.toLowerCase());\n  var qs = querystring.stringify(options);\n\n  if (qs) str += '?' + qs;\n\n  return str;\n}\n\nmodule.exports = gravatarHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/image_tag.js":"'use strict';\n\nvar htmlTag = require('hexo-util').htmlTag;\n\nfunction imageTagHelper(path, options) {\n  options = options || {};\n\n  var attrs = {\n    src: this.url_for(path)\n  };\n\n  var keys = Object.keys(options);\n  var key = '';\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    key = keys[i];\n    attrs[key] = options[key];\n  }\n\n  if (attrs.class && Array.isArray(attrs.class)) {\n    attrs.class = attrs.class.join(' ');\n  }\n\n  return htmlTag('img', attrs);\n}\n\nmodule.exports = imageTagHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/is.js":"'use strict';\n\nfunction isCurrentHelper(path, strict) {\n  path = path || '';\n\n  if (strict) {\n    if (path[path.length - 1] === '/') path += 'index.html';\n\n    return this.path === path;\n  }\n\n  path = path.replace(/\\/index\\.html$/, '/');\n\n  return this.path.substring(0, path.length) === path;\n}\n\nfunction isHomeHelper() {\n  return Boolean(this.page.__index);\n}\n\nfunction isPostHelper() {\n  return Boolean(this.page.__post);\n}\n\nfunction isPageHelper() {\n  return Boolean(this.page.__page);\n}\n\nfunction isArchiveHelper() {\n  return Boolean(this.page.archive);\n}\n\nfunction isYearHelper(year) {\n  var page = this.page;\n  if (!page.archive) return false;\n\n  if (year) {\n    return page.year === year;\n  }\n\n  return Boolean(page.year);\n}\n\nfunction isMonthHelper(year, month) {\n  var page = this.page;\n  if (!page.archive) return false;\n\n  if (year) {\n    if (month) {\n      return page.year === year && page.month === month;\n    }\n\n    return page.month === year;\n  }\n\n  return Boolean(page.year && page.month);\n}\n\nfunction isCategoryHelper(category) {\n  if (category) {\n    return this.page.category === category;\n  }\n\n  return Boolean(this.page.category);\n}\n\nfunction isTagHelper(tag) {\n  if (tag) {\n    return this.page.tag === tag;\n  }\n\n  return Boolean(this.page.tag);\n}\n\nexports.current = isCurrentHelper;\nexports.home = isHomeHelper;\nexports.post = isPostHelper;\nexports.page = isPageHelper;\nexports.archive = isArchiveHelper;\nexports.year = isYearHelper;\nexports.month = isMonthHelper;\nexports.category = isCategoryHelper;\nexports.tag = isTagHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/js.js":"'use strict';\n\nfunction jsHelper() {\n  var result = '';\n  var path = '';\n\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    path = arguments[i];\n\n    if (i) result += '\\n';\n\n    if (Array.isArray(path)) {\n      result += jsHelper.apply(this, path);\n    } else {\n      if (path.indexOf('?') < 0 && path.substring(path.length - 3, path.length) !== '.js') path += '.js';\n      result += '<script src=\"' + this.url_for(path) + '\"></script>';\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = jsHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/link_to.js":"'use strict';\n\nvar htmlTag = require('hexo-util').htmlTag;\n\nfunction linkToHelper(path, text, options) {\n  if (typeof options === 'boolean') options = {external: options};\n  options = options || {};\n\n  if (!text) text = path.replace(/^https?:\\/\\/|\\/$/g, '');\n\n  var attrs = {\n    href: this.url_for(path),\n    title: text\n  };\n\n  var keys = Object.keys(options);\n  var key = '';\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    key = keys[i];\n    attrs[key] = options[key];\n  }\n\n  if (attrs.external) {\n    attrs.target = '_blank';\n    attrs.rel = 'external';\n    attrs.external = null;\n  }\n\n  if (attrs.class && Array.isArray(attrs.class)) {\n    attrs.class = attrs.class.join(' ');\n  }\n\n  return htmlTag('a', attrs, text);\n}\n\nmodule.exports = linkToHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/list_categories.js":"'use strict';\n\nfunction listCategoriesHelper(categories, options) {\n  if (!options && (!categories || !categories.hasOwnProperty('length'))) {\n    options = categories;\n    categories = this.site.categories;\n  }\n\n  if (!categories || !categories.length) return '';\n  options = options || {};\n\n  var style = options.hasOwnProperty('style') ? options.style : 'list';\n  var showCount = options.hasOwnProperty('show_count') ? options.show_count : true;\n  var className = options.class || 'category';\n  var depth = options.depth ? parseInt(options.depth, 10) : 0;\n  var orderby = options.orderby || 'name';\n  var order = options.order || 1;\n  var transform = options.transform;\n  var separator = options.hasOwnProperty('separator') ? options.separator : ', ';\n  var showCurrent = options.show_current || false;\n  var suffix = options.suffix || '';\n  var childrenIndicator = options.hasOwnProperty('children_indicator') ? options.children_indicator : false;\n  var result = '';\n  var self = this;\n\n  function prepareQuery(parent) {\n    var query = {};\n\n    if (parent) {\n      query.parent = parent;\n    } else {\n      query.parent = {$exists: false};\n    }\n\n    return categories.find(query).sort(orderby, order).filter(function(cat) {\n      return cat.length;\n    });\n  }\n\n  function hierarchicalList(level, parent) {\n    var result = '';\n\n    prepareQuery(parent).forEach(function(cat, i) {\n      var child;\n      if (!depth || level + 1 < depth) {\n        child = hierarchicalList(level + 1, cat._id);\n      }\n\n      var isCurrent = false;\n      if (showCurrent && self.page) {\n        for (var j = 0; j < cat.length; j++) {\n          var post = cat.posts.data[j];\n          if (post && post._id === self.page._id) {\n            isCurrent = true;\n            break;\n          }\n        }\n\n        // special case: category page\n        if (!isCurrent && self.page.base) {\n          if (self.page.base.indexOf(cat.path) === 0) {\n            isCurrent = true;\n          }\n        }\n      }\n\n      var additionalClassName = '';\n      if (child && childrenIndicator) {\n        additionalClassName = ' ' + childrenIndicator;\n      }\n\n      result += '<li class=\"' + className + '-list-item' + additionalClassName + '\">';\n\n      result += '<a class=\"' + className + '-list-link' + (isCurrent ? ' current' : '') + '\" href=\"' + self.url_for(cat.path) + suffix + '\">';\n      result += transform ? transform(cat.name) : cat.name;\n      result += '</a>';\n\n      if (showCount) {\n        result += '<span class=\"' + className + '-list-count\">' + cat.length + '</span>';\n      }\n\n      if (child) {\n        result += '<ul class=\"' + className + '-list-child\">' + child + '</ul>';\n      }\n\n      result += '</li>';\n    });\n\n    return result;\n  }\n\n  function flatList(level, parent) {\n    var result = '';\n\n    prepareQuery(parent).forEach(function(cat, i) {\n      if (i || level) result += separator;\n\n      result += '<a class=\"' + className + '-link\" href=\"' + self.url_for(cat.path) + suffix + '\">';\n      result += transform ? transform(cat.name) : cat.name;\n\n      if (showCount) {\n        result += '<span class=\"' + className + '-count\">' + cat.length + '</span>';\n      }\n\n      result += '</a>';\n\n      if (!depth || level + 1 < depth) {\n        result += flatList(level + 1, cat._id);\n      }\n    });\n\n    return result;\n  }\n\n  if (style === 'list') {\n    result += '<ul class=\"' + className + '-list\">' + hierarchicalList(0) + '</ul>';\n  } else {\n    result += flatList(0);\n  }\n\n  return result;\n}\n\nmodule.exports = listCategoriesHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/list_posts.js":"'use strict';\n\nfunction listPostsHelper(posts, options) {\n  if (!options && (!posts || !posts.hasOwnProperty('length'))) {\n    options = posts;\n    posts = this.site.posts;\n  }\n\n  options = options || {};\n\n  var style = options.hasOwnProperty('style') ? options.style : 'list';\n  var orderby = options.orderby || 'date';\n  var order = options.order || -1;\n  var className = options.class || 'post';\n  var transform = options.transform;\n  var separator = options.hasOwnProperty('separator') ? options.separator : ', ';\n  var amount = options.amount || 6;\n  var result = '';\n  var self = this;\n\n  // Sort the posts\n  posts = posts.sort(orderby, order);\n\n  // Limit the number of posts\n  if (amount) posts = posts.limit(amount);\n\n  if (style === 'list') {\n    result += '<ul class=\"' + className + '-list\">';\n\n    posts.forEach(function(post) {\n      var title = post.title || post.slug;\n\n      result += '<li class=\"' + className + '-list-item\">';\n\n      result += '<a class=\"' + className + '-list-link\" href=\"' + self.url_for(post.path) + '\">';\n      result += transform ? transform(title) : title;\n      result += '</a>';\n\n      result += '</li>';\n    });\n\n    result += '</ul>';\n  } else {\n    posts.forEach(function(post, i) {\n      if (i) result += separator;\n\n      var title = post.title || post.slug;\n\n      result += '<a class=\"' + className + '-link\" href=\"' + self.url_for(post.path) + '\">';\n      result += transform ? transform(title) : title;\n      result += '</a>';\n    });\n  }\n\n  return result;\n}\n\nmodule.exports = listPostsHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/list_tags.js":"'use strict';\n\nfunction listTagsHelper(tags, options) {\n  if (!options && (!tags || !tags.hasOwnProperty('length'))) {\n    options = tags;\n    tags = this.site.tags;\n  }\n\n  if (!tags || !tags.length) return '';\n  options = options || {};\n\n  var style = options.hasOwnProperty('style') ? options.style : 'list';\n  var showCount = options.hasOwnProperty('show_count') ? options.show_count : true;\n  var className = options.class || 'tag';\n  var orderby = options.orderby || 'name';\n  var order = options.order || 1;\n  var transform = options.transform;\n  var suffix = options.suffix || '';\n  var separator = options.hasOwnProperty('separator') ? options.separator : ', ';\n  var result = '';\n  var self = this;\n\n  // Sort the tags\n  tags = tags.sort(orderby, order);\n\n  // Ignore tags with zero posts\n  tags = tags.filter(function(tag) {\n    return tag.length;\n  });\n\n  // Limit the number of tags\n  if (options.amount) tags = tags.limit(options.amount);\n\n  if (style === 'list') {\n    result += '<ul class=\"' + className + '-list\">';\n\n    tags.forEach(function(tag) {\n      result += '<li class=\"' + className + '-list-item\">';\n\n      result += '<a class=\"' + className + '-list-link\" href=\"' + self.url_for(tag.path) + suffix + '\">';\n      result += transform ? transform(tag.name) : tag.name;\n      result += '</a>';\n\n      if (showCount) {\n        result += '<span class=\"' + className + '-list-count\">' + tag.length + '</span>';\n      }\n\n      result += '</li>';\n    });\n\n    result += '</ul>';\n  } else {\n    tags.forEach(function(tag, i) {\n      if (i) result += separator;\n\n      result += '<a class=\"' + className + '-link\" href=\"' + self.url_for(tag.path) + suffix + '\">';\n      result += transform ? transform(tag.name) : tag.name;\n\n      if (showCount) {\n        result += '<span class=\"' + className + '-count\">' + tag.length + '</span>';\n      }\n\n      result += '</a>';\n    });\n  }\n\n  return result;\n}\n\nmodule.exports = listTagsHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/mail_to.js":"'use strict';\n\nvar htmlTag = require('hexo-util').htmlTag;\nvar qs = require('querystring');\n\nfunction mailToHelper(path, text, options) {\n  options = options || {};\n\n  if (Array.isArray(path)) path = path.join(',');\n  if (!text) text = path;\n\n  var attrs = {\n    href: 'mailto:' + path,\n    title: text\n  };\n\n  var keys = Object.keys(options);\n  var key = '';\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    key = keys[i];\n    attrs[key] = options[key];\n  }\n\n  if (attrs.class && Array.isArray(attrs.class)) {\n    attrs.class = attrs.class.join(' ');\n  }\n\n  var data = {};\n\n  ['subject', 'cc', 'bcc', 'body'].forEach(function(i) {\n    var item = attrs[i];\n\n    if (item) {\n      data[i] = Array.isArray(item) ? item.join(',') : item;\n      attrs[i] = null;\n    }\n  });\n\n  var querystring = qs.stringify(data);\n  if (querystring) attrs.href += '?' + querystring;\n\n  return htmlTag('a', attrs, text);\n}\n\nmodule.exports = mailToHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/markdown.js":"'use strict';\n\nfunction markdownHelper(text, options) {\n  return this.render(text, 'markdown', options);\n}\n\nmodule.exports = markdownHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/number_format.js":"'use strict';\n\nfunction numberFormatHelper(num, options) {\n  options = options || {};\n\n  var split = num.toString().split('.');\n  var before = split.shift();\n  var after = split.length ? split[0] : '';\n  var delimiter = options.delimiter || ',';\n  var separator = options.separator || '.';\n  var precision = options.precision;\n  var i, len;\n\n  if (delimiter) {\n    var beforeArr = [];\n    var beforeLength = before.length;\n    var beforeFirst = beforeLength % 3;\n\n    if (beforeFirst) beforeArr.push(before.substr(0, beforeFirst));\n\n    for (i = beforeFirst; i < beforeLength; i += 3) {\n      beforeArr.push(before.substr(i, 3));\n    }\n\n    before = beforeArr.join(delimiter);\n  }\n\n  if (precision) {\n    var afterLength = after.length;\n    var afterResult = '';\n\n    if (afterLength > precision) {\n      var afterLast = after[precision];\n      var last = parseInt(after[precision - 1], 10);\n\n      afterResult = after.substr(0, precision - 1) + (afterLast < 5 ? last : last + 1);\n    } else {\n      afterResult = after;\n      for (i = 0, len = precision - afterLength; i < len; i++) {\n        afterResult += '0';\n      }\n    }\n\n    after = afterResult;\n  } else if (precision === 0 || precision === '0') {\n    after = '';\n  }\n\n  return before + (after ? separator + after : '');\n}\n\nmodule.exports = numberFormatHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/open_graph.js":"'use strict';\n\nvar urlFn = require('url');\nvar moment = require('moment');\nvar util = require('hexo-util');\nvar htmlTag = util.htmlTag;\nvar stripHTML = util.stripHTML;\nvar cheerio;\n\nfunction meta(name, content) {\n  return htmlTag('meta', {\n    name: name,\n    content: content\n  }) + '\\n';\n}\n\nfunction og(name, content) {\n  return htmlTag('meta', {\n    property: name,\n    content: content\n  }) + '\\n';\n}\n\nfunction openGraphHelper(options) {\n  options = options || {};\n\n  if (!cheerio) cheerio = require('cheerio');\n\n  var page = this.page;\n  var config = this.config;\n  var content = page.content;\n  var images = options.image || options.images || page.photos || [];\n  var description = options.description || page.description || page.excerpt || content || config.description;\n  var keywords = page.tags;\n  var title = options.title || page.title || config.title;\n  var type = options.type || (this.is_post() ? 'article' : 'website');\n  var url = options.url || this.url;\n  var siteName = options.site_name || config.title;\n  var twitterCard = options.twitter_card || 'summary';\n  var updated = options.updated !== false ? (options.updated || page.updated) : false;\n  var result = '';\n\n  if (!Array.isArray(images)) images = [images];\n\n  if (description) {\n    description = stripHTML(description).substring(0, 200)\n      .trim() // Remove prefixing/trailing spaces\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/\\n/g, ' '); // Replace new lines by spaces\n  }\n\n  if (!images.length && content) {\n    images = images.slice();\n\n    var $ = cheerio.load(content);\n\n    $('img').each(function() {\n      var src = $(this).attr('src');\n      if (src) images.push(src);\n    });\n  }\n\n  if (description) {\n    result += meta('description', description);\n  }\n\n  if (keywords && keywords.toArray()) {\n    result += meta('keywords', keywords.map(function(tag) {\n      return tag.name;\n    }).filter(function(keyword) {\n      return !!keyword;\n    }).join());\n  }\n\n  result += og('og:type', type);\n  result += og('og:title', title);\n  result += og('og:url', url);\n  result += og('og:site_name', siteName);\n  if (description) {\n    result += og('og:description', description);\n  }\n\n  images = images.map(function(path) {\n    if (!urlFn.parse(path).host) {\n      // resolve `path`'s absolute path relative to current page's url\n      // `path` can be both absolute (starts with `/`) or relative.\n      return urlFn.resolve(url || config.url, path);\n    }\n\n    return path;\n  });\n\n  images.forEach(function(path) {\n    result += og('og:image', path);\n  });\n\n  if (updated) {\n    if ((moment.isMoment(updated) || moment.isDate(updated)) && !isNaN(updated.valueOf())) {\n      result += og('og:updated_time', updated.toISOString());\n    }\n  }\n\n  result += meta('twitter:card', twitterCard);\n  result += meta('twitter:title', title);\n  if (description) {\n    result += meta('twitter:description', description);\n  }\n\n  if (images.length) {\n    result += meta('twitter:image', images[0]);\n  }\n\n  if (options.twitter_id) {\n    var twitterId = options.twitter_id;\n    if (twitterId[0] !== '@') twitterId = '@' + twitterId;\n\n    result += meta('twitter:creator', twitterId);\n  }\n\n  if (options.twitter_site) {\n    result += meta('twitter:site', options.twitter_site);\n  }\n\n  if (options.google_plus) {\n    result += htmlTag('link', {rel: 'publisher', href: options.google_plus}) + '\\n';\n  }\n\n  if (options.fb_admins) {\n    result += og('fb:admins', options.fb_admins);\n  }\n\n  if (options.fb_app_id) {\n    result += og('fb:app_id', options.fb_app_id);\n  }\n\n  return result.trim();\n}\n\nmodule.exports = openGraphHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/paginator.js":"'use strict';\n\nfunction paginatorHelper(options) {\n  options = options || {};\n\n  var current = options.current || this.page.current || 0;\n  var total = options.total || this.page.total || 1;\n  var endSize = options.hasOwnProperty('end_size') ? +options.end_size : 1;\n  var midSize = options.hasOwnProperty('mid_size') ? +options.mid_size : 2;\n  var space = options.hasOwnProperty('space') ? options.space : '&hellip;';\n  var base = options.base || this.page.base || '';\n  var format = options.format || this.config.pagination_dir + '/%d/';\n  var prevText = options.prev_text || 'Prev';\n  var nextText = options.next_text || 'Next';\n  var prevNext = options.hasOwnProperty('prev_next') ? options.prev_next : true;\n  var transform = options.transform;\n  var self = this;\n  var result = '';\n  var i;\n\n  if (!current) return '';\n\n  var currentPage = '<span class=\"page-number current\">' +\n    (transform ? transform(current) : current) +\n    '</span>';\n\n  function link(i) {\n    return self.url_for(i === 1 ? base : base + format.replace('%d', i));\n  }\n\n  function pageLink(i) {\n    return '<a class=\"page-number\" href=\"' + link(i) + '\">' +\n      (transform ? transform(i) : i) +\n      '</a>';\n  }\n\n  // Display the link to the previous page\n  if (prevNext && current > 1) {\n    result += '<a class=\"extend prev\" rel=\"prev\" href=\"' + link(current - 1) + '\">' + prevText + '</a>';\n  }\n\n  if (options.show_all) {\n    // Display pages on the left side of the current page\n    for (i = 1; i < current; i++) {\n      result += pageLink(i);\n    }\n\n    // Display the current page\n    result += currentPage;\n\n    // Display pages on the right side of the current page\n    for (i = current + 1; i <= total; i++) {\n      result += pageLink(i);\n    }\n  } else {\n    // It's too complicated. May need refactor.\n    var leftEnd = current <= endSize ? current - 1 : endSize;\n    var rightEnd = total - current <= endSize ? current + 1 : total - endSize + 1;\n    var leftMid = current - midSize <= endSize ? current - midSize + endSize : current - midSize;\n    var rightMid = current + midSize + endSize > total ? current + midSize - endSize : current + midSize;\n    var spaceHtml = '<span class=\"space\">' + space + '</span>';\n\n    // Display pages on the left edge\n    for (i = 1; i <= leftEnd; i++) {\n      result += pageLink(i);\n    }\n\n    // Display spaces between edges and middle pages\n    if (space && current - endSize - midSize > 1) {\n      result += spaceHtml;\n    }\n\n    // Display left middle pages\n    if (leftMid > leftEnd) {\n      for (i = leftMid; i < current; i++) {\n        result += pageLink(i);\n      }\n    }\n\n    // Display the current page\n    result += currentPage;\n\n    // Display right middle pages\n    if (rightMid < rightEnd) {\n      for (i = current + 1; i <= rightMid; i++) {\n        result += pageLink(i);\n      }\n    }\n\n    // Display spaces between edges and middle pages\n    if (space && total - endSize - midSize > current) {\n      result += spaceHtml;\n    }\n\n    // Dispaly pages on the right edge\n    for (i = rightEnd; i <= total; i++) {\n      result += pageLink(i);\n    }\n  }\n\n  // Display the link to the next page\n  if (prevNext && current < total) {\n    result += '<a class=\"extend next\" rel=\"next\" href=\"' + link(current + 1) + '\">' + nextText + '</a>';\n  }\n\n  return result;\n}\n\nmodule.exports = paginatorHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/partial.js":"'use strict';\n\nvar pathFn = require('path');\nvar _ = require('lodash');\nvar chalk = require('chalk');\n\nmodule.exports = function(ctx) {\n  return function partial(name, locals, options) {\n    if (typeof name !== 'string') throw new TypeError('name must be a string!');\n\n    options = options || {};\n\n    var cache = options.cache;\n    var viewDir = this.view_dir;\n    var currentView = this.filename.substring(viewDir.length);\n    var path = pathFn.join(pathFn.dirname(currentView), name);\n    var view = ctx.theme.getView(path) || ctx.theme.getView(name);\n    var viewLocals = { layout: false };\n\n    if (!view) {\n      ctx.log.warn('Partial %s does not exist. %s', chalk.magenta(name), chalk.gray('(in ' + currentView + ')'));\n      return '';\n    }\n\n    if (options.only) {\n      _.assign(viewLocals, locals);\n    } else {\n      _.assign(viewLocals, this, locals);\n    }\n\n    // Partial don't need layout\n    viewLocals.layout = false;\n\n    if (cache) {\n      var cacheId = typeof cache === 'string' ? cache : view.path;\n\n      return this.fragment_cache(cacheId, function() {\n        return view.renderSync(viewLocals);\n      });\n    }\n\n    return view.renderSync(viewLocals);\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/relative_url.js":"'use strict';\n\nfunction relativeUrlHelper(from, to) {\n  from = from || '';\n  to = to || '';\n\n  var fromParts = from.split('/');\n  var toParts = to.split('/');\n  var length = Math.min(fromParts.length, toParts.length);\n  var i = 0;\n\n  for (; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) break;\n  }\n\n  var out = toParts.slice(i);\n\n  for (var j = fromParts.length - i - 1; j > 0; j--) {\n    out.unshift('..');\n  }\n\n  var outLength = out.length;\n\n  // If the last 2 elements of `out` is empty strings, replace them with `index.html`.\n  if (outLength > 1 && !out[outLength - 1] && !out[outLength - 2]) {\n    out = out.slice(0, outLength - 2).concat('index.html');\n  }\n\n  return out.join('/').replace(/\\/{2,}/g, '/');\n}\n\nmodule.exports = relativeUrlHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/search_form.js":"'use strict';\n\nfunction searchFormHelper(options) {\n  options = options || {};\n\n  var config = this.config;\n  var className = options.class || 'search-form';\n  var text = options.hasOwnProperty('text') ? options.text : 'Search';\n  var button = options.button;\n\n  return '<form action=\"//google.com/search\" method=\"get\" accept-charset=\"UTF-8\" class=\"' + className + '\">' +\n    '<input type=\"search\" name=\"q\" class=\"' + className + '-input\"' + (text ? ' placeholder=\"' + text + '\"' : '') + '>' +\n    (button ? '<button type=\"submit\" class=\"' + className + '-submit\">' + (typeof button === 'string' ? button : text) + '</button>' : '') +\n    '<input type=\"hidden\" name=\"sitesearch\" value=\"' + config.url + '\">' +\n    '</form>';\n}\n\nmodule.exports = searchFormHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/tagcloud.js":"'use strict';\n\n// https://github.com/imathis/hsl-picker/blob/master/assets/javascripts/modules/color.coffee\nvar rHex3 = /^#([0-9a-f]{3})$/;\nvar rHex6 = /^#([0-9a-f]{6})$/;\nvar rRGB = /^rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,?\\s*(0?\\.?\\d+)?\\s*\\)$/;\nvar rHSL = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\%\\s*,\\s*(\\d{1,3})\\%\\s*,?\\s*(0?\\.?\\d+)?\\s*\\)$/;\n\n// http://www.w3.org/TR/css3-color/#svg-color\nvar colorNames = {\n  aliceblue: {r: 240, g: 248, b: 255, a: 1},\n  antiquewhite: {r: 250, g: 235, b: 215, a: 1},\n  aqua: {r: 0, g: 255, b: 255, a: 1},\n  aquamarine: {r: 127, g: 255, b: 212, a: 1},\n  azure: {r: 240, g: 255, b: 255, a: 1},\n  beige: {r: 245, g: 245, b: 220, a: 1},\n  bisque: {r: 255, g: 228, b: 196, a: 1},\n  black: {r: 0, g: 0, b: 0, a: 1},\n  blanchedalmond: {r: 255, g: 235, b: 205, a: 1},\n  blue: {r: 0, g: 0, b: 255, a: 1},\n  blueviolet: {r: 138, g: 43, b: 226, a: 1},\n  brown: {r: 165, g: 42, b: 42, a: 1},\n  burlywood: {r: 222, g: 184, b: 135, a: 1},\n  cadetblue: {r: 95, g: 158, b: 160, a: 1},\n  chartreuse: {r: 127, g: 255, b: 0, a: 1},\n  chocolate: {r: 210, g: 105, b: 30, a: 1},\n  coral: {r: 255, g: 127, b: 80, a: 1},\n  cornflowerblue: {r: 100, g: 149, b: 237, a: 1},\n  cornsilk: {r: 255, g: 248, b: 220, a: 1},\n  crimson: {r: 220, g: 20, b: 60, a: 1},\n  cyan: {r: 0, g: 255, b: 255, a: 1},\n  darkblue: {r: 0, g: 0, b: 139, a: 1},\n  darkcyan: {r: 0, g: 139, b: 139, a: 1},\n  darkgoldenrod: {r: 184, g: 134, b: 11, a: 1},\n  darkgray: {r: 169, g: 169, b: 169, a: 1},\n  darkgreen: {r: 0, g: 100, b: 0, a: 1},\n  darkgrey: {r: 169, g: 169, b: 169, a: 1},\n  darkkhaki: {r: 189, g: 183, b: 107, a: 1},\n  darkmagenta: {r: 139, g: 0, b: 139, a: 1},\n  darkolivegreen: {r: 85, g: 107, b: 47, a: 1},\n  darkorange: {r: 255, g: 140, b: 0, a: 1},\n  darkorchid: {r: 153, g: 50, b: 204, a: 1},\n  darkred: {r: 139, g: 0, b: 0, a: 1},\n  darksalmon: {r: 233, g: 150, b: 122, a: 1},\n  darkseagreen: {r: 143, g: 188, b: 143, a: 1},\n  darkslateblue: {r: 72, g: 61, b: 139, a: 1},\n  darkslategray: {r: 47, g: 79, b: 79, a: 1},\n  darkslategrey: {r: 47, g: 79, b: 79, a: 1},\n  darkturquoise: {r: 0, g: 206, b: 209, a: 1},\n  darkviolet: {r: 148, g: 0, b: 211, a: 1},\n  deeppink: {r: 255, g: 20, b: 147, a: 1},\n  deepskyblue: {r: 0, g: 191, b: 255, a: 1},\n  dimgray: {r: 105, g: 105, b: 105, a: 1},\n  dimgrey: {r: 105, g: 105, b: 105, a: 1},\n  dodgerblue: {r: 30, g: 144, b: 255, a: 1},\n  firebrick: {r: 178, g: 34, b: 34, a: 1},\n  floralwhite: {r: 255, g: 250, b: 240, a: 1},\n  forestgreen: {r: 34, g: 139, b: 34, a: 1},\n  fuchsia: {r: 255, g: 0, b: 255, a: 1},\n  gainsboro: {r: 220, g: 220, b: 220, a: 1},\n  ghostwhite: {r: 248, g: 248, b: 255, a: 1},\n  gold: {r: 255, g: 215, b: 0, a: 1},\n  goldenrod: {r: 218, g: 165, b: 32, a: 1},\n  gray: {r: 128, g: 128, b: 128, a: 1},\n  green: {r: 0, g: 128, b: 0, a: 1},\n  greenyellow: {r: 173, g: 255, b: 47, a: 1},\n  grey: {r: 128, g: 128, b: 128, a: 1},\n  honeydew: {r: 240, g: 255, b: 240, a: 1},\n  hotpink: {r: 255, g: 105, b: 180, a: 1},\n  indianred: {r: 205, g: 92, b: 92, a: 1},\n  indigo: {r: 75, g: 0, b: 130, a: 1},\n  ivory: {r: 255, g: 255, b: 240, a: 1},\n  khaki: {r: 240, g: 230, b: 140, a: 1},\n  lavender: {r: 230, g: 230, b: 250, a: 1},\n  lavenderblush: {r: 255, g: 240, b: 245, a: 1},\n  lawngreen: {r: 124, g: 252, b: 0, a: 1},\n  lemonchiffon: {r: 255, g: 250, b: 205, a: 1},\n  lightblue: {r: 173, g: 216, b: 230, a: 1},\n  lightcoral: {r: 240, g: 128, b: 128, a: 1},\n  lightcyan: {r: 224, g: 255, b: 255, a: 1},\n  lightgoldenrodyellow: {r: 250, g: 250, b: 210, a: 1},\n  lightgray: {r: 211, g: 211, b: 211, a: 1},\n  lightgreen: {r: 144, g: 238, b: 144, a: 1},\n  lightgrey: {r: 211, g: 211, b: 211, a: 1},\n  lightpink: {r: 255, g: 182, b: 193, a: 1},\n  lightsalmon: {r: 255, g: 160, b: 122, a: 1},\n  lightseagreen: {r: 32, g: 178, b: 170, a: 1},\n  lightskyblue: {r: 135, g: 206, b: 250, a: 1},\n  lightslategray: {r: 119, g: 136, b: 153, a: 1},\n  lightslategrey: {r: 119, g: 136, b: 153, a: 1},\n  lightsteelblue: {r: 176, g: 196, b: 222, a: 1},\n  lightyellow: {r: 255, g: 255, b: 224, a: 1},\n  lime: {r: 0, g: 255, b: 0, a: 1},\n  limegreen: {r: 50, g: 205, b: 50, a: 1},\n  linen: {r: 250, g: 240, b: 230, a: 1},\n  magenta: {r: 255, g: 0, b: 255, a: 1},\n  maroon: {r: 128, g: 0, b: 0, a: 1},\n  mediumaquamarine: {r: 102, g: 205, b: 170, a: 1},\n  mediumblue: {r: 0, g: 0, b: 205, a: 1},\n  mediumorchid: {r: 186, g: 85, b: 211, a: 1},\n  mediumpurple: {r: 147, g: 112, b: 219, a: 1},\n  mediumseagreen: {r: 60, g: 179, b: 113, a: 1},\n  mediumslateblue: {r: 123, g: 104, b: 238, a: 1},\n  mediumspringgreen: {r: 0, g: 250, b: 154, a: 1},\n  mediumturquoise: {r: 72, g: 209, b: 204, a: 1},\n  mediumvioletred: {r: 199, g: 21, b: 133, a: 1},\n  midnightblue: {r: 25, g: 25, b: 112, a: 1},\n  mintcream: {r: 245, g: 255, b: 250, a: 1},\n  mistyrose: {r: 255, g: 228, b: 225, a: 1},\n  moccasin: {r: 255, g: 228, b: 181, a: 1},\n  navajowhite: {r: 255, g: 222, b: 173, a: 1},\n  navy: {r: 0, g: 0, b: 128, a: 1},\n  oldlace: {r: 253, g: 245, b: 230, a: 1},\n  olive: {r: 128, g: 128, b: 0, a: 1},\n  olivedrab: {r: 107, g: 142, b: 35, a: 1},\n  orange: {r: 255, g: 165, b: 0, a: 1},\n  orangered: {r: 255, g: 69, b: 0, a: 1},\n  orchid: {r: 218, g: 112, b: 214, a: 1},\n  palegoldenrod: {r: 238, g: 232, b: 170, a: 1},\n  palegreen: {r: 152, g: 251, b: 152, a: 1},\n  paleturquoise: {r: 175, g: 238, b: 238, a: 1},\n  palevioletred: {r: 219, g: 112, b: 147, a: 1},\n  papayawhip: {r: 255, g: 239, b: 213, a: 1},\n  peachpuff: {r: 255, g: 218, b: 185, a: 1},\n  peru: {r: 205, g: 133, b: 63, a: 1},\n  pink: {r: 255, g: 192, b: 203, a: 1},\n  plum: {r: 221, g: 160, b: 221, a: 1},\n  powderblue: {r: 176, g: 224, b: 230, a: 1},\n  purple: {r: 128, g: 0, b: 128, a: 1},\n  red: {r: 255, g: 0, b: 0, a: 1},\n  rosybrown: {r: 188, g: 143, b: 143, a: 1},\n  royalblue: {r: 65, g: 105, b: 225, a: 1},\n  saddlebrown: {r: 139, g: 69, b: 19, a: 1},\n  salmon: {r: 250, g: 128, b: 114, a: 1},\n  sandybrown: {r: 244, g: 164, b: 96, a: 1},\n  seagreen: {r: 46, g: 139, b: 87, a: 1},\n  seashell: {r: 255, g: 245, b: 238, a: 1},\n  sienna: {r: 160, g: 82, b: 45, a: 1},\n  silver: {r: 192, g: 192, b: 192, a: 1},\n  skyblue: {r: 135, g: 206, b: 235, a: 1},\n  slateblue: {r: 106, g: 90, b: 205, a: 1},\n  slategray: {r: 112, g: 128, b: 144, a: 1},\n  slategrey: {r: 112, g: 128, b: 144, a: 1},\n  snow: {r: 255, g: 250, b: 250, a: 1},\n  springgreen: {r: 0, g: 255, b: 127, a: 1},\n  steelblue: {r: 70, g: 130, b: 180, a: 1},\n  tan: {r: 210, g: 180, b: 140, a: 1},\n  teal: {r: 0, g: 128, b: 128, a: 1},\n  thistle: {r: 216, g: 191, b: 216, a: 1},\n  tomato: {r: 255, g: 99, b: 71, a: 1},\n  turquoise: {r: 64, g: 224, b: 208, a: 1},\n  violet: {r: 238, g: 130, b: 238, a: 1},\n  wheat: {r: 245, g: 222, b: 179, a: 1},\n  white: {r: 255, g: 255, b: 255, a: 1},\n  whitesmoke: {r: 245, g: 245, b: 245, a: 1},\n  yellow: {r: 255, g: 255, b: 0, a: 1},\n  yellowgreen: {r: 154, g: 205, b: 50, a: 1}\n};\n\nfunction tagcloudHelper(tags, options) {\n  if (!options && (!tags || !tags.hasOwnProperty('length'))) {\n    options = tags;\n    tags = this.site.tags;\n  }\n\n  if (!tags || !tags.length) return '';\n  options = options || {};\n\n  var min = options.min_font || 10;\n  var max = options.max_font || 20;\n  var orderby = options.orderby || 'name';\n  var order = options.order || 1;\n  var unit = options.unit || 'px';\n  var color = options.color;\n  var transform = options.transform;\n  var separator = options.separator || ' ';\n  var result = [];\n  var self = this;\n  var startColor, endColor;\n\n  if (color) {\n    startColor = new Color(options.start_color);\n    endColor = new Color(options.end_color);\n\n    if (!startColor || !endColor) color = false;\n  }\n\n  // Sort the tags\n  if (orderby === 'random' || orderby === 'rand') {\n    tags = tags.random();\n  } else {\n    tags = tags.sort(orderby, order);\n  }\n\n  // Ignore tags with zero posts\n  tags = tags.filter(function(tag) {\n    return tag.length;\n  });\n\n  // Limit the number of tags\n  if (options.amount) {\n    tags = tags.limit(options.amount);\n  }\n\n  var sizes = [];\n\n  tags.sort('length').forEach(function(tag) {\n    var length = tag.length;\n    if (~sizes.indexOf(length)) return;\n\n    sizes.push(length);\n  });\n\n  var length = sizes.length - 1;\n\n  tags.forEach(function(tag) {\n    var ratio = length ? (sizes.indexOf(tag.length) / length) : 0;\n    var size = min + (max - min) * ratio;\n    var style = 'font-size: ' + parseFloat(size.toFixed(2)) + unit + ';';\n\n    if (color) {\n      var midColor = startColor.mix(endColor, ratio);\n      style += ' color: ' + midColor.toString();\n    }\n\n    result.push(\n      '<a href=\"' + self.url_for(tag.path) + '\" style=\"' + style + '\">' +\n      (transform ? transform(tag.name) : tag.name) +\n      '</a>'\n    );\n  });\n\n  return result.join(separator);\n}\n\nfunction Color(color) {\n  if (typeof color === 'object') {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    this.a = color.a;\n  } else if (typeof color === 'string') {\n    this.parse(color);\n  } else {\n    throw new TypeError('color is required!');\n  }\n\n  if (this.r < 0 || this.r > 255 ||\n      this.g < 0 || this.g > 255 ||\n      this.b < 0 || this.b > 255 ||\n      this.a < 0 || this.a > 1) {\n    throw new Error(color + ' is invalid.');\n  }\n}\n\nColor.prototype.parse = function(color) {\n  color = color.toLowerCase();\n\n  if (colorNames.hasOwnProperty(color)) {\n    var obj = colorNames[color];\n\n    this.r = obj.r;\n    this.g = obj.g;\n    this.b = obj.b;\n    this.a = obj.a;\n\n    return;\n  }\n\n  var match, txt, code;\n\n  if (rHex3.test(color)) {\n    txt = color.substring(1);\n    code = parseInt(txt, 16);\n\n    this.r = ((code & 0xF00) >> 8) * 17;\n    this.g = ((code & 0xF0) >> 4) * 17;\n    this.b = (code & 0xF) * 17;\n    this.a = 1;\n  } else if (rHex6.test(color)) {\n    txt = color.substring(1);\n    code = parseInt(txt, 16);\n\n    this.r = (code & 0xFF0000) >> 16;\n    this.g = (code & 0xFF00) >> 8;\n    this.b = code & 0xFF;\n    this.a = 1;\n  } else if (rRGB.test(color)) {\n    match = color.match(rRGB);\n\n    this.r = match[1] | 0;\n    this.g = match[2] | 0;\n    this.b = match[3] | 0;\n    this.a = match[4] ? +match[4] : 1;\n  } else if (rHSL.test(color)) {\n    match = color.match(rHSL);\n\n    var h = +match[1] / 360;\n    var s = +match[2] / 100;\n    var l = +match[3] / 100;\n\n    this.a = match[4] ? +match[4] : 1;\n\n    if (!s) {\n      this.r = this.g = this.b = l * 255;\n    }\n\n    var q = l < 0.5 ? l * (1 + s) : l + s - (l * s);\n    var p = 2 * l - q;\n\n    var rt = h + 1 / 3;\n    var gt = h;\n    var bt = h - 1 / 3;\n\n    this.r = convertHue(p, q, rt);\n    this.g = convertHue(p, q, gt);\n    this.b = convertHue(p, q, bt);\n  } else {\n    throw new Error(color + ' is not a supported color format.');\n  }\n};\n\nColor.prototype.toString = function() {\n  if (this.a === 1) {\n    var r = convertRGB(this.r);\n    var g = convertRGB(this.g);\n    var b = convertRGB(this.b);\n\n    if (this.r % 17 || this.g % 17 || this.b % 17) {\n      return '#' + r + g + b;\n    }\n\n    return '#' + r[0] + g[0] + b[0];\n  }\n\n  return 'rgba(' + this.r + ', ' + this.g + ', ' + this.b + ', ' + parseFloat(this.a.toFixed(2)) + ')';\n};\n\nColor.prototype.mix = function(color, ratio) {\n  switch (ratio){\n    case 0:\n      return new Color(this);\n\n    case 1:\n      return new Color(color);\n  }\n\n  return new Color({\n    r: Math.round(mixValue(this.r, color.r, ratio)),\n    g: Math.round(mixValue(this.g, color.g, ratio)),\n    b: Math.round(mixValue(this.b, color.b, ratio)),\n    a: mixValue(this.a, color.a, ratio)\n  });\n};\n\nfunction convertHue(p, q, h) {\n  if (h < 0) h++;\n  if (h > 1) h--;\n\n  var color;\n\n  if (h * 6 < 1) {\n    color = p + (q - p) * h * 6;\n  } else if (h * 2 < 1) {\n    color = q;\n  } else if (h * 3 < 2) {\n    color = p + (q - p) * ((2 / 3) - h) * 6;\n  } else {\n    color = p;\n  }\n\n  return Math.round(color * 255);\n}\n\nfunction convertRGB(value) {\n  var str = value.toString(16);\n  if (value < 16) return '0' + str;\n\n  return str;\n}\n\nfunction mixValue(a, b, ratio) {\n  return a + (b - a) * ratio;\n}\n\nmodule.exports = tagcloudHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/toc.js":"'use strict';\n\nvar cheerio;\n\nfunction tocHelper(str, options) {\n  options = options || {};\n\n  if (!cheerio) cheerio = require('cheerio');\n\n  var $ = cheerio.load(str);\n  var headingsMaxDepth = options.hasOwnProperty('max_depth') ? options.max_depth : 6;\n  var headingsSelector = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].slice(0, headingsMaxDepth).join(',');\n  var headings = $(headingsSelector);\n\n  if (!headings.length) return '';\n\n  var className = options.class || 'toc';\n  var listNumber = options.hasOwnProperty('list_number') ? options.list_number : true;\n  var result = '<ol class=\"' + className + '\">';\n  var lastNumber = [0, 0, 0, 0, 0, 0];\n  var firstLevel = 0;\n  var lastLevel = 0;\n  var i = 0;\n\n  headings.each(function() {\n    var level = +this.name[1];\n    var id = $(this).attr('id');\n    var text = $(this).text();\n\n    lastNumber[level - 1]++;\n\n    for (i = level; i <= 5; i++) {\n      lastNumber[i] = 0;\n    }\n\n    if (firstLevel) {\n      for (i = level; i < lastLevel; i++) {\n        result += '</li></ol>';\n      }\n\n      if (level > lastLevel) {\n        result += '<ol class=\"' + className + '-child\">';\n      } else {\n        result += '</li>';\n      }\n    } else {\n      firstLevel = level;\n    }\n\n    result += '<li class=\"' + className + '-item ' + className + '-level-' + level + '\">';\n    result += '<a class=\"' + className + '-link\" href=\"#' + id + '\">';\n\n    if (listNumber) {\n      result += '<span class=\"' + className + '-number\">';\n\n      for (i = firstLevel - 1; i < level; i++) {\n        result += lastNumber[i] + '.';\n      }\n\n      result += '</span> ';\n    }\n\n    result += '<span class=\"' + className + '-text\">' + text + '</span></a>';\n\n    lastLevel = level;\n  });\n\n  for (i = firstLevel - 1; i < lastLevel; i++) {\n    result += '</li></ol>';\n  }\n\n  return result;\n}\n\nmodule.exports = tocHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/helper/url_for.js":"'use strict';\n\nvar url = require('url');\nvar _ = require('lodash');\n\nfunction urlForHelper(path, options) {\n  path = path || '/';\n\n  if (path[0] === '#' || path.substring(0, 2) === '//') {\n    return path;\n  }\n\n  var config = this.config;\n  var root = config.root;\n  var data = url.parse(path);\n\n  options = _.assign({\n    relative: config.relative_link\n  }, options);\n\n  // Exit if this is an external path\n  if (data.protocol) {\n    return path;\n  }\n\n  // Resolve relative url\n  if (options.relative) {\n    return this.relative_url(this.path, path);\n  }\n\n  // Prepend root path\n  path = root + path;\n\n  return path.replace(/\\/{2,}/g, '/');\n}\n\nmodule.exports = urlForHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/processor/common.js":"'use strict';\n\nvar Pattern = require('hexo-util').Pattern;\nvar moment = require('moment-timezone');\nvar minimatch = require('minimatch');\nvar _ = require('lodash');\n\nvar DURATION_MINUTE = 1000 * 60;\n\nfunction isTmpFile(path) {\n  var last = path[path.length - 1];\n  return last === '%' || last === '~';\n}\n\nfunction isHiddenFile(path) {\n  return /(^|\\/)[_\\.]/.test(path);\n}\n\nexports.ignoreTmpAndHiddenFile = new Pattern(function(path) {\n  if (isTmpFile(path) || isHiddenFile(path)) return false;\n  return true;\n});\n\nexports.isTmpFile = isTmpFile;\nexports.isHiddenFile = isHiddenFile;\n\nexports.toDate = function(date) {\n  if (!date || moment.isMoment(date)) return date;\n\n  if (!(date instanceof Date)) {\n    date = new Date(date);\n  }\n\n  if (isNaN(date.getTime())) return;\n\n  return date;\n};\n\nexports.timezone = function(date, timezone) {\n  if (moment.isMoment(date)) date = date.toDate();\n\n  var offset = date.getTimezoneOffset();\n  var ms = date.getTime();\n  var target = moment.tz.zone(timezone).offset(ms);\n  var diff = (offset - target) * DURATION_MINUTE;\n\n  return new Date(ms - diff);\n};\n\nexports.isMatch = function(path, patterns) {\n  if (!patterns) return false;\n  if (!Array.isArray(patterns)) patterns = [patterns];\n\n  patterns = _.compact(patterns);\n  if (!patterns.length) return false;\n\n  for (var i = 0, len = patterns.length; i < len; i++) {\n    if (minimatch(path, patterns[i])) return true;\n  }\n\n  return false;\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/renderer/json.js":"'use strict';\n\nfunction jsonRenderer(data) {\n  return JSON.parse(data.text);\n}\n\nmodule.exports = jsonRenderer;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/renderer/plain.js":"'use strict';\n\nfunction planRenderer(data) {\n  return data.text;\n}\n\nmodule.exports = planRenderer;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/renderer/swig.js":"'use strict';\n\nvar swig = require('swig');\nvar extras = require('swig-extras');\nvar forTag = require('swig/lib/tags/for');\n\nextras.useTag(swig, 'markdown');\nextras.useTag(swig, 'switch');\nextras.useTag(swig, 'case');\n\nextras.useFilter(swig, 'batch');\nextras.useFilter(swig, 'groupby');\nextras.useFilter(swig, 'markdown');\nextras.useFilter(swig, 'nl2br');\nextras.useFilter(swig, 'pluck');\nextras.useFilter(swig, 'split');\nextras.useFilter(swig, 'trim');\nextras.useFilter(swig, 'truncate');\n\nswig.setDefaults({\n  cache: false,\n  autoescape: false\n});\n\n// Hack: Override for tag of Swig\nswig.setTag('for', forTag.parse, function(compiler, args, content, parents, options, blockName) {\n  var compile = forTag.compile.apply(this, arguments).split('\\n');\n\n  compile.splice(3, 0, '  if (!Array.isArray(__l) && typeof __l.toArray === \"function\") { __l = __l.toArray(); }');\n\n  return compile.join('\\n');\n}, forTag.ends, true);\n\nfunction swigRenderer(data, locals) {\n  return swig.render(data.text, {\n    locals: locals,\n    filename: data.path\n  });\n}\n\nswigRenderer.compile = function(data, locals) {\n  return swig.compile(data.text, {\n    filename: data.path\n  });\n};\n\nmodule.exports = swigRenderer;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/renderer/yaml.js":"'use strict';\n\nvar yaml = require('js-yaml');\nvar escapeYAML = require('hexo-front-matter').escape;\n\nfunction yamlHelper(data) {\n  return yaml.load(escapeYAML(data.text));\n}\n\nmodule.exports = yamlHelper;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/tag/blockquote.js":"'use strict';\n\n// Based on: https://raw.github.com/imathis/octopress/master/plugins/blockquote.rb\n\nvar titlecase = require('titlecase');\n\nvar rFullCiteWithTitle = /(\\S.*)\\s+(https?:\\/\\/)(\\S+)\\s+(.+)/i;\nvar rFullCite = /(\\S.*)\\s+(https?:\\/\\/)(\\S+)/i;\nvar rAuthorTitle = /([^,]+),\\s*([^,]+)/;\nvar rAuthor = /(.+)/;\n\n/**\n* Blockquote tag\n*\n* Syntax:\n*   {% blockquote [author[, source]] [link] [source_link_title] %}\n*   Quote string\n*   {% endblockquote %}\n*/\n\nmodule.exports = function(ctx) {\n  return function blockquoteTag(args, content) {\n    var str = args.join(' ');\n    var author = '';\n    var source = '';\n    var title = '';\n    var footer = '';\n    var result = '';\n    var match;\n\n    if (str) {\n      if (rFullCiteWithTitle.test(str)) {\n        match = str.match(rFullCiteWithTitle);\n        author = match[1];\n        source = match[2] + match[3];\n        title = ctx.config.titlecase ? titlecase(match[4]) : match[4];\n      } else if (rFullCite.test(str)) {\n        match = str.match(rFullCite);\n        author = match[1];\n        source = match[2] + match[3];\n      } else if (rAuthorTitle.test(str)) {\n        match = str.match(rAuthorTitle);\n        author = match[1];\n        title = ctx.config.titlecase ? titlecase(match[2]) : match[2];\n      } else if (rAuthor.test(str)) {\n        match = str.match(rAuthor);\n        author = match[1];\n      }\n\n      if (author) footer += '<strong>' + author + '</strong>';\n\n      if (source) {\n        var link = source.replace(/^https?:\\/\\/|\\/(index.html?)?$/g, '');\n        footer += '<cite><a href=\"' + source + '\">' + (title ? title : link) + '</a></cite>';\n      } else if (title) {\n        footer += '<cite>' + title + '</cite>';\n      }\n    }\n\n    result += '<blockquote>';\n    result += ctx.render.renderSync({text: content, engine: 'markdown'});\n    if (footer) result += '<footer>' + footer + '</footer>';\n    result += '</blockquote>';\n\n    return result;\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/tag/code.js":"'use strict';\n\n// Based on: https://raw.github.com/imathis/octopress/master/plugins/code_block.rb\n\nvar util = require('hexo-util');\nvar escapeHTML = util.escapeHTML;\nvar highlight = util.highlight;\nvar stripIndent = require('strip-indent');\n\nvar rCaptionUrlTitle = /(\\S[\\S\\s]*)\\s+(https?:\\/\\/)(\\S+)\\s+(.+)/i;\nvar rCaptionUrl = /(\\S[\\S\\s]*)\\s+(https?:\\/\\/)(\\S+)/i;\nvar rCaption = /(\\S[\\S\\s]*)/;\nvar rLang = /\\s*lang:(\\w+)/i;\nvar rLineNumber = /\\s*line_number:(\\w+)/i;\nvar rHighlight = /\\s*highlight:(\\w+)/i;\nvar rFirstLine = /\\s*first_line:(\\d+)/i;\nvar rMark = /\\s*mark:([0-9,\\-]+)/i;\n\n/**\n * Code block tag\n *\n * Syntax:\n *   {% codeblock [title] [lang:language] [url] [link text] [line_number:(true|false)] [highlight:(true|false)] [first_line:number] [mark:#,#-#] %}\n *   code snippet\n *   {% endcodeblock %}\n */\n\nmodule.exports = function(ctx) {\n  return function codeTag(args, content) {\n    var arg = args.join(' ');\n    var config = ctx.config.highlight || {};\n    var enable = config.enable;\n\n    if (rHighlight.test(arg)) {\n      arg = arg.replace(rHighlight, function() {\n        enable = arguments[1] === 'true';\n        return '';\n      });\n    }\n\n    if (!enable) {\n      content = escapeHTML(content);\n      return '<pre><code>' + content + '</code></pre>';\n    }\n\n    var caption = '';\n    var lang = '';\n    var line_number = config.line_number;\n    var first_line = 1;\n    var mark = [];\n    var match;\n\n    if (rLang.test(arg)) {\n      arg = arg.replace(rLang, function() {\n        lang = arguments[1];\n        return '';\n      });\n    }\n\n    if (rLineNumber.test(arg)) {\n      arg = arg.replace(rLineNumber, function() {\n        line_number = arguments[1] === 'true';\n        return '';\n      });\n    }\n\n    if (rFirstLine.test(arg)) {\n      arg = arg.replace(rFirstLine, function() {\n        first_line = arguments[1];\n        return '';\n      });\n    }\n\n    if (rMark.test(arg)) {\n      arg = arg.replace(rMark, function() {\n        mark = arguments[1].split(',').reduce(function getMarkedLines(prev, cur) {\n          var a, b, temp;\n          if (/\\-/.test(cur)) {\n            a = Number(cur.substr(0, cur.indexOf('-')));\n            b = Number(cur.substr(cur.indexOf('-') + 1));\n            if (b < a) { // switch a & b\n              temp = a; a = b; b = temp;\n            }\n\n            for (; a <= b; a++) {\n              prev.push(a);\n            }\n\n            return prev;\n          }\n\n          prev.push(Number(cur));\n          return prev;\n        }, []);\n\n        return '';\n      });\n    }\n\n    if (rCaptionUrlTitle.test(arg)) {\n      match = arg.match(rCaptionUrlTitle);\n      caption = '<span>' + match[1] + '</span><a href=\"' + match[2] + match[3] + '\">' + match[4] + '</a>';\n    } else if (rCaptionUrl.test(arg)) {\n      match = arg.match(rCaptionUrl);\n      caption = '<span>' + match[1] + '</span><a href=\"' + match[2] + match[3] + '\">link</a>';\n    } else if (rCaption.test(arg)) {\n      match = arg.match(rCaption);\n      caption = '<span>' + match[1] + '</span>';\n    }\n\n    content = stripIndent(content);\n\n    content = highlight(content, {\n      lang: lang,\n      firstLine: first_line,\n      caption: caption,\n      gutter: line_number,\n      mark: mark,\n      tab: config.tab_replace,\n      autoDetect: config.auto_detect\n    });\n\n    content = content.replace(/{/g, '&#123;')\n      .replace(/}/g, '&#125;');\n\n    return content;\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/tag/gist.js":"'use strict';\n\n/**\n* Gist tag\n*\n* Syntax:\n*   {% gist gist_id [filename] %}\n*/\n\nfunction gistTag(args, content) {\n  var id = args.shift();\n  var file = args.length ? '?file=' + args[0] : '';\n\n  return '<script src=\"//gist.github.com/' + id + '.js' + file + '\"></script>';\n}\n\nmodule.exports = gistTag;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/tag/iframe.js":"'use strict';\n\n/**\n* Iframe tag\n*\n* Syntax:\n*   {% iframe url [width] [height] %}\n*/\n\nfunction iframeTag(args, content) {\n  var url = args[0];\n  var width = args[1] && args[1] !== 'default' ? args[1] : '100%';\n  var height = args[2] && args[2] !== 'default' ? args[2] : '300';\n\n  return '<iframe src=\"' + url + '\" width=\"' + width + '\" height=\"' + height + '\" frameborder=\"0\" allowfullscreen></iframe>';\n}\n\nmodule.exports = iframeTag;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/tag/img.js":"'use strict';\n\nvar url = require('url');\nvar util = require('hexo-util');\nvar htmlTag = util.htmlTag;\n\nvar rUrl = /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[.\\!\\/\\\\w]*))?)/;\nvar rMeta = /[\"']?([^\"']+)?[\"']?\\s*[\"']?([^\"']+)?[\"']?/;\n\n/**\n* Image tag\n*\n* Syntax:\n*   {% img [class names] /path/to/image [width] [height] [title text [alt text]] %}\n*/\nmodule.exports = function(ctx) {\n  var config = ctx.config;\n\n  function makeUrl(path) {\n    if (path[0] === '#' || path.substring(0, 2) === '//') {\n      return path;\n    }\n\n    var data = url.parse(path);\n\n    if (data && data.protocol) {\n      return path;\n    }\n\n    path = config.root + path;\n\n    return path.replace(/\\/{2,}/g, '/');\n  }\n\n  return function imgTag(args, content) {\n\n    var classes = [];\n    var meta = '';\n    var width;\n    var height;\n    var title;\n    var alt;\n    var src;\n    var item = '';\n    var i = 0;\n    var len = args.length;\n\n    // Find image URL and class name\n    for (; i < len; i++) {\n      item = args[i];\n\n      if (rUrl.test(item)) {\n        src = makeUrl(item);\n        break;\n      } else {\n        if (item[0] === '/') {\n          src = makeUrl(item);\n          break;\n        } else {\n          classes.push(item);\n        }\n      }\n    }\n\n    // Delete image URL and class name from arguments\n    args = args.slice(i + 1);\n\n    // Find image width and height\n    if (args.length) {\n      if (!/\\D+/.test(args[0])) {\n        width = args.shift();\n\n        if (args.length && !/\\D+/.test(args[0])) {\n          height = args.shift();\n        }\n      }\n\n      meta = args.join(' ');\n    }\n\n    // Find image title and alt\n    if (meta && rMeta.test(meta)) {\n      var match = meta.match(rMeta);\n      title = match[1];\n      alt = match[2];\n    }\n\n    var attrs = {\n      src: src,\n      class: classes.join(' '),\n      width: width,\n      height: height,\n      title: title,\n      alt: alt\n    };\n\n    return htmlTag('img', attrs);\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/tag/include_code.js":"'use strict';\n\nvar fs = require('hexo-fs');\nvar pathFn = require('path');\nvar stripIndent = require('strip-indent');\nvar util = require('hexo-util');\nvar highlight = util.highlight;\n\nvar rCaptionTitleFile = /(.*)?(\\s+|^)(\\/*\\S+)/;\nvar rLang = /\\s*lang:(\\w+)/i;\n\n/**\n* Include code tag\n*\n* Syntax:\n*   {% include_code [title] [lang:language] path/to/file %}\n*/\n\nmodule.exports = function(ctx) {\n  return function includeCodeTag(args) {\n    var config = ctx.config.highlight || {};\n    var codeDir = ctx.config.code_dir;\n    var arg = args.join(' ');\n    var path = '';\n    var title = '';\n    var lang = '';\n    var caption = '';\n\n    // Add trailing slash to codeDir\n    if (codeDir[codeDir.length - 1] !== '/') codeDir += '/';\n\n    if (rLang.test(arg)) {\n      arg = arg.replace(rLang, function() {\n        lang = arguments[1];\n        return '';\n      });\n    }\n\n    if (rCaptionTitleFile.test(arg)) {\n      var match = arg.match(rCaptionTitleFile);\n      title = match[1];\n      path = match[3];\n    }\n\n    // Exit if path is not defined\n    if (!path) return;\n\n    var src = pathFn.join(ctx.source_dir, codeDir, path);\n\n    return fs.exists(src).then(function(exist) {\n      if (exist) return fs.readFile(src);\n    }).then(function(code) {\n      if (!code) return;\n\n      code = stripIndent(code).trim();\n\n      if (!config.enable) {\n        return '<pre><code>' + code + '</code></pre>';\n      }\n\n      // If the title is not defined, use file name instead\n      title = title || pathFn.basename(path);\n\n      // If the language is not defined, use file extension instead\n      lang = lang || pathFn.extname(path).substring(1);\n\n      caption = '<span>' + title + '</span><a href=\"' + ctx.config.root + codeDir + path + '\">view raw</a>';\n\n      return highlight(code, {\n        lang: lang,\n        caption: caption,\n        gutter: config.line_number,\n        tab: config.tab_replace\n      });\n    });\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/tag/jsfiddle.js":"'use strict';\n\n/**\n* jsFiddle tag\n*\n* Syntax:\n*   {% jsfiddle shorttag [tabs] [skin] [height] [width] %}\n*/\n\nfunction jsfiddleTag(args, content) {\n  var id = args[0];\n  var tabs = args[1] && args[1] !== 'default' ? args[1] : 'js,resources,html,css,result';\n  var skin = args[2] && args[2] !== 'default' ? args[2] : 'light';\n  var width = args[3] && args[3] !== 'default' ? args[3] : '100%';\n  var height = args[4] && args[4] !== 'default' ? args[4] : '300';\n\n  return '<iframe scrolling=\"no\" width=\"' + width + '\" height=\"' + height + '\" src=\"//jsfiddle.net/' + id + '/embedded/' + tabs + '/' + skin + '\" frameborder=\"0\" allowfullscreen></iframe>';\n}\n\nmodule.exports = jsfiddleTag;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/tag/link.js":"'use strict';\n\nvar util = require('hexo-util');\nvar htmlTag = util.htmlTag;\n\nvar rUrl = /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[.\\!\\/\\\\w]*))?)/;\n\n/**\n* Link tag\n*\n* Syntax:\n*   {% link text url [external] [title] %}\n*/\n\nfunction linkTag(args, content) {\n  var url = '';\n  var text = [];\n  var external = false;\n  var title = '';\n  var item = '';\n  var i = 0;\n  var len = args.length;\n\n  // Find link URL and text\n  for (; i < len; i++) {\n    item = args[i];\n\n    if (rUrl.test(item)) {\n      url = item;\n      break;\n    } else {\n      text.push(item);\n    }\n  }\n\n  // Delete link URL and text from arguments\n  args = args.slice(i + 1);\n\n  // Check if the link should be open in a new window\n  // and collect the last text as the link title\n  if (args.length) {\n    var shift = args[0];\n\n    if (shift === 'true' || shift === 'false') {\n      external = shift === 'true' ? true : false;\n      args.shift();\n    }\n\n    title = args.join(' ');\n  }\n\n  var attrs = {\n    href: url,\n    title: title,\n    target: external ? '_blank' : ''\n  };\n\n  return htmlTag('a', attrs, text.join(' '));\n}\n\nmodule.exports = linkTag;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/tag/post_link.js":"'use strict';\n\n/**\n * Post link tag\n *\n * Syntax:\n *   {% post_link slug [title] %}\n */\nmodule.exports = function(ctx) {\n  var Post = ctx.model('Post');\n\n  return function postLinkTag(args) {\n    var slug = args.shift();\n    if (!slug) return;\n\n    var post = Post.findOne({slug: slug});\n    if (!post) return;\n\n    var title = args.length ? args.join(' ') : post.title;\n\n    return '<a href=\"' + ctx.config.root + post.path + '\" title=\"' + title + '\">' + title + '</a>';\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/tag/post_path.js":"'use strict';\n\n/**\n * Post path tag\n *\n * Syntax:\n *   {% post_path slug %}\n */\nmodule.exports = function(ctx) {\n  var Post = ctx.model('Post');\n\n  return function postPathTag(args) {\n    var slug = args.shift();\n    if (!slug) return;\n\n    var post = Post.findOne({slug: slug});\n    if (!post) return;\n\n    return ctx.config.root + post.path;\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/tag/pullquote.js":"'use strict';\n\n/**\n* Pullquote tag\n*\n* Syntax:\n*   {% pullquote [class] %}\n*   Quote string\n*   {% endpullquote %}\n*/\nmodule.exports = function(ctx) {\n  return function pullquoteTag(args, content) {\n    var result = '';\n\n    args.unshift('pullquote');\n\n    result += '<blockquote class=\"' + args.join(' ') + '\">';\n    result += ctx.render.renderSync({text: content, engine: 'markdown'});\n    result += '</blockquote>';\n\n    return result;\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/tag/vimeo.js":"'use strict';\n\n/**\n* Vimeo tag\n*\n* Syntax:\n*   {% vimeo video_id %}\n*/\n\nfunction vimeoTag(args, content) {\n  var id = args[0];\n\n  return '<div class=\"video-container\"><iframe src=\"//player.vimeo.com/video/' + id + '\" frameborder=\"0\" allowfullscreen></iframe></div>';\n}\n\nmodule.exports = vimeoTag;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/plugins/tag/youtube.js":"'use strict';\n\n/**\n* Youtube tag\n*\n* Syntax:\n*   {% youtube video_id %}\n*/\n\nfunction youtubeTag(args, content) {\n  var id = args[0];\n\n  return '<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/' + id + '\" frameborder=\"0\" allowfullscreen></iframe></div>';\n}\n\nmodule.exports = youtubeTag;\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/theme/processors/i18n.js":"'use strict';\n\nvar Pattern = require('hexo-util').Pattern;\nvar pathFn = require('path');\n\nexports.process = function(file) {\n  var path = file.params.path;\n  var extname = pathFn.extname(path);\n  var name = path.substring(0, path.length - extname.length);\n  var i18n = file.box.i18n;\n\n  if (file.type === 'delete') {\n    i18n.remove(name);\n    return;\n  }\n\n  return file.render().then(function(data) {\n    if (typeof data !== 'object') return;\n    i18n.set(name, data);\n  });\n};\n\nexports.pattern = new Pattern('languages/*path');\n","/home/travis/build/npmtest/node-npmtest-hexo/node_modules/hexo/lib/theme/processors/source.js":"'use strict';\n\nvar _ = require('lodash');\nvar Pattern = require('hexo-util').Pattern;\nvar common = require('../../plugins/processor/common');\n\nexports.process = function(file) {\n  var Asset = this.model('Asset');\n  var id = file.source.substring(this.base_dir.length).replace(/\\\\/g, '/');\n  var path = file.params.path;\n  var doc = Asset.findById(id);\n\n  if (file.type === 'delete') {\n    if (doc) {\n      return doc.remove();\n    }\n\n    return;\n  }\n\n  return Asset.save({\n    _id: id,\n    path: path,\n    modified: file.type !== 'skip'\n  });\n};\n\nexports.pattern = new Pattern(function(path) {\n  if (!_.startsWith(path, 'source/')) return false;\n\n  path = path.substring(7);\n  if (common.isHiddenFile(path) || common.isTmpFile(path) || ~path.indexOf('node_modules')) return false;\n\n  return {path: path};\n});\n"}